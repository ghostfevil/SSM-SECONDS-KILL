[INFO ][20180706 14:56:13,272][?:?] using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG][20180706 14:56:16,199][Log4jFilter:132] {conn-10001} connected
[DEBUG][20180706 14:56:16,209][Log4jFilter:132] {conn-10002} connected
[DEBUG][20180706 14:56:16,217][Log4jFilter:132] {conn-10003} connected
[INFO ][20180706 14:56:16,224][DruidDataSource:721] {dataSource-1} inited
[DEBUG][20180706 14:56:17,120][ExtensionLoader:927]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:17,311][ExtensionLoader:927]  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:17,495][ServiceBean:118]  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:17,587][ExtensionLoader:927]  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:17,597][ExtensionLoader:927]  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:17,605][ExtensionLoader:927]  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:17,613][ServiceConfig:529]  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:17,613][ServiceConfig:489]  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20881&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860177533, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:17,614][ServiceConfig:499]  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20881&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860177533 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=41144&registry=zookeeper&timestamp=1530860177501, dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:17,620][ExtensionLoader:927]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:17,626][ExtensionLoader:927]  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:17,645][ExtensionLoader:927]  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:17,659][ExtensionLoader:927]  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:17,668][ExtensionLoader:927]  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:17,726][NettyHelper$DubboLogger:68]  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:17,950][AbstractServer:65]  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.18.244:20881, dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:17,991][ExtensionLoader:927]  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:18,013][AbstractRegistry:199]  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=22860&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530859869674, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=22860&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530859868586}, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:18,042][ExecutionList:88]  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:18,051][ZkConnection:63] Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[INFO ][20180706 14:56:18,051][ZkEventThread:64] Starting ZkClient event thread.
[DEBUG][20180706 14:56:18,184][ZkClient:874] Awaiting connection to Zookeeper server
[DEBUG][20180706 14:56:18,185][ZkClient:628] Waiting for keeper state SyncConnected
[DEBUG][20180706 14:56:18,463][ZkClient:351] Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO ][20180706 14:56:18,464][ZkClient:449] zookeeper state changed (SyncConnected)
[DEBUG][20180706 14:56:18,464][ZkClient:395] Leaving process event
[DEBUG][20180706 14:56:18,464][ZkClient:638] State is SyncConnected
[INFO ][20180706 14:56:18,468][AbstractRegistry:269]  [DUBBO] Register: dubbo://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860177533, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:18,495][AbstractRegistry:292]  [DUBBO] Subscribe: provider://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860177533, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:18,533][AbstractRegistry:380]  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860177533, urls: [empty://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860177533], dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:18,534][RegistryProtocol$OverrideListener:361]  [DUBBO] original override urls: [empty://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860177533], dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:18,534][RegistryProtocol$OverrideListener:363]  [DUBBO] subscribe url: provider://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860177533, override urls: [empty://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860177533], dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:18,588][ExtensionLoader:927]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:18,594][ExtensionLoader:927]  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:18,601][ServiceBean:118]  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:18,611][ServiceConfig:529]  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:18,612][ServiceConfig:489]  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20881&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860178603, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:18,612][ServiceConfig:499]  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20881&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860178603 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=41144&registry=zookeeper&timestamp=1530860178603, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:18,613][AbstractRegistry:269]  [DUBBO] Register: dubbo://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860178603, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:18,623][AbstractRegistry:292]  [DUBBO] Subscribe: provider://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860178603, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:18,632][AbstractRegistry:380]  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860178603, urls: [empty://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860178603], dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:18,632][RegistryProtocol$OverrideListener:361]  [DUBBO] original override urls: [empty://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860178603], dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:18,633][RegistryProtocol$OverrideListener:363]  [DUBBO] subscribe url: provider://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860178603, override urls: [empty://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860178603], dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:19,746][AbstractConfig$1:80]  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:19,749][AbstractRegistryFactory:64]  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=41144&timestamp=1530860177501], dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:19,749][AbstractRegistry:443]  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=41144&timestamp=1530860177501, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:19,753][AbstractRegistry:279]  [DUBBO] Unregister: dubbo://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860178603, dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:19,762][Log4jFilter:132] {conn-10001} closed
[DEBUG][20180706 14:56:19,763][Log4jFilter:132] {conn-10002} closed
[DEBUG][20180706 14:56:19,763][Log4jFilter:132] {conn-10003} closed
[INFO ][20180706 14:56:19,764][DruidDataSource:1436] {dataSource-1} closed
[INFO ][20180706 14:56:20,433][AbstractRegistry:452]  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860178603, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:20,433][AbstractRegistry:279]  [DUBBO] Unregister: dubbo://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860177533, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:20,490][AbstractRegistry:452]  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860177533, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:20,490][AbstractRegistry:310]  [DUBBO] Unsubscribe: provider://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860178603, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:20,491][AbstractRegistry:468]  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860178603, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:20,493][AbstractRegistry:310]  [DUBBO] Unsubscribe: provider://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860177533, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:20,493][AbstractRegistry:468]  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860177533, dubbo version: 2.0.1, current host: 192.168.18.244
[DEBUG][20180706 14:56:20,493][ZkClient:915] Closing ZkClient...
[INFO ][20180706 14:56:20,493][ZkEventThread:82] Terminate ZkClient event thread.
[DEBUG][20180706 14:56:20,496][ZkConnection:77] Closing ZooKeeper connected to 192.168.116.168:2181
[DEBUG][20180706 14:56:20,518][ZkClient:928] Closing ZkClient...done
[INFO ][20180706 14:56:30,519][DubboProtocol:375]  [DUBBO] Close dubbo server: /192.168.18.244:20881, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:30,522][AbstractServer:142]  [DUBBO] Close NettyServer bind /0.0.0.0:20881, export /192.168.18.244:20881, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:30,527][AbstractProtocol:75]  [DUBBO] Unexport service: dubbo://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20881&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860177533, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:30,527][AbstractProtocol:75]  [DUBBO] Unexport service: dubbo://192.168.18.244:20881/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20881&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860178603, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:30,527][AbstractProtocol:75]  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20881&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860178603, dubbo version: 2.0.1, current host: 192.168.18.244
[INFO ][20180706 14:56:30,528][AbstractProtocol:75]  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20881&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=41144&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1530860177533, dubbo version: 2.0.1, current host: 192.168.18.244
