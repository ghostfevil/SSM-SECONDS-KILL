[09:55:21] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[09:55:21] Main -  [DUBBO] Use container type([spring, jetty]) to run dubbo serivce., dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:24] Connection - {conn-10001} connected
[09:55:24] Connection - {conn-10001} connected
[09:55:24] Connection - {conn-10001} connected
[09:55:24] Connection - {conn-10002} connected
[09:55:24] Connection - {conn-10002} connected
[09:55:24] Connection - {conn-10002} connected
[09:55:24] Connection - {conn-10003} connected
[09:55:24] Connection - {conn-10003} connected
[09:55:24] Connection - {conn-10003} connected
[09:55:24] DruidDataSource - {dataSource-1} inited
[09:55:35] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:35] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:35] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:35] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:35] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:35] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:35] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:35] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:35] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=21528&registry=zookeeper&timestamp=1529978135820, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:35] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:35] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:35] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:35] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:35] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:35] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:36] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:36] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:36] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.19.77:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=13060&side=provider&timestamp=1529569490221, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.19.77:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=13060&side=provider&timestamp=1529569489287}, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:36] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:36] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[09:55:36] ZkEventThread - Starting ZkClient event thread.
[09:55:36] ZkClient - Awaiting connection to Zookeeper server
[09:55:36] ZkClient - Waiting for keeper state SyncConnected
[09:55:36] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[09:55:36] ZkClient - zookeeper state changed (SyncConnected)
[09:55:36] ZkClient - Leaving process event
[09:55:36] ZkClient - State is SyncConnected
[09:55:36] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:37] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:37] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827], dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:37] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827], dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:37] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827], dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:37] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:37] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:37] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:37] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:37] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:37] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=21528&registry=zookeeper&timestamp=1529978137360, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:37] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:37] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:37] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360], dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:37] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360], dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:37] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360], dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:37] Main -  [DUBBO] Dubbo SpringContainer started!, dubbo version: 2.0.1, current host: 192.168.18.244
[09:55:38] Main -  [DUBBO] Dubbo JettyContainer started!, dubbo version: 2.0.1, current host: 192.168.18.244
[09:57:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[09:57:57] ZkClient - Received event: WatchedEvent state:Disconnected type:None path:null
[09:57:57] ZkClient - zookeeper state changed (Disconnected)
[09:57:57] ZkEventThread - New event: ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@39bda712]
[09:57:57] ZkClient - Leaving process event
[09:57:57] ZkEventThread - Delivering event #1 ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@39bda712]
[09:57:57] ZkEventThread - Delivering event #1 done
[09:58:01] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:53319,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827, dubbo version: 2.0.1, current host: 192.168.18.244
[09:58:37] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[09:58:43] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[09:58:46] ZkClient - Received event: WatchedEvent state:Expired type:None path:null
[09:58:46] ZkClient - zookeeper state changed (Expired)
[09:58:46] ZkEventThread - New event: ZkEvent[State changed to Expired sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@39bda712]
[09:58:46] ZkEventThread - Delivering event #2 ZkEvent[State changed to Expired sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@39bda712]
[09:58:46] ZkEventThread - Delivering event #2 done
[09:58:46] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[09:58:46] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[09:58:46] ZkEventThread - New event: ZkEvent[New session event sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@39bda712]
[09:58:46] ZkEventThread - New event: ZkEvent[Children of /dubbo/com.crossoverJie.seconds.kill.api.OrderServiceFacade/configurators changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@4d8992c6]
[09:58:46] ZkEventThread - New event: ZkEvent[Children of /dubbo/com.crossoverJie.seconds.kill.api.StockServiceFacade/configurators changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@19d83952]
[09:58:46] ZkClient - Leaving process event
[09:58:46] ZkEventThread - Delivering event #3 ZkEvent[New session event sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@39bda712]
[09:58:46] ZookeeperRegistry -  [DUBBO] Recover register url [dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827, dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360], dubbo version: 2.0.1, current host: 192.168.18.244
[09:58:46] ZookeeperRegistry -  [DUBBO] Recover subscribe url [provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360, provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827], dubbo version: 2.0.1, current host: 192.168.18.244
[09:58:46] ZkEventThread - Delivering event #3 done
[09:58:46] ZkEventThread - Delivering event #4 ZkEvent[Children of /dubbo/com.crossoverJie.seconds.kill.api.OrderServiceFacade/configurators changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@4d8992c6]
[09:58:46] ZookeeperRegistry -  [DUBBO] Retry register [dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827, dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360], dubbo version: 2.0.1, current host: 192.168.18.244
[09:58:49] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[09:58:49] ZkClient - zookeeper state changed (SyncConnected)
[09:58:49] ZkEventThread - New event: ZkEvent[State changed to SyncConnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@39bda712]
[09:58:49] ZkClient - Leaving process event
[09:58:50] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827], dubbo version: 2.0.1, current host: 192.168.18.244
[09:58:50] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827], dubbo version: 2.0.1, current host: 192.168.18.244
[09:58:50] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827], dubbo version: 2.0.1, current host: 192.168.18.244
[09:58:50] ZkEventThread - Delivering event #4 done
[09:58:50] ZkEventThread - Delivering event #5 ZkEvent[Children of /dubbo/com.crossoverJie.seconds.kill.api.StockServiceFacade/configurators changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@19d83952]
[09:58:51] ZookeeperRegistry -  [DUBBO] Retry subscribe {provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360=[com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener@5cf3157b], provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827=[com.alibaba.dubbo.registry.integration.RegistryProtocol$OverrideListener@372ca2d6]}, dubbo version: 2.0.1, current host: 192.168.18.244
[09:58:51] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360], dubbo version: 2.0.1, current host: 192.168.18.244
[09:58:51] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360], dubbo version: 2.0.1, current host: 192.168.18.244
[09:58:51] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360], dubbo version: 2.0.1, current host: 192.168.18.244
[09:58:51] ZkEventThread - Delivering event #5 done
[09:58:51] ZkEventThread - Delivering event #6 ZkEvent[State changed to SyncConnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@39bda712]
[09:58:51] ZkEventThread - Delivering event #6 done
[09:58:52] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360], dubbo version: 2.0.1, current host: 192.168.18.244
[09:58:52] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360], dubbo version: 2.0.1, current host: 192.168.18.244
[09:58:52] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360], dubbo version: 2.0.1, current host: 192.168.18.244
[09:58:53] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827], dubbo version: 2.0.1, current host: 192.168.18.244
[09:58:53] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827], dubbo version: 2.0.1, current host: 192.168.18.244
[09:58:53] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827], dubbo version: 2.0.1, current host: 192.168.18.244
[09:59:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[09:59:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:00:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:00:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:01:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:01:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:02:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:02:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:03:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:03:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:04:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:04:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:05:16] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53487, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:05:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:05:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:06:16] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53487, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:06:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:06:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:07:16] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53487, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:07:40] ZkClient - Received event: WatchedEvent state:Disconnected type:None path:null
[10:07:40] ZkClient - zookeeper state changed (Disconnected)
[10:07:40] ZkEventThread - New event: ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@39bda712]
[10:07:40] ZkClient - Leaving process event
[10:07:40] ZkEventThread - Delivering event #7 ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@39bda712]
[10:07:40] ZkEventThread - Delivering event #7 done
[10:07:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:08:00] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:08:01] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[10:08:01] ZkClient - zookeeper state changed (SyncConnected)
[10:08:01] ZkEventThread - New event: ZkEvent[State changed to SyncConnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@39bda712]
[10:08:01] ZkClient - Leaving process event
[10:08:01] ZkEventThread - Delivering event #8 ZkEvent[State changed to SyncConnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@39bda712]
[10:08:01] ZkEventThread - Delivering event #8 done
[10:08:16] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53487, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:08:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:08:59] ZkClient - Received event: WatchedEvent state:Disconnected type:None path:null
[10:08:59] ZkClient - zookeeper state changed (Disconnected)
[10:08:59] ZkEventThread - New event: ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@39bda712]
[10:08:59] ZkClient - Leaving process event
[10:08:59] ZkEventThread - Delivering event #9 ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@39bda712]
[10:08:59] ZkEventThread - Delivering event #9 done
[10:09:06] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:09:13] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[10:09:13] ZkClient - zookeeper state changed (SyncConnected)
[10:09:13] ZkEventThread - New event: ZkEvent[State changed to SyncConnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@39bda712]
[10:09:13] ZkClient - Leaving process event
[10:09:13] ZkEventThread - Delivering event #10 ZkEvent[State changed to SyncConnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@39bda712]
[10:09:13] ZkEventThread - Delivering event #10 done
[10:09:16] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53487, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:09:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:09:46] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:10:16] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53487, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:10:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:10:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:11:16] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53487, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:11:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:11:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:12:16] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53487, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:12:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:12:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:13:16] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53487, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:13:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:13:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:14:16] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53487, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:14:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:14:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:15:16] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53487, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:15:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:15:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:16:16] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53487, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:16:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:16:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:17:16] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53487, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:17:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:17:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:18:16] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53487, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:18:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:18:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:19:16] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53487, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:19:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:19:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:20:16] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53487, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:20:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:20:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:21:16] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53487, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:21:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:21:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:22:16] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53487, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:22:38] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:53487,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827, dubbo version: 2.0.1, current host: 192.168.18.244
[10:22:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:22:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:23:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:23:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:24:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:24:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:25:22] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53903, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:25:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:25:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:26:22] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53903, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:26:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:26:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:27:22] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53903, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:27:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:27:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:28:22] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53903, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:28:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:28:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:29:22] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53903, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:29:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:29:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:30:22] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:53903, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:30:36] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:53903,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827, dubbo version: 2.0.1, current host: 192.168.18.244
[10:30:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:30:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:31:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:31:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:32:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:32:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:33:34] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:54061, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:33:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:33:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[10:34:34] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:54061, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:34:43] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:54061,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827, dubbo version: 2.0.1, current host: 192.168.18.244
[10:34:44] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:53267, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[10:34:44] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:37] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[11:43:38] Connection - {conn-10001} connected
[11:43:38] Connection - {conn-10001} connected
[11:43:38] Connection - {conn-10001} connected
[11:43:39] Connection - {conn-10002} connected
[11:43:39] Connection - {conn-10002} connected
[11:43:39] Connection - {conn-10002} connected
[11:43:39] Connection - {conn-10003} connected
[11:43:39] Connection - {conn-10003} connected
[11:43:39] Connection - {conn-10003} connected
[11:43:39] DruidDataSource - {dataSource-1} inited
[11:43:57] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:57] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:57] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:57] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:57] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:57] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:57] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:57] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984637707, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:57] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984637707 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=47780&registry=zookeeper&timestamp=1529984637700, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:57] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:57] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:57] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:57] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:57] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:57] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978137360, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21528&side=provider&timestamp=1529978135827}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[11:43:58] ZkEventThread - Starting ZkClient event thread.
[11:43:58] ZkClient - Awaiting connection to Zookeeper server
[11:43:58] ZkClient - Waiting for keeper state SyncConnected
[11:43:58] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[11:43:58] ZkClient - zookeeper state changed (SyncConnected)
[11:43:58] ZkClient - Leaving process event
[11:43:58] ZkClient - State is SyncConnected
[11:43:58] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984637707, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984637707, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984637707, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984637707], dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984637707], dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984637707, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984637707], dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984638442, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984638442 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=47780&registry=zookeeper&timestamp=1529984638442, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984638442, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984638442, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984638442, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984638442], dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984638442], dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984638442, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984638442], dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=47780&timestamp=1529984637700], dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=47780&timestamp=1529984637700, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984638442, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] Connection - {conn-10001} closed
[11:43:58] Connection - {conn-10001} closed
[11:43:58] Connection - {conn-10001} closed
[11:43:58] Connection - {conn-10002} closed
[11:43:58] Connection - {conn-10002} closed
[11:43:58] Connection - {conn-10002} closed
[11:43:58] Connection - {conn-10003} closed
[11:43:58] Connection - {conn-10003} closed
[11:43:58] Connection - {conn-10003} closed
[11:43:58] DruidDataSource - {dataSource-1} closed
[11:43:58] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984638442, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:58] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984637707, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:59] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984637707, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:59] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984638442, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:59] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984638442, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:59] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984637707, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:59] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984637707, dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:59] ZkClient - Closing ZkClient...
[11:43:59] ZkEventThread - Terminate ZkClient event thread.
[11:43:59] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[11:43:59] ZkClient - Closing ZkClient...done
[11:43:59] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[11:43:59] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:55911,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984637707, dubbo version: 2.0.1, current host: 192.168.18.244
[11:44:09] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:44:09] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:44:09] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984638442, dubbo version: 2.0.1, current host: 192.168.18.244
[11:44:09] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984637707, dubbo version: 2.0.1, current host: 192.168.18.244
[11:44:09] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984638442, dubbo version: 2.0.1, current host: 192.168.18.244
[11:44:09] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984637707, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:22] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[11:45:23] Connection - {conn-10001} connected
[11:45:23] Connection - {conn-10001} connected
[11:45:23] Connection - {conn-10001} connected
[11:45:23] Connection - {conn-10002} connected
[11:45:23] Connection - {conn-10002} connected
[11:45:23] Connection - {conn-10002} connected
[11:45:23] Connection - {conn-10003} connected
[11:45:23] Connection - {conn-10003} connected
[11:45:23] Connection - {conn-10003} connected
[11:45:23] DruidDataSource - {dataSource-1} inited
[11:45:23] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:23] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:23] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:23] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:23] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:23] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:23] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:23] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984723797, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:23] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984723797 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=9116&registry=zookeeper&timestamp=1529984723791, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:23] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:23] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:23] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:23] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:23] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:23] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984638442, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=47780&side=provider&timestamp=1529984637707}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[11:45:24] ZkEventThread - Starting ZkClient event thread.
[11:45:24] ZkClient - Awaiting connection to Zookeeper server
[11:45:24] ZkClient - Waiting for keeper state SyncConnected
[11:45:24] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[11:45:24] ZkClient - zookeeper state changed (SyncConnected)
[11:45:24] ZkClient - Leaving process event
[11:45:24] ZkClient - State is SyncConnected
[11:45:24] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984723797, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984723797, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984723797, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984723797], dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984723797], dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984723797, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984723797], dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984724359, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984724359 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=9116&registry=zookeeper&timestamp=1529984724359, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984724359, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984724359, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984724359, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984724359], dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984724359], dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984724359, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984724359], dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=9116&timestamp=1529984723791], dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=9116&timestamp=1529984723791, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984724359, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] Connection - {conn-10001} closed
[11:45:24] Connection - {conn-10001} closed
[11:45:24] Connection - {conn-10001} closed
[11:45:24] Connection - {conn-10002} closed
[11:45:24] Connection - {conn-10002} closed
[11:45:24] Connection - {conn-10002} closed
[11:45:24] Connection - {conn-10003} closed
[11:45:24] Connection - {conn-10003} closed
[11:45:24] Connection - {conn-10003} closed
[11:45:24] DruidDataSource - {dataSource-1} closed
[11:45:24] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984724359, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984723797, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984723797, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984724359, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984724359, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984723797, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984723797, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] ZkClient - Closing ZkClient...
[11:45:24] ZkEventThread - Terminate ZkClient event thread.
[11:45:24] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[11:45:24] ZkClient - Closing ZkClient...done
[11:45:24] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:24] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:55942,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984723797, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:34] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:34] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:34] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984724359, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:34] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984723797, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:34] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984724359, dubbo version: 2.0.1, current host: 192.168.18.244
[11:45:34] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984723797, dubbo version: 2.0.1, current host: 192.168.18.244
[11:46:26] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[11:46:27] Connection - {conn-10001} connected
[11:46:27] Connection - {conn-10001} connected
[11:46:27] Connection - {conn-10001} connected
[11:46:27] Connection - {conn-10002} connected
[11:46:27] Connection - {conn-10002} connected
[11:46:27] Connection - {conn-10002} connected
[11:46:27] Connection - {conn-10003} connected
[11:46:27] Connection - {conn-10003} connected
[11:46:27] Connection - {conn-10003} connected
[11:46:27] DruidDataSource - {dataSource-1} inited
[11:49:30] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971242, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971242 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=18692&registry=zookeeper&timestamp=1529984971235, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984724359, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9116&side=provider&timestamp=1529984723797}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[11:49:31] ZkEventThread - Starting ZkClient event thread.
[11:49:31] ZkClient - Awaiting connection to Zookeeper server
[11:49:31] ZkClient - Waiting for keeper state SyncConnected
[11:49:31] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[11:49:31] ZkClient - zookeeper state changed (SyncConnected)
[11:49:31] ZkClient - Leaving process event
[11:49:31] ZkClient - State is SyncConnected
[11:49:31] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971242, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971242, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971242, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971242], dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971242], dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971242, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971242], dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971859, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971859 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=18692&registry=zookeeper&timestamp=1529984971859, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971859, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:31] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971859, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:32] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971859, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971859], dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:32] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971859], dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:32] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971859, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971859], dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:32] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:32] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=18692&timestamp=1529984971235], dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:32] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=18692&timestamp=1529984971235, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:32] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971859, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:32] Connection - {conn-10001} closed
[11:49:32] Connection - {conn-10001} closed
[11:49:32] Connection - {conn-10001} closed
[11:49:32] Connection - {conn-10002} closed
[11:49:32] Connection - {conn-10002} closed
[11:49:32] Connection - {conn-10002} closed
[11:49:32] Connection - {conn-10003} closed
[11:49:32] Connection - {conn-10003} closed
[11:49:32] Connection - {conn-10003} closed
[11:49:32] DruidDataSource - {dataSource-1} closed
[11:49:32] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971859, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:32] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971242, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:32] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971242, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:32] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971242, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:32] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971242, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:32] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971859, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:32] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971859, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:32] ZkClient - Closing ZkClient...
[11:49:32] ZkEventThread - Terminate ZkClient event thread.
[11:49:32] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[11:49:32] ZkClient - Closing ZkClient...done
[11:49:32] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:32] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:56097,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971242, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:42] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:42] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:42] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971859, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:42] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971242, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:42] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971859, dubbo version: 2.0.1, current host: 192.168.18.244
[11:49:42] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971242, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:33] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[11:52:34] Connection - {conn-10001} connected
[11:52:34] Connection - {conn-10001} connected
[11:52:34] Connection - {conn-10001} connected
[11:52:34] Connection - {conn-10002} connected
[11:52:34] Connection - {conn-10002} connected
[11:52:34] Connection - {conn-10002} connected
[11:52:34] Connection - {conn-10003} connected
[11:52:34] Connection - {conn-10003} connected
[11:52:34] Connection - {conn-10003} connected
[11:52:34] DruidDataSource - {dataSource-1} inited
[11:52:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985162375, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985162375 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=12340&registry=zookeeper&timestamp=1529985162368, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971859, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=18692&side=provider&timestamp=1529984971242}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:42] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[11:52:43] ZkClient - Awaiting connection to Zookeeper server
[11:52:43] ZkClient - Waiting for keeper state SyncConnected
[11:52:43] ZkEventThread - Starting ZkClient event thread.
[11:52:43] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[11:52:43] ZkClient - zookeeper state changed (SyncConnected)
[11:52:43] ZkClient - Leaving process event
[11:52:43] ZkClient - State is SyncConnected
[11:52:43] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985162375, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:43] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985162375, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:43] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985162375, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985162375], dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:43] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985162375], dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:43] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985162375, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985162375], dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:43] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:43] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:43] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:43] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:43] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985163795, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:43] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985163795 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=12340&registry=zookeeper&timestamp=1529985163795, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:43] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985163795, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:44] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985163795, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:44] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985163795, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985163795], dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:44] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985163795], dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:44] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985163795, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985163795], dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:44] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:44] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=12340&timestamp=1529985162368], dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:44] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=12340&timestamp=1529985162368, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:44] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985163795, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:44] Connection - {conn-10001} closed
[11:52:44] Connection - {conn-10001} closed
[11:52:44] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985163795, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:44] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985162375, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:44] Connection - {conn-10001} closed
[11:52:44] Connection - {conn-10002} closed
[11:52:44] Connection - {conn-10002} closed
[11:52:44] Connection - {conn-10002} closed
[11:52:44] Connection - {conn-10003} closed
[11:52:44] Connection - {conn-10003} closed
[11:52:44] Connection - {conn-10003} closed
[11:52:44] DruidDataSource - {dataSource-1} closed
[11:52:44] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985162375, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:44] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985163795, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:44] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985163795, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:44] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985162375, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:44] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985162375, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:44] ZkClient - Closing ZkClient...
[11:52:44] ZkEventThread - Terminate ZkClient event thread.
[11:52:44] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[11:52:44] ZkClient - Closing ZkClient...done
[11:52:44] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:44] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:56231,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985162375, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:54] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:54] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:54] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985163795, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:54] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985162375, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:54] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985163795, dubbo version: 2.0.1, current host: 192.168.18.244
[11:52:54] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985162375, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:29] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[11:54:30] Connection - {conn-10001} connected
[11:54:30] Connection - {conn-10001} connected
[11:54:30] Connection - {conn-10001} connected
[11:54:30] Connection - {conn-10002} connected
[11:54:30] Connection - {conn-10002} connected
[11:54:30] Connection - {conn-10002} connected
[11:54:30] Connection - {conn-10003} connected
[11:54:30] Connection - {conn-10003} connected
[11:54:30] Connection - {conn-10003} connected
[11:54:30] DruidDataSource - {dataSource-1} inited
[11:54:37] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:37] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:37] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:37] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:37] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:37] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:37] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:37] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985277676, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:37] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985277676 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=48516&registry=zookeeper&timestamp=1529985277668, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:37] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:37] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:37] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:37] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:37] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:37] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985163795, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=12340&side=provider&timestamp=1529985162375}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[11:54:38] ZkEventThread - Starting ZkClient event thread.
[11:54:38] ZkClient - Awaiting connection to Zookeeper server
[11:54:38] ZkClient - Waiting for keeper state SyncConnected
[11:54:38] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[11:54:38] ZkClient - zookeeper state changed (SyncConnected)
[11:54:38] ZkClient - Leaving process event
[11:54:38] ZkClient - State is SyncConnected
[11:54:38] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985277676, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985277676, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985277676, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985277676], dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985277676], dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985277676, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985277676], dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985278289, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985278289 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=48516&registry=zookeeper&timestamp=1529985278289, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985278289, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985278289, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985278289, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985278289], dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985278289], dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985278289, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985278289], dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=48516&timestamp=1529985277668], dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=48516&timestamp=1529985277668, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985277676, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] Connection - {conn-10001} closed
[11:54:38] Connection - {conn-10001} closed
[11:54:38] Connection - {conn-10001} closed
[11:54:38] Connection - {conn-10002} closed
[11:54:38] Connection - {conn-10002} closed
[11:54:38] Connection - {conn-10002} closed
[11:54:38] Connection - {conn-10003} closed
[11:54:38] Connection - {conn-10003} closed
[11:54:38] Connection - {conn-10003} closed
[11:54:38] DruidDataSource - {dataSource-1} closed
[11:54:38] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985277676, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985278289, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985278289, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985278289, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985278289, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985277676, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985277676, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] ZkClient - Closing ZkClient...
[11:54:38] ZkEventThread - Terminate ZkClient event thread.
[11:54:38] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[11:54:38] ZkClient - Closing ZkClient...done
[11:54:38] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:38] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:56293,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985277676, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:48] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:48] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:48] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985278289, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:48] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985277676, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:48] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985278289, dubbo version: 2.0.1, current host: 192.168.18.244
[11:54:48] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985277676, dubbo version: 2.0.1, current host: 192.168.18.244
[11:55:35] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[11:55:36] Connection - {conn-10001} connected
[11:55:36] Connection - {conn-10001} connected
[11:55:36] Connection - {conn-10001} connected
[11:55:36] Connection - {conn-10002} connected
[11:55:36] Connection - {conn-10002} connected
[11:55:36] Connection - {conn-10002} connected
[11:55:36] Connection - {conn-10003} connected
[11:55:36] Connection - {conn-10003} connected
[11:55:36] Connection - {conn-10003} connected
[11:55:36] DruidDataSource - {dataSource-1} inited
[11:56:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:40] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:40] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:40] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985400705, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:40] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985400705 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=43688&registry=zookeeper&timestamp=1529985400681, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:40] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985278289, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48516&side=provider&timestamp=1529985277676}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[11:56:41] ZkEventThread - Starting ZkClient event thread.
[11:56:41] ZkClient - Awaiting connection to Zookeeper server
[11:56:41] ZkClient - Waiting for keeper state SyncConnected
[11:56:41] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[11:56:41] ZkClient - zookeeper state changed (SyncConnected)
[11:56:41] ZkClient - Leaving process event
[11:56:41] ZkClient - State is SyncConnected
[11:56:41] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985400705, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985400705, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985400705, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985400705], dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985400705], dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985400705, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985400705], dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985401332, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985401332 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=43688&registry=zookeeper&timestamp=1529985401332, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985401332, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985401332, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985401332, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985401332], dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985401332], dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985401332, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985401332], dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] Connection - {conn-10001} closed
[11:56:41] Connection - {conn-10001} closed
[11:56:41] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=43688&timestamp=1529985400681], dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=43688&timestamp=1529985400681, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985400705, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] Connection - {conn-10001} closed
[11:56:41] Connection - {conn-10002} closed
[11:56:41] Connection - {conn-10002} closed
[11:56:41] Connection - {conn-10002} closed
[11:56:41] Connection - {conn-10003} closed
[11:56:41] Connection - {conn-10003} closed
[11:56:41] Connection - {conn-10003} closed
[11:56:41] DruidDataSource - {dataSource-1} closed
[11:56:41] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985400705, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985401332, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985401332, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985400705, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985400705, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985401332, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985401332, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:41] ZkClient - Closing ZkClient...
[11:56:41] ZkEventThread - Terminate ZkClient event thread.
[11:56:41] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[11:56:42] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:42] ZkClient - Closing ZkClient...done
[11:56:42] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:56392,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985400705, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:52] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:52] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:52] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985401332, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:52] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985400705, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:52] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985401332, dubbo version: 2.0.1, current host: 192.168.18.244
[11:56:52] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985400705, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:40] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[11:59:41] Connection - {conn-10001} connected
[11:59:41] Connection - {conn-10001} connected
[11:59:41] Connection - {conn-10001} connected
[11:59:41] Connection - {conn-10002} connected
[11:59:41] Connection - {conn-10002} connected
[11:59:41] Connection - {conn-10002} connected
[11:59:41] Connection - {conn-10003} connected
[11:59:41] Connection - {conn-10003} connected
[11:59:41] Connection - {conn-10003} connected
[11:59:41] DruidDataSource - {dataSource-1} inited
[11:59:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985582480, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985582480 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=48084&registry=zookeeper&timestamp=1529985582473, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985401332, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=43688&side=provider&timestamp=1529985400705}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[11:59:42] ZkEventThread - Starting ZkClient event thread.
[11:59:42] ZkClient - Awaiting connection to Zookeeper server
[11:59:42] ZkClient - Waiting for keeper state SyncConnected
[11:59:42] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[11:59:42] ZkClient - zookeeper state changed (SyncConnected)
[11:59:42] ZkClient - Leaving process event
[11:59:42] ZkClient - State is SyncConnected
[11:59:42] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985582480, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985582480, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985582480, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985582480], dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985582480], dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985582480, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985582480], dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985583005, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985583005 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=48084&registry=zookeeper&timestamp=1529985583005, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985583005, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985583005, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985583005, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985583005], dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985583005], dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985583005, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985583005], dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] Connection - {conn-10001} closed
[11:59:43] Connection - {conn-10001} closed
[11:59:43] Connection - {conn-10001} closed
[11:59:43] Connection - {conn-10002} closed
[11:59:43] Connection - {conn-10002} closed
[11:59:43] Connection - {conn-10002} closed
[11:59:43] Connection - {conn-10003} closed
[11:59:43] Connection - {conn-10003} closed
[11:59:43] Connection - {conn-10003} closed
[11:59:43] DruidDataSource - {dataSource-1} closed
[11:59:43] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=48084&timestamp=1529985582473], dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=48084&timestamp=1529985582473, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985582480, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985582480, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985583005, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985583005, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985583005, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985583005, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985582480, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985582480, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:43] ZkClient - Closing ZkClient...
[11:59:43] ZkEventThread - Terminate ZkClient event thread.
[11:59:43] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[11:59:43] ZkClient - Closing ZkClient...done
[11:59:44] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:44] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:56467,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985582480, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:53] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:53] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:53] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985583005, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:53] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985582480, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:53] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985583005, dubbo version: 2.0.1, current host: 192.168.18.244
[11:59:53] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985582480, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:15] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[12:01:16] Connection - {conn-10001} connected
[12:01:16] Connection - {conn-10001} connected
[12:01:16] Connection - {conn-10001} connected
[12:01:16] Connection - {conn-10002} connected
[12:01:16] Connection - {conn-10002} connected
[12:01:16] Connection - {conn-10002} connected
[12:01:16] Connection - {conn-10003} connected
[12:01:16] Connection - {conn-10003} connected
[12:01:16] Connection - {conn-10003} connected
[12:01:16] DruidDataSource - {dataSource-1} inited
[12:01:16] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:16] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677146, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677146 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=11956&registry=zookeeper&timestamp=1529985677136, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985583005, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=48084&side=provider&timestamp=1529985582480}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[12:01:17] ZkEventThread - Starting ZkClient event thread.
[12:01:17] ZkClient - Awaiting connection to Zookeeper server
[12:01:17] ZkClient - Waiting for keeper state SyncConnected
[12:01:17] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[12:01:17] ZkClient - zookeeper state changed (SyncConnected)
[12:01:17] ZkClient - Leaving process event
[12:01:17] ZkClient - State is SyncConnected
[12:01:17] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677146, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677146, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677146, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677146], dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677146], dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677146, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677146], dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677958, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677958 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=11956&registry=zookeeper&timestamp=1529985677958, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677958, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:17] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677958, dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:18] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677958, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677958], dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:18] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677958], dubbo version: 2.0.1, current host: 192.168.18.244
[12:01:18] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677958, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677958], dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:18] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:56505, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:43] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:43] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=11956&timestamp=1529985677136], dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:43] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=11956&timestamp=1529985677136, dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:43] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677146, dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:43] Connection - {conn-10001} closed
[12:02:43] Connection - {conn-10001} closed
[12:02:43] Connection - {conn-10001} closed
[12:02:43] Connection - {conn-10002} closed
[12:02:43] Connection - {conn-10002} closed
[12:02:43] Connection - {conn-10002} closed
[12:02:43] Connection - {conn-10003} closed
[12:02:43] Connection - {conn-10003} closed
[12:02:43] Connection - {conn-10003} closed
[12:02:43] DruidDataSource - {dataSource-1} closed
[12:02:43] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677146, dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:43] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677958, dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:43] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677958, dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:43] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677146, dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:43] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677146, dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:43] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677958, dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:43] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677958, dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:43] ZkClient - Closing ZkClient...
[12:02:43] ZkEventThread - Terminate ZkClient event thread.
[12:02:43] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[12:02:43] ZkClient - Closing ZkClient...done
[12:02:43] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:43] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:56505,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677146, dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:53] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:53] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:53] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677958, dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:53] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677146, dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:53] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677958, dubbo version: 2.0.1, current host: 192.168.18.244
[12:02:53] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677146, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:51] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[12:05:52] Connection - {conn-10001} connected
[12:05:52] Connection - {conn-10001} connected
[12:05:52] Connection - {conn-10001} connected
[12:05:52] Connection - {conn-10002} connected
[12:05:52] Connection - {conn-10002} connected
[12:05:52] Connection - {conn-10002} connected
[12:05:52] Connection - {conn-10003} connected
[12:05:52] Connection - {conn-10003} connected
[12:05:52] Connection - {conn-10003} connected
[12:05:52] DruidDataSource - {dataSource-1} inited
[12:05:52] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:52] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953137, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953137 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=33660&registry=zookeeper&timestamp=1529985953130, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677958, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=11956&side=provider&timestamp=1529985677146}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[12:05:53] ZkEventThread - Starting ZkClient event thread.
[12:05:53] ZkClient - Awaiting connection to Zookeeper server
[12:05:53] ZkClient - Waiting for keeper state SyncConnected
[12:05:53] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[12:05:53] ZkClient - zookeeper state changed (SyncConnected)
[12:05:53] ZkClient - Leaving process event
[12:05:53] ZkClient - State is SyncConnected
[12:05:53] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953137, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953137, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953137, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953137], dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953137], dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953137, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953137], dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953730, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953730 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=33660&registry=zookeeper&timestamp=1529985953730, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953730, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953730, dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953730, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953730], dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953730], dubbo version: 2.0.1, current host: 192.168.18.244
[12:05:53] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953730, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953730], dubbo version: 2.0.1, current host: 192.168.18.244
[12:06:53] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:56599, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:40] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:40] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=33660&timestamp=1529985953130], dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:40] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=33660&timestamp=1529985953130, dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:40] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953730, dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:40] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953730, dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:40] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953137, dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:40] Connection - {conn-10001} closed
[12:07:40] Connection - {conn-10001} closed
[12:07:40] Connection - {conn-10001} closed
[12:07:40] Connection - {conn-10002} closed
[12:07:40] Connection - {conn-10002} closed
[12:07:40] Connection - {conn-10002} closed
[12:07:40] Connection - {conn-10003} closed
[12:07:40] Connection - {conn-10003} closed
[12:07:40] Connection - {conn-10003} closed
[12:07:40] DruidDataSource - {dataSource-1} closed
[12:07:41] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953137, dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:41] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953137, dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:41] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953137, dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:41] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953730, dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:41] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953730, dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:41] ZkClient - Closing ZkClient...
[12:07:41] ZkEventThread - Terminate ZkClient event thread.
[12:07:41] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[12:07:41] ZkClient - Closing ZkClient...done
[12:07:41] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:41] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:56599,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953137, dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:51] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:51] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:51] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953730, dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:51] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953137, dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:51] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953730, dubbo version: 2.0.1, current host: 192.168.18.244
[12:07:51] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953137, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:22] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[14:26:25] Connection - {conn-10001} connected
[14:26:25] Connection - {conn-10001} connected
[14:26:25] Connection - {conn-10001} connected
[14:26:25] Connection - {conn-10002} connected
[14:26:25] Connection - {conn-10002} connected
[14:26:25] Connection - {conn-10002} connected
[14:26:25] Connection - {conn-10003} connected
[14:26:25] Connection - {conn-10003} connected
[14:26:25] Connection - {conn-10003} connected
[14:26:25] DruidDataSource - {dataSource-1} inited
[14:26:25] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:25] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:26] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:26] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:26] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994386018, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:26] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994386018 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=46680&registry=zookeeper&timestamp=1529994386012, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:26] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:26] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:26] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953730, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=33660&side=provider&timestamp=1529985953137}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:26] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:26] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[14:26:26] ZkEventThread - Starting ZkClient event thread.
[14:26:26] ZkClient - Awaiting connection to Zookeeper server
[14:26:26] ZkClient - Waiting for keeper state SyncConnected
[14:26:42] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[14:26:42] ZkClient - zookeeper state changed (SyncConnected)
[14:26:42] ZkClient - Leaving process event
[14:26:42] ZkClient - State is SyncConnected
[14:26:42] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994386018, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:42] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994386018, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:44] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994386018, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994386018], dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:44] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994386018], dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:44] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994386018, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994386018], dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:44] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:44] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:44] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:44] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:44] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994404418, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:44] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994404418 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=46680&registry=zookeeper&timestamp=1529994404418, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:44] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994404418, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:48] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994404418, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:51] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994404418, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994404418], dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:51] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994404418], dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:51] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994404418, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994404418], dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:51] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:51] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=46680&timestamp=1529994386012], dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:51] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=46680&timestamp=1529994386012, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:51] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994404418, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:51] Connection - {conn-10001} closed
[14:26:51] Connection - {conn-10001} closed
[14:26:51] Connection - {conn-10001} closed
[14:26:51] Connection - {conn-10002} closed
[14:26:51] Connection - {conn-10002} closed
[14:26:51] Connection - {conn-10002} closed
[14:26:51] Connection - {conn-10003} closed
[14:26:51] Connection - {conn-10003} closed
[14:26:51] Connection - {conn-10003} closed
[14:26:51] DruidDataSource - {dataSource-1} closed
[14:26:54] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994404418, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:54] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994386018, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:54] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994386018, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:54] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994404418, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:54] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994404418, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:54] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994386018, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:54] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994386018, dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:54] ZkClient - Closing ZkClient...
[14:26:54] ZkEventThread - Terminate ZkClient event thread.
[14:26:54] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[14:26:55] ZkClient - Closing ZkClient...done
[14:26:57] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[14:26:57] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:59747,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994386018, dubbo version: 2.0.1, current host: 192.168.18.244
[14:27:05] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[14:27:05] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[14:27:05] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994404418, dubbo version: 2.0.1, current host: 192.168.18.244
[14:27:05] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994386018, dubbo version: 2.0.1, current host: 192.168.18.244
[14:27:05] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994404418, dubbo version: 2.0.1, current host: 192.168.18.244
[14:27:05] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994386018, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:33] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[14:28:33] Connection - {conn-10001} connected
[14:28:33] Connection - {conn-10001} connected
[14:28:33] Connection - {conn-10001} connected
[14:28:33] Connection - {conn-10002} connected
[14:28:33] Connection - {conn-10002} connected
[14:28:33] Connection - {conn-10002} connected
[14:28:33] Connection - {conn-10003} connected
[14:28:33] Connection - {conn-10003} connected
[14:28:33] Connection - {conn-10003} connected
[14:28:33] DruidDataSource - {dataSource-1} inited
[14:28:34] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:34] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:34] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:34] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:34] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:34] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:34] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:34] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994514627, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:34] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994514627 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=35116&registry=zookeeper&timestamp=1529994514621, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:34] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:34] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:34] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:34] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:34] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:34] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:34] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:34] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994404418, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=46680&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994386018}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[14:28:35] ZkEventThread - Starting ZkClient event thread.
[14:28:35] ZkClient - Awaiting connection to Zookeeper server
[14:28:35] ZkClient - Waiting for keeper state SyncConnected
[14:28:35] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[14:28:35] ZkClient - zookeeper state changed (SyncConnected)
[14:28:35] ZkClient - Leaving process event
[14:28:35] ZkClient - State is SyncConnected
[14:28:35] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994514627, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994514627, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994514627, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994514627], dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994514627], dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994514627, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994514627], dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994515352, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994515352 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=35116&registry=zookeeper&timestamp=1529994515352, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994515352, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994515352, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994515352, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994515352], dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994515352], dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994515352, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994515352], dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=35116&timestamp=1529994514621], dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=35116&timestamp=1529994514621, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994515352, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] Connection - {conn-10001} closed
[14:28:35] Connection - {conn-10001} closed
[14:28:35] Connection - {conn-10001} closed
[14:28:35] Connection - {conn-10002} closed
[14:28:35] Connection - {conn-10002} closed
[14:28:35] Connection - {conn-10002} closed
[14:28:35] Connection - {conn-10003} closed
[14:28:35] Connection - {conn-10003} closed
[14:28:35] Connection - {conn-10003} closed
[14:28:35] DruidDataSource - {dataSource-1} closed
[14:28:35] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994515352, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994514627, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994514627, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994515352, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994515352, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994514627, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994514627, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:35] ZkClient - Closing ZkClient...
[14:28:35] ZkEventThread - Terminate ZkClient event thread.
[14:28:35] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[14:28:36] ZkClient - Closing ZkClient...done
[14:28:36] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:36] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:59784,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994514627, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:46] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:46] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:46] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994515352, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:46] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994514627, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:46] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994515352, dubbo version: 2.0.1, current host: 192.168.18.244
[14:28:46] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994514627, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:09] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[14:30:10] Connection - {conn-10001} connected
[14:30:10] Connection - {conn-10001} connected
[14:30:10] Connection - {conn-10001} connected
[14:30:10] Connection - {conn-10002} connected
[14:30:10] Connection - {conn-10002} connected
[14:30:10] Connection - {conn-10002} connected
[14:30:10] Connection - {conn-10003} connected
[14:30:10] Connection - {conn-10003} connected
[14:30:10] Connection - {conn-10003} connected
[14:30:10] DruidDataSource - {dataSource-1} inited
[14:30:10] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611185, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611185 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=21060&registry=zookeeper&timestamp=1529994611179, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994515352, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=35116&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994514627}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[14:30:11] ZkEventThread - Starting ZkClient event thread.
[14:30:11] ZkClient - Awaiting connection to Zookeeper server
[14:30:11] ZkClient - Waiting for keeper state SyncConnected
[14:30:11] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[14:30:11] ZkClient - zookeeper state changed (SyncConnected)
[14:30:11] ZkClient - Leaving process event
[14:30:11] ZkClient - State is SyncConnected
[14:30:11] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611185, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611185, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611185, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611185], dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611185], dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611185, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611185], dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611611, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611611 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=21060&registry=zookeeper&timestamp=1529994611611, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611611, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611611, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611611, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611611], dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611611], dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611611, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611611], dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] Connection - {conn-10001} closed
[14:30:11] Connection - {conn-10001} closed
[14:30:11] Connection - {conn-10001} closed
[14:30:11] Connection - {conn-10002} closed
[14:30:11] Connection - {conn-10002} closed
[14:30:11] Connection - {conn-10002} closed
[14:30:11] Connection - {conn-10003} closed
[14:30:11] Connection - {conn-10003} closed
[14:30:11] Connection - {conn-10003} closed
[14:30:11] DruidDataSource - {dataSource-1} closed
[14:30:11] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=21060&timestamp=1529994611179], dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=21060&timestamp=1529994611179, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611185, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611185, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611611, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611611, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611185, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611185, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611611, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611611, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:11] ZkClient - Closing ZkClient...
[14:30:11] ZkEventThread - Terminate ZkClient event thread.
[14:30:11] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[14:30:12] ZkClient - Closing ZkClient...done
[14:30:12] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:12] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:59823,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611185, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:22] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:22] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:22] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611611, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:22] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611185, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:22] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611611, dubbo version: 2.0.1, current host: 192.168.18.244
[14:30:22] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611185, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:11] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[14:34:12] Connection - {conn-10001} connected
[14:34:12] Connection - {conn-10001} connected
[14:34:12] Connection - {conn-10001} connected
[14:34:12] Connection - {conn-10002} connected
[14:34:12] Connection - {conn-10002} connected
[14:34:12] Connection - {conn-10002} connected
[14:34:12] Connection - {conn-10003} connected
[14:34:12] Connection - {conn-10003} connected
[14:34:12] Connection - {conn-10003} connected
[14:34:12] DruidDataSource - {dataSource-1} inited
[14:34:13] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994853536, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994853536 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=51636&registry=zookeeper&timestamp=1529994853529, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611611, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=21060&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529994611185}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:13] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[14:34:13] ZkEventThread - Starting ZkClient event thread.
[14:34:13] ZkClient - Awaiting connection to Zookeeper server
[14:34:13] ZkClient - Waiting for keeper state SyncConnected
[14:34:13] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[14:34:13] ZkClient - zookeeper state changed (SyncConnected)
[14:34:13] ZkClient - Leaving process event
[14:34:13] ZkClient - State is SyncConnected
[14:34:14] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994853536, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:14] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994853536, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:14] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994853536, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994853536], dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:14] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994853536], dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:14] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994853536, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994853536], dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:14] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:14] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:14] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:14] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:14] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994854358, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:14] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994854358 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=51636&registry=zookeeper&timestamp=1529994854358, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:14] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994854358, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:14] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994854358, dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:14] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994854358, urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994854358], dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:14] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994854358], dubbo version: 2.0.1, current host: 192.168.18.244
[14:34:14] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994854358, override urls: [empty://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994854358], dubbo version: 2.0.1, current host: 192.168.18.244
[14:35:14] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:36:14] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:37:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:37:48] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59985, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:38:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:38:48] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59985, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:39:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:39:36] ZkClient - Received event: WatchedEvent state:SyncConnected type:NodeChildrenChanged path:/dubbo/com.crossoverJie.seconds.kill.api.OrderServiceFacade/configurators
[14:39:36] ZkEventThread - New event: ZkEvent[Children of /dubbo/com.crossoverJie.seconds.kill.api.OrderServiceFacade/configurators changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@2f3a2584]
[14:39:36] ZkClient - Leaving process event
[14:39:36] ZkEventThread - Delivering event #1 ZkEvent[Children of /dubbo/com.crossoverJie.seconds.kill.api.OrderServiceFacade/configurators changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@2f3a2584]
[14:39:37] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994853536, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[14:39:37] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[14:39:37] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994853536, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[14:39:37] ZkEventThread - Delivering event #1 done
[14:39:48] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59985, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:40:04] ZkClient - Received event: WatchedEvent state:SyncConnected type:NodeChildrenChanged path:/dubbo/com.crossoverJie.seconds.kill.api.StockServiceFacade/configurators
[14:40:04] ZkEventThread - New event: ZkEvent[Children of /dubbo/com.crossoverJie.seconds.kill.api.StockServiceFacade/configurators changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@6a38ae07]
[14:40:04] ZkClient - Leaving process event
[14:40:04] ZkEventThread - Delivering event #2 ZkEvent[Children of /dubbo/com.crossoverJie.seconds.kill.api.StockServiceFacade/configurators changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@6a38ae07]
[14:40:05] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994854358, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[14:40:05] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[14:40:05] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994854358, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[14:40:05] ZkEventThread - Delivering event #2 done
[14:40:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:40:43] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.18.244
[14:40:44] Connection - {conn-10003} pool-connect
[14:40:44] Connection - {conn-10003} pool-connect
[14:40:44] Connection - {conn-10003} pool-connect
[14:40:44] Statement - {conn-10003, pstmt-20000} created. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:40:44] Statement - {conn-10003, pstmt-20000} created. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:40:44] Statement - {conn-10003, pstmt-20000} created. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:40:44] Statement - {conn-10003, pstmt-20000} Parameters : [1]
[14:40:44] Statement - {conn-10003, pstmt-20000} Parameters : [1]
[14:40:44] Statement - {conn-10003, pstmt-20000} Parameters : [1]
[14:40:44] Statement - {conn-10003, pstmt-20000} Types : [INTEGER]
[14:40:44] Statement - {conn-10003, pstmt-20000} Types : [INTEGER]
[14:40:44] Statement - {conn-10003, pstmt-20000} Types : [INTEGER]
[14:40:45] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.18.244
[14:40:45] Connection - {conn-10002} pool-connect
[14:40:45] Connection - {conn-10002} pool-connect
[14:40:45] Connection - {conn-10002} pool-connect
[14:40:45] Statement - {conn-10002, pstmt-20001} created. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:40:45] Statement - {conn-10002, pstmt-20001} created. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:40:45] Statement - {conn-10002, pstmt-20001} created. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:40:45] Statement - {conn-10002, pstmt-20001} Parameters : [1]
[14:40:45] Statement - {conn-10002, pstmt-20001} Parameters : [1]
[14:40:45] Statement - {conn-10002, pstmt-20001} Parameters : [1]
[14:40:45] Statement - {conn-10002, pstmt-20001} Types : [INTEGER]
[14:40:45] Statement - {conn-10002, pstmt-20001} Types : [INTEGER]
[14:40:45] Statement - {conn-10002, pstmt-20001} Types : [INTEGER]
[14:40:45] Statement - {conn-10003, pstmt-20000} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:40:45] Statement - {conn-10003, pstmt-20000} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:40:45] Statement - {conn-10003, pstmt-20000} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:40:45] Statement - {conn-10003, pstmt-20000} executed. 890.12195 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:40:45] Statement - {conn-10003, pstmt-20000} executed. 890.12195 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:40:45] Statement - {conn-10003, pstmt-20000} executed. 890.12195 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:40:45] StatFilter - slow sql 890 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[1]
[14:40:45] Statement - {conn-10002, pstmt-20001} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:40:45] Statement - {conn-10002, pstmt-20001} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:40:45] Statement - {conn-10002, pstmt-20001} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:40:45] Statement - {conn-10002, pstmt-20001} executed. 43.316177 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:40:45] Statement - {conn-10002, pstmt-20001} executed. 43.316177 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:40:45] Statement - {conn-10002, pstmt-20001} executed. 43.316177 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:40:45] ResultSet - {conn-10003, pstmt-20000, rs-50001} open
[14:40:45] ResultSet - {conn-10003, pstmt-20000, rs-50001} open
[14:40:45] ResultSet - {conn-10002, pstmt-20001, rs-50000} open
[14:40:45] ResultSet - {conn-10002, pstmt-20001, rs-50000} open
[14:40:45] ResultSet - {conn-10003, pstmt-20000, rs-50001} Header: [id, name, count, sale, version]
[14:40:45] ResultSet - {conn-10003, pstmt-20000, rs-50001} Header: [id, name, count, sale, version]
[14:40:45] ResultSet - {conn-10002, pstmt-20001, rs-50000} Header: [id, name, count, sale, version]
[14:40:45] ResultSet - {conn-10002, pstmt-20001, rs-50000} Header: [id, name, count, sale, version]
[14:40:45] ResultSet - {conn-10003, pstmt-20000, rs-50001} Result: [1, 手机, 10, 0, 0]
[14:40:45] ResultSet - {conn-10003, pstmt-20000, rs-50001} Result: [1, 手机, 10, 0, 0]
[14:40:45] ResultSet - {conn-10002, pstmt-20001, rs-50000} Result: [1, 手机, 10, 0, 0]
[14:40:45] ResultSet - {conn-10002, pstmt-20001, rs-50000} Result: [1, 手机, 10, 0, 0]
[14:40:45] ResultSet - {conn-10003, pstmt-20000, rs-50001} closed
[14:40:45] ResultSet - {conn-10003, pstmt-20000, rs-50001} closed
[14:40:45] Statement - {conn-10003, pstmt-20000} clearParameters. 
[14:40:45] Statement - {conn-10003, pstmt-20000} clearParameters. 
[14:40:45] Statement - {conn-10003, pstmt-20000} clearParameters. 
[14:40:45] PreparedStatementPool - {conn-10003, pstmt-20000} enter cache
[14:40:45] Connection - {conn-10003} pool-recycle
[14:40:45] Connection - {conn-10003} pool-recycle
[14:40:45] Connection - {conn-10003} pool-recycle
[14:40:45] Connection - {conn-10003} pool-connect
[14:40:45] Connection - {conn-10003} pool-connect
[14:40:45] Connection - {conn-10003} pool-connect
[14:40:45] Statement - {conn-10003, pstmt-20002} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:40:45] Statement - {conn-10003, pstmt-20002} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:40:45] Statement - {conn-10003, pstmt-20002} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:40:45] Statement - {conn-10003, pstmt-20002} Parameters : [1, 0]
[14:40:45] Statement - {conn-10003, pstmt-20002} Parameters : [1, 0]
[14:40:45] Statement - {conn-10003, pstmt-20002} Parameters : [1, 0]
[14:40:45] Statement - {conn-10003, pstmt-20002} Types : [INTEGER, INTEGER]
[14:40:45] Statement - {conn-10003, pstmt-20002} Types : [INTEGER, INTEGER]
[14:40:45] Statement - {conn-10003, pstmt-20002} Types : [INTEGER, INTEGER]
[14:40:45] ResultSet - {conn-10002, pstmt-20001, rs-50000} closed
[14:40:45] ResultSet - {conn-10002, pstmt-20001, rs-50000} closed
[14:40:45] Statement - {conn-10002, pstmt-20001} clearParameters. 
[14:40:45] Statement - {conn-10002, pstmt-20001} clearParameters. 
[14:40:45] Statement - {conn-10002, pstmt-20001} clearParameters. 
[14:40:45] PreparedStatementPool - {conn-10002, pstmt-20001} enter cache
[14:40:45] Connection - {conn-10002} pool-recycle
[14:40:45] Connection - {conn-10002} pool-recycle
[14:40:45] Connection - {conn-10002} pool-recycle
[14:40:45] Connection - {conn-10002} pool-connect
[14:40:45] Connection - {conn-10002} pool-connect
[14:40:45] Connection - {conn-10002} pool-connect
[14:40:45] Statement - {conn-10002, pstmt-20003} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:40:45] Statement - {conn-10002, pstmt-20003} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:40:45] Statement - {conn-10002, pstmt-20003} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:40:45] Statement - {conn-10002, pstmt-20003} Parameters : [1, 0]
[14:40:45] Statement - {conn-10002, pstmt-20003} Parameters : [1, 0]
[14:40:45] Statement - {conn-10002, pstmt-20003} Parameters : [1, 0]
[14:40:45] Statement - {conn-10002, pstmt-20003} Types : [INTEGER, INTEGER]
[14:40:45] Statement - {conn-10002, pstmt-20003} Types : [INTEGER, INTEGER]
[14:40:45] Statement - {conn-10002, pstmt-20003} Types : [INTEGER, INTEGER]
[14:40:45] Statement - {conn-10003, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:40:45] Statement - {conn-10003, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:40:45] Statement - {conn-10003, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:40:45] Statement - {conn-10003, pstmt-20002} executed. 730.044125 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:40:45] Statement - {conn-10003, pstmt-20002} executed. 730.044125 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:40:45] Statement - {conn-10003, pstmt-20002} executed. 730.044125 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:40:45] StatFilter - slow sql 730 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[1,0]
[14:40:45] Statement - {conn-10003, pstmt-20002} clearParameters. 
[14:40:45] Statement - {conn-10003, pstmt-20002} clearParameters. 
[14:40:45] Statement - {conn-10003, pstmt-20002} clearParameters. 
[14:40:45] PreparedStatementPool - {conn-10003, pstmt-20002} enter cache
[14:40:45] Connection - {conn-10003} pool-recycle
[14:40:45] Connection - {conn-10003} pool-recycle
[14:40:45] Connection - {conn-10003} pool-recycle
[14:40:45] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.18.244. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrder, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.18.244
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimistic(OrderServiceImpl.java:189)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrder(OrderServiceImpl.java:80)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$c1f4f2ba.createOptimisticOrder(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrder(OrderServiceImpl.java:35)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:40:46] Statement - {conn-10002, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:40:46] Statement - {conn-10002, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:40:46] Statement - {conn-10002, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:40:46] Statement - {conn-10002, pstmt-20003} executed. 915.648493 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:40:46] Statement - {conn-10002, pstmt-20003} executed. 915.648493 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:40:46] Statement - {conn-10002, pstmt-20003} executed. 915.648493 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:40:46] StatFilter - slow sql 915 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[1,0]
[14:40:46] Statement - {conn-10002, pstmt-20003} clearParameters. 
[14:40:46] Statement - {conn-10002, pstmt-20003} clearParameters. 
[14:40:46] Statement - {conn-10002, pstmt-20003} clearParameters. 
[14:40:46] PreparedStatementPool - {conn-10002, pstmt-20003} enter cache
[14:40:46] Connection - {conn-10002} pool-recycle
[14:40:46] Connection - {conn-10002} pool-recycle
[14:40:46] Connection - {conn-10002} pool-recycle
[14:40:46] Connection - {conn-10002} pool-connect
[14:40:46] Connection - {conn-10002} pool-connect
[14:40:46] Connection - {conn-10002} pool-connect
[14:40:46] Statement - {conn-10002, pstmt-20004} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:40:46] Statement - {conn-10002, pstmt-20004} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:40:46] Statement - {conn-10002, pstmt-20004} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:40:46] Statement - {conn-10002, pstmt-20004} Parameters : [null, 1, 手机, 2018-06-26 14:40:46.11]
[14:40:46] Statement - {conn-10002, pstmt-20004} Parameters : [null, 1, 手机, 2018-06-26 14:40:46.11]
[14:40:46] Statement - {conn-10002, pstmt-20004} Parameters : [null, 1, 手机, 2018-06-26 14:40:46.11]
[14:40:46] Statement - {conn-10002, pstmt-20004} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:40:46] Statement - {conn-10002, pstmt-20004} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:40:46] Statement - {conn-10002, pstmt-20004} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:40:46] Statement - {conn-10002, pstmt-20004} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-26 14:40:46.110')
[14:40:46] Statement - {conn-10002, pstmt-20004} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-26 14:40:46.110')
[14:40:46] Statement - {conn-10002, pstmt-20004} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-26 14:40:46.110')
[14:40:46] Statement - {conn-10002, pstmt-20004} executed. 511.165397 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:40:46] Statement - {conn-10002, pstmt-20004} executed. 511.165397 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:40:46] Statement - {conn-10002, pstmt-20004} executed. 511.165397 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:40:46] StatFilter - slow sql 511 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[null,1,"手机","2018-06-26 14:40:46"]
[14:40:46] ResultSet - {conn-10002, pstmt-20004, rs-50002} open
[14:40:46] ResultSet - {conn-10002, pstmt-20004, rs-50002} open
[14:40:46] ResultSet - {conn-10002, pstmt-20004, rs-50002} Header: [GENERATED_KEY]
[14:40:46] ResultSet - {conn-10002, pstmt-20004, rs-50002} Header: [GENERATED_KEY]
[14:40:46] ResultSet - {conn-10002, pstmt-20004, rs-50002} Result: [194]
[14:40:46] ResultSet - {conn-10002, pstmt-20004, rs-50002} Result: [194]
[14:40:46] ResultSet - {conn-10002, pstmt-20004, rs-50002} closed
[14:40:46] ResultSet - {conn-10002, pstmt-20004, rs-50002} closed
[14:40:46] Statement - {conn-10002, pstmt-20004} clearParameters. 
[14:40:46] Statement - {conn-10002, pstmt-20004} clearParameters. 
[14:40:46] Statement - {conn-10002, pstmt-20004} clearParameters. 
[14:40:46] PreparedStatementPool - {conn-10002, pstmt-20004} enter cache
[14:40:46] Connection - {conn-10002} pool-recycle
[14:40:46] Connection - {conn-10002} pool-recycle
[14:40:46] Connection - {conn-10002} pool-recycle
[14:41:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:41:48] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59985, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:42:01] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.18.244
[14:42:02] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.18.244
[14:42:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:42:30] Connection - {conn-10002} pool-connect
[14:42:30] Connection - {conn-10002} pool-connect
[14:42:30] Connection - {conn-10002} pool-connect
[14:42:30] Statement - {conn-10002, pstmt-20001} Parameters : [1]
[14:42:30] Statement - {conn-10002, pstmt-20001} Parameters : [1]
[14:42:30] Statement - {conn-10002, pstmt-20001} Parameters : [1]
[14:42:30] Statement - {conn-10002, pstmt-20001} Types : [INTEGER]
[14:42:30] Statement - {conn-10002, pstmt-20001} Types : [INTEGER]
[14:42:30] Statement - {conn-10002, pstmt-20001} Types : [INTEGER]
[14:42:30] Statement - {conn-10002, pstmt-20001} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:42:30] Statement - {conn-10002, pstmt-20001} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:42:30] Statement - {conn-10002, pstmt-20001} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:42:30] Statement - {conn-10002, pstmt-20001} executed. 7.473859 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:42:30] Statement - {conn-10002, pstmt-20001} executed. 7.473859 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:42:30] Statement - {conn-10002, pstmt-20001} executed. 7.473859 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:42:30] ResultSet - {conn-10002, pstmt-20001, rs-50003} open
[14:42:30] ResultSet - {conn-10002, pstmt-20001, rs-50003} open
[14:42:30] ResultSet - {conn-10002, pstmt-20001, rs-50003} Header: [id, name, count, sale, version]
[14:42:30] ResultSet - {conn-10002, pstmt-20001, rs-50003} Header: [id, name, count, sale, version]
[14:42:30] ResultSet - {conn-10002, pstmt-20001, rs-50003} Result: [1, 手机, 10, 1, 1]
[14:42:30] ResultSet - {conn-10002, pstmt-20001, rs-50003} Result: [1, 手机, 10, 1, 1]
[14:42:30] ResultSet - {conn-10002, pstmt-20001, rs-50003} closed
[14:42:30] ResultSet - {conn-10002, pstmt-20001, rs-50003} closed
[14:42:30] Statement - {conn-10002, pstmt-20001} clearParameters. 
[14:42:30] Statement - {conn-10002, pstmt-20001} clearParameters. 
[14:42:30] Statement - {conn-10002, pstmt-20001} clearParameters. 
[14:42:30] Connection - {conn-10002} pool-recycle
[14:42:30] Connection - {conn-10002} pool-recycle
[14:42:30] Connection - {conn-10002} pool-recycle
[14:42:48] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59985, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:43:48] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59985, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:44:13] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[14:44:13] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:44:25] Connection - {conn-10002} pool-connect
[14:44:25] Connection - {conn-10002} pool-connect
[14:44:25] Connection - {conn-10002} pool-connect
[14:44:25] Statement - {conn-10002, pstmt-20001} Parameters : [1]
[14:44:25] Statement - {conn-10002, pstmt-20001} Parameters : [1]
[14:44:25] Statement - {conn-10002, pstmt-20001} Parameters : [1]
[14:44:25] Statement - {conn-10002, pstmt-20001} Types : [INTEGER]
[14:44:25] Statement - {conn-10002, pstmt-20001} Types : [INTEGER]
[14:44:25] Statement - {conn-10002, pstmt-20001} Types : [INTEGER]
[14:44:25] Statement - {conn-10002, pstmt-20001} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:44:25] Statement - {conn-10002, pstmt-20001} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:44:25] Statement - {conn-10002, pstmt-20001} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:44:25] Statement - {conn-10002, pstmt-20001} executed. 4.751281 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:44:25] Statement - {conn-10002, pstmt-20001} executed. 4.751281 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:44:25] Statement - {conn-10002, pstmt-20001} executed. 4.751281 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:44:25] ResultSet - {conn-10002, pstmt-20001, rs-50004} open
[14:44:25] ResultSet - {conn-10002, pstmt-20001, rs-50004} open
[14:44:25] ResultSet - {conn-10002, pstmt-20001, rs-50004} Header: [id, name, count, sale, version]
[14:44:25] ResultSet - {conn-10002, pstmt-20001, rs-50004} Header: [id, name, count, sale, version]
[14:44:25] ResultSet - {conn-10002, pstmt-20001, rs-50004} Result: [1, 手机, 10, 1, 1]
[14:44:25] ResultSet - {conn-10002, pstmt-20001, rs-50004} Result: [1, 手机, 10, 1, 1]
[14:44:25] ResultSet - {conn-10002, pstmt-20001, rs-50004} closed
[14:44:25] ResultSet - {conn-10002, pstmt-20001, rs-50004} closed
[14:44:25] Statement - {conn-10002, pstmt-20001} clearParameters. 
[14:44:25] Statement - {conn-10002, pstmt-20001} clearParameters. 
[14:44:25] Statement - {conn-10002, pstmt-20001} clearParameters. 
[14:44:25] Connection - {conn-10002} pool-recycle
[14:44:25] Connection - {conn-10002} pool-recycle
[14:44:25] Connection - {conn-10002} pool-recycle
[14:44:48] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59985, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:45:13] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:45:13] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[14:45:13] Connection - {conn-10002} pool-connect
[14:45:13] Connection - {conn-10002} pool-connect
[14:45:13] Connection - {conn-10002} pool-connect
[14:45:13] Statement - {conn-10002, pstmt-20003} Parameters : [1, 1]
[14:45:13] Statement - {conn-10002, pstmt-20003} Parameters : [1, 1]
[14:45:13] Statement - {conn-10002, pstmt-20003} Parameters : [1, 1]
[14:45:13] Statement - {conn-10002, pstmt-20003} Types : [INTEGER, INTEGER]
[14:45:13] Statement - {conn-10002, pstmt-20003} Types : [INTEGER, INTEGER]
[14:45:13] Statement - {conn-10002, pstmt-20003} Types : [INTEGER, INTEGER]
[14:45:14] Statement - {conn-10002, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:45:14] Statement - {conn-10002, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:45:14] Statement - {conn-10002, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:45:14] Statement - {conn-10002, pstmt-20003} executed. 73.149379 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:45:14] Statement - {conn-10002, pstmt-20003} executed. 73.149379 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:45:14] Statement - {conn-10002, pstmt-20003} executed. 73.149379 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:45:14] Statement - {conn-10002, pstmt-20003} clearParameters. 
[14:45:14] Statement - {conn-10002, pstmt-20003} clearParameters. 
[14:45:14] Statement - {conn-10002, pstmt-20003} clearParameters. 
[14:45:14] Connection - {conn-10002} pool-recycle
[14:45:14] Connection - {conn-10002} pool-recycle
[14:45:14] Connection - {conn-10002} pool-recycle
[14:45:42] Connection - {conn-10002} pool-connect
[14:45:42] Connection - {conn-10002} pool-connect
[14:45:42] Connection - {conn-10002} pool-connect
[14:45:42] Statement - {conn-10002, pstmt-20004} Parameters : [null, 1, 手机, 2018-06-26 14:45:42.282]
[14:45:42] Statement - {conn-10002, pstmt-20004} Parameters : [null, 1, 手机, 2018-06-26 14:45:42.282]
[14:45:42] Statement - {conn-10002, pstmt-20004} Parameters : [null, 1, 手机, 2018-06-26 14:45:42.282]
[14:45:42] Statement - {conn-10002, pstmt-20004} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:45:42] Statement - {conn-10002, pstmt-20004} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:45:42] Statement - {conn-10002, pstmt-20004} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:45:42] Statement - {conn-10002, pstmt-20004} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-26 14:45:42.282')
[14:45:42] Statement - {conn-10002, pstmt-20004} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-26 14:45:42.282')
[14:45:42] Statement - {conn-10002, pstmt-20004} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-26 14:45:42.282')
[14:45:42] Statement - {conn-10002, pstmt-20004} executed. 45.272699 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:45:42] Statement - {conn-10002, pstmt-20004} executed. 45.272699 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:45:42] Statement - {conn-10002, pstmt-20004} executed. 45.272699 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:45:42] ResultSet - {conn-10002, pstmt-20004, rs-50005} open
[14:45:42] ResultSet - {conn-10002, pstmt-20004, rs-50005} open
[14:45:42] ResultSet - {conn-10002, pstmt-20004, rs-50005} Header: [GENERATED_KEY]
[14:45:42] ResultSet - {conn-10002, pstmt-20004, rs-50005} Header: [GENERATED_KEY]
[14:45:42] ResultSet - {conn-10002, pstmt-20004, rs-50005} Result: [195]
[14:45:42] ResultSet - {conn-10002, pstmt-20004, rs-50005} Result: [195]
[14:45:42] ResultSet - {conn-10002, pstmt-20004, rs-50005} closed
[14:45:42] ResultSet - {conn-10002, pstmt-20004, rs-50005} closed
[14:45:42] Statement - {conn-10002, pstmt-20004} clearParameters. 
[14:45:42] Statement - {conn-10002, pstmt-20004} clearParameters. 
[14:45:42] Statement - {conn-10002, pstmt-20004} clearParameters. 
[14:45:42] Connection - {conn-10002} pool-recycle
[14:45:42] Connection - {conn-10002} pool-recycle
[14:45:42] Connection - {conn-10002} pool-recycle
[14:45:48] Connection - {conn-10002} pool-connect
[14:45:48] Connection - {conn-10002} pool-connect
[14:45:48] Connection - {conn-10002} pool-connect
[14:45:48] Statement - {conn-10002, pstmt-20003} Parameters : [1, 1]
[14:45:48] Statement - {conn-10002, pstmt-20003} Parameters : [1, 1]
[14:45:48] Statement - {conn-10002, pstmt-20003} Parameters : [1, 1]
[14:45:48] Statement - {conn-10002, pstmt-20003} Types : [INTEGER, INTEGER]
[14:45:48] Statement - {conn-10002, pstmt-20003} Types : [INTEGER, INTEGER]
[14:45:48] Statement - {conn-10002, pstmt-20003} Types : [INTEGER, INTEGER]
[14:45:48] Statement - {conn-10002, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:45:48] Statement - {conn-10002, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:45:48] Statement - {conn-10002, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:45:48] Statement - {conn-10002, pstmt-20003} executed. 6.597771 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:45:48] Statement - {conn-10002, pstmt-20003} executed. 6.597771 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:45:48] Statement - {conn-10002, pstmt-20003} executed. 6.597771 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:45:48] Statement - {conn-10002, pstmt-20003} clearParameters. 
[14:45:48] Statement - {conn-10002, pstmt-20003} clearParameters. 
[14:45:48] Statement - {conn-10002, pstmt-20003} clearParameters. 
[14:45:48] Connection - {conn-10002} pool-recycle
[14:45:48] Connection - {conn-10002} pool-recycle
[14:45:48] Connection - {conn-10002} pool-recycle
[14:45:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.18.244. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrder, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.18.244
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimistic(OrderServiceImpl.java:189)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrder(OrderServiceImpl.java:80)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$c1f4f2ba.createOptimisticOrder(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrder(OrderServiceImpl.java:35)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:45:48] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59985, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:46:13] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:46:13] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[14:46:48] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59985, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:47:13] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:47:13] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[14:47:48] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59985, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:48:13] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:48:13] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[14:48:48] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59985, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:49:13] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:49:13] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[14:49:48] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59985, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:50:13] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:50:13] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[14:50:40] ZkClient - Received event: WatchedEvent state:SyncConnected type:NodeChildrenChanged path:/dubbo/com.crossoverJie.seconds.kill.api.OrderServiceFacade/configurators
[14:50:40] ZkEventThread - New event: ZkEvent[Children of /dubbo/com.crossoverJie.seconds.kill.api.OrderServiceFacade/configurators changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@2f3a2584]
[14:50:40] ZkClient - Leaving process event
[14:50:40] ZkEventThread - Delivering event #3 ZkEvent[Children of /dubbo/com.crossoverJie.seconds.kill.api.OrderServiceFacade/configurators changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@2f3a2584]
[14:50:40] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994853536, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[14:50:40] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[14:50:40] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994853536, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[14:50:40] RegistryProtocol -  [DUBBO] exported provider url changed, origin url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994853536, old export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994853536, new export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994853536, dubbo version: 2.0.1, current host: 192.168.18.244
[14:50:40] ZkEventThread - Delivering event #3 done
[14:50:44] ZkClient - Received event: WatchedEvent state:SyncConnected type:NodeChildrenChanged path:/dubbo/com.crossoverJie.seconds.kill.api.StockServiceFacade/configurators
[14:50:44] ZkEventThread - New event: ZkEvent[Children of /dubbo/com.crossoverJie.seconds.kill.api.StockServiceFacade/configurators changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@6a38ae07]
[14:50:44] ZkClient - Leaving process event
[14:50:44] ZkEventThread - Delivering event #4 ZkEvent[Children of /dubbo/com.crossoverJie.seconds.kill.api.StockServiceFacade/configurators changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@6a38ae07]
[14:50:44] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994854358, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[14:50:44] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[14:50:44] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994854358, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[14:50:44] RegistryProtocol -  [DUBBO] exported provider url changed, origin url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994854358, old export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994854358, new export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=51636&side=provider&timestamp=1529994854358, dubbo version: 2.0.1, current host: 192.168.18.244
[14:50:44] ZkEventThread - Delivering event #4 done
[14:50:48] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59985, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:51:13] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:51:13] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[14:51:48] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59985, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:52:13] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:52:13] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[14:52:26] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.18.244
[14:52:26] Connection - {conn-10002} pool-connect
[14:52:26] Connection - {conn-10002} pool-connect
[14:52:26] Connection - {conn-10002} pool-connect
[14:52:26] Statement - {conn-10002, pstmt-20001} Parameters : [1]
[14:52:26] Statement - {conn-10002, pstmt-20001} Parameters : [1]
[14:52:26] Statement - {conn-10002, pstmt-20001} Parameters : [1]
[14:52:26] Statement - {conn-10002, pstmt-20001} Types : [INTEGER]
[14:52:26] Statement - {conn-10002, pstmt-20001} Types : [INTEGER]
[14:52:26] Statement - {conn-10002, pstmt-20001} Types : [INTEGER]
[14:52:26] Statement - {conn-10002, pstmt-20001} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:52:26] Statement - {conn-10002, pstmt-20001} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:52:26] Statement - {conn-10002, pstmt-20001} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:52:26] Statement - {conn-10002, pstmt-20001} executed. 2.645588 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:52:26] Statement - {conn-10002, pstmt-20001} executed. 2.645588 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:52:26] Statement - {conn-10002, pstmt-20001} executed. 2.645588 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:52:26] ResultSet - {conn-10002, pstmt-20001, rs-50006} open
[14:52:26] ResultSet - {conn-10002, pstmt-20001, rs-50006} open
[14:52:26] ResultSet - {conn-10002, pstmt-20001, rs-50006} Header: [id, name, count, sale, version]
[14:52:26] ResultSet - {conn-10002, pstmt-20001, rs-50006} Header: [id, name, count, sale, version]
[14:52:26] ResultSet - {conn-10002, pstmt-20001, rs-50006} Result: [1, 手机, 10, 2, 2]
[14:52:26] ResultSet - {conn-10002, pstmt-20001, rs-50006} Result: [1, 手机, 10, 2, 2]
[14:52:26] ResultSet - {conn-10002, pstmt-20001, rs-50006} closed
[14:52:26] ResultSet - {conn-10002, pstmt-20001, rs-50006} closed
[14:52:26] Statement - {conn-10002, pstmt-20001} clearParameters. 
[14:52:26] Statement - {conn-10002, pstmt-20001} clearParameters. 
[14:52:26] Statement - {conn-10002, pstmt-20001} clearParameters. 
[14:52:26] Connection - {conn-10002} pool-recycle
[14:52:26] Connection - {conn-10002} pool-recycle
[14:52:26] Connection - {conn-10002} pool-recycle
[14:52:26] Connection - {conn-10002} pool-connect
[14:52:26] Connection - {conn-10002} pool-connect
[14:52:26] Connection - {conn-10002} pool-connect
[14:52:26] Statement - {conn-10002, pstmt-20003} Parameters : [1, 2]
[14:52:26] Statement - {conn-10002, pstmt-20003} Parameters : [1, 2]
[14:52:26] Statement - {conn-10002, pstmt-20003} Parameters : [1, 2]
[14:52:26] Statement - {conn-10002, pstmt-20003} Types : [INTEGER, INTEGER]
[14:52:26] Statement - {conn-10002, pstmt-20003} Types : [INTEGER, INTEGER]
[14:52:26] Statement - {conn-10002, pstmt-20003} Types : [INTEGER, INTEGER]
[14:52:26] Statement - {conn-10002, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:52:26] Statement - {conn-10002, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:52:26] Statement - {conn-10002, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:52:26] Statement - {conn-10002, pstmt-20003} executed. 4.973912 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:52:26] Statement - {conn-10002, pstmt-20003} executed. 4.973912 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:52:26] Statement - {conn-10002, pstmt-20003} executed. 4.973912 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:52:26] Statement - {conn-10002, pstmt-20003} clearParameters. 
[14:52:26] Statement - {conn-10002, pstmt-20003} clearParameters. 
[14:52:26] Statement - {conn-10002, pstmt-20003} clearParameters. 
[14:52:26] Connection - {conn-10002} pool-recycle
[14:52:26] Connection - {conn-10002} pool-recycle
[14:52:26] Connection - {conn-10002} pool-recycle
[14:52:26] Connection - {conn-10002} pool-connect
[14:52:26] Connection - {conn-10002} pool-connect
[14:52:26] Connection - {conn-10002} pool-connect
[14:52:26] Statement - {conn-10002, pstmt-20004} Parameters : [null, 1, 手机, 2018-06-26 14:52:26.577]
[14:52:26] Statement - {conn-10002, pstmt-20004} Parameters : [null, 1, 手机, 2018-06-26 14:52:26.577]
[14:52:26] Statement - {conn-10002, pstmt-20004} Parameters : [null, 1, 手机, 2018-06-26 14:52:26.577]
[14:52:26] Statement - {conn-10002, pstmt-20004} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:52:26] Statement - {conn-10002, pstmt-20004} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:52:26] Statement - {conn-10002, pstmt-20004} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:52:26] Statement - {conn-10002, pstmt-20004} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-26 14:52:26.577')
[14:52:26] Statement - {conn-10002, pstmt-20004} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-26 14:52:26.577')
[14:52:26] Statement - {conn-10002, pstmt-20004} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-26 14:52:26.577')
[14:52:26] Statement - {conn-10002, pstmt-20004} executed. 4.149792 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:52:26] Statement - {conn-10002, pstmt-20004} executed. 4.149792 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:52:26] Statement - {conn-10002, pstmt-20004} executed. 4.149792 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:52:26] ResultSet - {conn-10002, pstmt-20004, rs-50007} open
[14:52:26] ResultSet - {conn-10002, pstmt-20004, rs-50007} open
[14:52:26] ResultSet - {conn-10002, pstmt-20004, rs-50007} Header: [GENERATED_KEY]
[14:52:26] ResultSet - {conn-10002, pstmt-20004, rs-50007} Header: [GENERATED_KEY]
[14:52:26] ResultSet - {conn-10002, pstmt-20004, rs-50007} Result: [196]
[14:52:26] ResultSet - {conn-10002, pstmt-20004, rs-50007} Result: [196]
[14:52:26] ResultSet - {conn-10002, pstmt-20004, rs-50007} closed
[14:52:26] ResultSet - {conn-10002, pstmt-20004, rs-50007} closed
[14:52:26] Statement - {conn-10002, pstmt-20004} clearParameters. 
[14:52:26] Statement - {conn-10002, pstmt-20004} clearParameters. 
[14:52:26] Statement - {conn-10002, pstmt-20004} clearParameters. 
[14:52:26] Connection - {conn-10002} pool-recycle
[14:52:26] Connection - {conn-10002} pool-recycle
[14:52:26] Connection - {conn-10002} pool-recycle
[14:52:26] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.18.244
[14:52:26] Connection - {conn-10002} pool-connect
[14:52:26] Connection - {conn-10002} pool-connect
[14:52:26] Connection - {conn-10002} pool-connect
[14:52:26] Statement - {conn-10002, pstmt-20001} Parameters : [1]
[14:52:26] Statement - {conn-10002, pstmt-20001} Parameters : [1]
[14:52:26] Statement - {conn-10002, pstmt-20001} Parameters : [1]
[14:52:26] Statement - {conn-10002, pstmt-20001} Types : [INTEGER]
[14:52:26] Statement - {conn-10002, pstmt-20001} Types : [INTEGER]
[14:52:26] Statement - {conn-10002, pstmt-20001} Types : [INTEGER]
[14:52:26] Statement - {conn-10002, pstmt-20001} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:52:26] Statement - {conn-10002, pstmt-20001} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:52:26] Statement - {conn-10002, pstmt-20001} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:52:26] Statement - {conn-10002, pstmt-20001} executed. 1.613914 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:52:26] Statement - {conn-10002, pstmt-20001} executed. 1.613914 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:52:26] Statement - {conn-10002, pstmt-20001} executed. 1.613914 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:52:26] ResultSet - {conn-10002, pstmt-20001, rs-50008} open
[14:52:26] ResultSet - {conn-10002, pstmt-20001, rs-50008} open
[14:52:26] ResultSet - {conn-10002, pstmt-20001, rs-50008} Header: [id, name, count, sale, version]
[14:52:26] ResultSet - {conn-10002, pstmt-20001, rs-50008} Header: [id, name, count, sale, version]
[14:52:26] ResultSet - {conn-10002, pstmt-20001, rs-50008} Result: [1, 手机, 10, 3, 3]
[14:52:26] ResultSet - {conn-10002, pstmt-20001, rs-50008} Result: [1, 手机, 10, 3, 3]
[14:52:26] ResultSet - {conn-10002, pstmt-20001, rs-50008} closed
[14:52:26] ResultSet - {conn-10002, pstmt-20001, rs-50008} closed
[14:52:26] Statement - {conn-10002, pstmt-20001} clearParameters. 
[14:52:26] Statement - {conn-10002, pstmt-20001} clearParameters. 
[14:52:26] Statement - {conn-10002, pstmt-20001} clearParameters. 
[14:52:26] Connection - {conn-10002} pool-recycle
[14:52:26] Connection - {conn-10002} pool-recycle
[14:52:26] Connection - {conn-10002} pool-recycle
[14:52:26] Connection - {conn-10002} pool-connect
[14:52:26] Connection - {conn-10002} pool-connect
[14:52:26] Connection - {conn-10002} pool-connect
[14:52:26] Statement - {conn-10002, pstmt-20003} Parameters : [1, 3]
[14:52:26] Statement - {conn-10002, pstmt-20003} Parameters : [1, 3]
[14:52:26] Statement - {conn-10002, pstmt-20003} Parameters : [1, 3]
[14:52:26] Statement - {conn-10002, pstmt-20003} Types : [INTEGER, INTEGER]
[14:52:26] Statement - {conn-10002, pstmt-20003} Types : [INTEGER, INTEGER]
[14:52:26] Statement - {conn-10002, pstmt-20003} Types : [INTEGER, INTEGER]
[14:52:26] Statement - {conn-10002, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:52:26] Statement - {conn-10002, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:52:26] Statement - {conn-10002, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:52:26] Statement - {conn-10002, pstmt-20003} executed. 39.066297 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:52:26] Statement - {conn-10002, pstmt-20003} executed. 39.066297 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:52:26] Statement - {conn-10002, pstmt-20003} executed. 39.066297 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:52:26] Statement - {conn-10002, pstmt-20003} clearParameters. 
[14:52:26] Statement - {conn-10002, pstmt-20003} clearParameters. 
[14:52:26] Statement - {conn-10002, pstmt-20003} clearParameters. 
[14:52:26] Connection - {conn-10002} pool-recycle
[14:52:26] Connection - {conn-10002} pool-recycle
[14:52:26] Connection - {conn-10002} pool-recycle
[14:52:26] Connection - {conn-10002} pool-connect
[14:52:26] Connection - {conn-10002} pool-connect
[14:52:26] Connection - {conn-10002} pool-connect
[14:52:26] Statement - {conn-10002, pstmt-20004} Parameters : [null, 1, 手机, 2018-06-26 14:52:26.643]
[14:52:26] Statement - {conn-10002, pstmt-20004} Parameters : [null, 1, 手机, 2018-06-26 14:52:26.643]
[14:52:26] Statement - {conn-10002, pstmt-20004} Parameters : [null, 1, 手机, 2018-06-26 14:52:26.643]
[14:52:26] Statement - {conn-10002, pstmt-20004} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:52:26] Statement - {conn-10002, pstmt-20004} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:52:26] Statement - {conn-10002, pstmt-20004} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:52:26] Statement - {conn-10002, pstmt-20004} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-26 14:52:26.643')
[14:52:26] Statement - {conn-10002, pstmt-20004} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-26 14:52:26.643')
[14:52:26] Statement - {conn-10002, pstmt-20004} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-26 14:52:26.643')
[14:52:26] Statement - {conn-10002, pstmt-20004} executed. 45.833126 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:52:26] Statement - {conn-10002, pstmt-20004} executed. 45.833126 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:52:26] Statement - {conn-10002, pstmt-20004} executed. 45.833126 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:52:26] ResultSet - {conn-10002, pstmt-20004, rs-50009} open
[14:52:26] ResultSet - {conn-10002, pstmt-20004, rs-50009} open
[14:52:26] ResultSet - {conn-10002, pstmt-20004, rs-50009} Header: [GENERATED_KEY]
[14:52:26] ResultSet - {conn-10002, pstmt-20004, rs-50009} Header: [GENERATED_KEY]
[14:52:26] ResultSet - {conn-10002, pstmt-20004, rs-50009} Result: [197]
[14:52:26] ResultSet - {conn-10002, pstmt-20004, rs-50009} Result: [197]
[14:52:26] ResultSet - {conn-10002, pstmt-20004, rs-50009} closed
[14:52:26] ResultSet - {conn-10002, pstmt-20004, rs-50009} closed
[14:52:26] Statement - {conn-10002, pstmt-20004} clearParameters. 
[14:52:26] Statement - {conn-10002, pstmt-20004} clearParameters. 
[14:52:26] Statement - {conn-10002, pstmt-20004} clearParameters. 
[14:52:26] Connection - {conn-10002} pool-recycle
[14:52:26] Connection - {conn-10002} pool-recycle
[14:52:26] Connection - {conn-10002} pool-recycle
[14:53:13] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:53:13] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[14:53:48] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59985, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:54:13] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:54:13] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[14:54:48] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59985, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:55:13] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:55:13] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[14:55:48] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:59985, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:55:52] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.18.244
[14:55:52] Connection - {conn-10002} pool-connect
[14:55:52] Connection - {conn-10002} pool-connect
[14:55:52] Connection - {conn-10002} pool-connect
[14:55:52] Statement - {conn-10002, pstmt-20001} Parameters : [1]
[14:55:52] Statement - {conn-10002, pstmt-20001} Parameters : [1]
[14:55:52] Statement - {conn-10002, pstmt-20001} Parameters : [1]
[14:55:52] Statement - {conn-10002, pstmt-20001} Types : [INTEGER]
[14:55:52] Statement - {conn-10002, pstmt-20001} Types : [INTEGER]
[14:55:52] Statement - {conn-10002, pstmt-20001} Types : [INTEGER]
[14:55:52] Statement - {conn-10002, pstmt-20001} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:55:52] Statement - {conn-10002, pstmt-20001} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:55:52] Statement - {conn-10002, pstmt-20001} executed. 
SELECT id, name, count, sale, version
FROM stock
WHERE id = 1
[14:55:52] Statement - {conn-10002, pstmt-20001} executed. 2.404031 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:55:52] Statement - {conn-10002, pstmt-20001} executed. 2.404031 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:55:52] Statement - {conn-10002, pstmt-20001} executed. 2.404031 millis. 
select
     
    id, name, count, sale, version
   
    from stock
    where id = ?
[14:55:52] ResultSet - {conn-10002, pstmt-20001, rs-50010} open
[14:55:52] ResultSet - {conn-10002, pstmt-20001, rs-50010} open
[14:55:52] ResultSet - {conn-10002, pstmt-20001, rs-50010} Header: [id, name, count, sale, version]
[14:55:52] ResultSet - {conn-10002, pstmt-20001, rs-50010} Header: [id, name, count, sale, version]
[14:55:52] ResultSet - {conn-10002, pstmt-20001, rs-50010} Result: [1, 手机, 10, 4, 4]
[14:55:52] ResultSet - {conn-10002, pstmt-20001, rs-50010} Result: [1, 手机, 10, 4, 4]
[14:55:52] ResultSet - {conn-10002, pstmt-20001, rs-50010} closed
[14:55:52] ResultSet - {conn-10002, pstmt-20001, rs-50010} closed
[14:55:52] Statement - {conn-10002, pstmt-20001} clearParameters. 
[14:55:52] Statement - {conn-10002, pstmt-20001} clearParameters. 
[14:55:52] Statement - {conn-10002, pstmt-20001} clearParameters. 
[14:55:52] Connection - {conn-10002} pool-recycle
[14:55:52] Connection - {conn-10002} pool-recycle
[14:55:52] Connection - {conn-10002} pool-recycle
[14:55:52] Connection - {conn-10002} pool-connect
[14:55:52] Connection - {conn-10002} pool-connect
[14:55:52] Connection - {conn-10002} pool-connect
[14:55:52] Statement - {conn-10002, pstmt-20003} Parameters : [1, 4]
[14:55:52] Statement - {conn-10002, pstmt-20003} Parameters : [1, 4]
[14:55:52] Statement - {conn-10002, pstmt-20003} Parameters : [1, 4]
[14:55:52] Statement - {conn-10002, pstmt-20003} Types : [INTEGER, INTEGER]
[14:55:52] Statement - {conn-10002, pstmt-20003} Types : [INTEGER, INTEGER]
[14:55:52] Statement - {conn-10002, pstmt-20003} Types : [INTEGER, INTEGER]
[14:55:52] Statement - {conn-10002, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[14:55:52] Statement - {conn-10002, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[14:55:52] Statement - {conn-10002, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[14:55:52] Statement - {conn-10002, pstmt-20003} executed. 4.508119 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:55:52] Statement - {conn-10002, pstmt-20003} executed. 4.508119 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:55:52] Statement - {conn-10002, pstmt-20003} executed. 4.508119 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:55:52] Statement - {conn-10002, pstmt-20003} clearParameters. 
[14:55:52] Statement - {conn-10002, pstmt-20003} clearParameters. 
[14:55:52] Statement - {conn-10002, pstmt-20003} clearParameters. 
[14:55:52] Connection - {conn-10002} pool-recycle
[14:55:52] Connection - {conn-10002} pool-recycle
[14:55:52] Connection - {conn-10002} pool-recycle
[14:55:52] Connection - {conn-10002} pool-connect
[14:55:52] Connection - {conn-10002} pool-connect
[14:55:52] Connection - {conn-10002} pool-connect
[14:55:52] Statement - {conn-10002, pstmt-20004} Parameters : [null, 1, 手机, 2018-06-26 14:55:52.692]
[14:55:52] Statement - {conn-10002, pstmt-20004} Parameters : [null, 1, 手机, 2018-06-26 14:55:52.692]
[14:55:52] Statement - {conn-10002, pstmt-20004} Parameters : [null, 1, 手机, 2018-06-26 14:55:52.692]
[14:55:52] Statement - {conn-10002, pstmt-20004} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:55:52] Statement - {conn-10002, pstmt-20004} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:55:52] Statement - {conn-10002, pstmt-20004} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:55:52] Statement - {conn-10002, pstmt-20004} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-26 14:55:52.692')
[14:55:52] Statement - {conn-10002, pstmt-20004} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-26 14:55:52.692')
[14:55:52] Statement - {conn-10002, pstmt-20004} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-26 14:55:52.692')
[14:55:52] Statement - {conn-10002, pstmt-20004} executed. 28.02168 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:55:52] Statement - {conn-10002, pstmt-20004} executed. 28.02168 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:55:52] Statement - {conn-10002, pstmt-20004} executed. 28.02168 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:55:52] ResultSet - {conn-10002, pstmt-20004, rs-50011} open
[14:55:52] ResultSet - {conn-10002, pstmt-20004, rs-50011} open
[14:55:52] ResultSet - {conn-10002, pstmt-20004, rs-50011} Header: [GENERATED_KEY]
[14:55:52] ResultSet - {conn-10002, pstmt-20004, rs-50011} Header: [GENERATED_KEY]
[14:55:52] ResultSet - {conn-10002, pstmt-20004, rs-50011} Result: [198]
[14:55:52] ResultSet - {conn-10002, pstmt-20004, rs-50011} Result: [198]
[14:55:52] ResultSet - {conn-10002, pstmt-20004, rs-50011} closed
[14:55:52] ResultSet - {conn-10002, pstmt-20004, rs-50011} closed
[14:55:52] Statement - {conn-10002, pstmt-20004} clearParameters. 
[14:55:52] Statement - {conn-10002, pstmt-20004} clearParameters. 
[14:55:52] Statement - {conn-10002, pstmt-20004} clearParameters. 
[14:55:52] Connection - {conn-10002} pool-recycle
[14:55:52] Connection - {conn-10002} pool-recycle
[14:55:52] Connection - {conn-10002} pool-recycle
[14:56:13] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:56:13] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[14:57:13] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:59929, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:57:13] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:59985, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[14:57:13] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[14:57:13] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:06] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[14:59:07] Connection - {conn-10001} connected
[14:59:07] Connection - {conn-10001} connected
[14:59:07] Connection - {conn-10001} connected
[14:59:07] Connection - {conn-10002} connected
[14:59:07] Connection - {conn-10002} connected
[14:59:07] Connection - {conn-10002} connected
[14:59:07] Connection - {conn-10003} connected
[14:59:07] Connection - {conn-10003} connected
[14:59:07] Connection - {conn-10003} connected
[14:59:07] DruidDataSource - {dataSource-1} inited
[14:59:14] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=7048&registry=zookeeper&timestamp=1529996355239, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, com.crossoverJie.seconds.kill.api.OrderServiceFacade=override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[14:59:15] ZkEventThread - Starting ZkClient event thread.
[14:59:15] ZkClient - Awaiting connection to Zookeeper server
[14:59:15] ZkClient - Waiting for keeper state SyncConnected
[14:59:15] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:60492,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[14:59:15] ZkClient - zookeeper state changed (SyncConnected)
[14:59:15] ZkClient - Leaving process event
[14:59:15] ZkClient - State is SyncConnected
[14:59:15] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:15] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:16] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:16] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:16] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:16] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:16] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:16] RegistryProtocol -  [DUBBO] exported provider url changed, origin url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, old export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, new export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:16] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:16] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:16] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996356065, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:16] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996356065 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=7048&registry=zookeeper&timestamp=1529996356065, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:16] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996356065, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:16] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996356065, dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:16] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996356065, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:16] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:16] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996356065, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[14:59:16] RegistryProtocol -  [DUBBO] exported provider url changed, origin url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996356065, old export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996356065, new export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996356065, dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:16] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:16] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=7048&timestamp=1529996355239], dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:16] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=7048&timestamp=1529996355239, dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:16] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:16] Connection - {conn-10001} closed
[15:00:16] Connection - {conn-10001} closed
[15:00:16] Connection - {conn-10001} closed
[15:00:16] Connection - {conn-10002} closed
[15:00:16] Connection - {conn-10002} closed
[15:00:16] Connection - {conn-10002} closed
[15:00:16] Connection - {conn-10003} closed
[15:00:16] Connection - {conn-10003} closed
[15:00:16] Connection - {conn-10003} closed
[15:00:16] DruidDataSource - {dataSource-1} closed
[15:00:16] ZkClient - Received event: WatchedEvent state:Disconnected type:None path:null
[15:00:16] ZkClient - Waiting for keeper state SyncConnected
[15:00:16] ZkClient - zookeeper state changed (Disconnected)
[15:00:16] ZkEventThread - New event: ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@7b4547fa]
[15:00:16] ZkClient - Leaving process event
[15:00:16] ZkEventThread - Delivering event #1 ZkEvent[State changed to Disconnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@7b4547fa]
[15:00:16] ZkEventThread - Delivering event #1 done
[15:00:18] ZkClient - Received event: WatchedEvent state:Expired type:None path:null
[15:00:18] ZkClient - zookeeper state changed (Expired)
[15:00:18] ZkEventThread - New event: ZkEvent[State changed to Expired sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@7b4547fa]
[15:00:18] ZkEventThread - Delivering event #2 ZkEvent[State changed to Expired sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@7b4547fa]
[15:00:18] ZkEventThread - Delivering event #2 done
[15:00:18] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[15:00:18] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[15:00:18] ZkEventThread - New event: ZkEvent[New session event sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@7b4547fa]
[15:00:18] ZkEventThread - Delivering event #3 ZkEvent[New session event sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@7b4547fa]
[15:00:18] ZkEventThread - New event: ZkEvent[Children of /dubbo/com.crossoverJie.seconds.kill.api.OrderServiceFacade/configurators changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@f33d871]
[15:00:18] ZkEventThread - New event: ZkEvent[Children of /dubbo/com.crossoverJie.seconds.kill.api.StockServiceFacade/configurators changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@5e1824fa]
[15:00:18] ZkClient - Leaving process event
[15:00:18] ZookeeperRegistry -  [DUBBO] Recover register url [dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996356065], dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:18] ZookeeperRegistry -  [DUBBO] Recover subscribe url [provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996356065], dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:18] ZkEventThread - Delivering event #3 done
[15:00:18] ZkEventThread - Delivering event #4 ZkEvent[Children of /dubbo/com.crossoverJie.seconds.kill.api.OrderServiceFacade/configurators changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@f33d871]
[15:00:18] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[15:00:18] ZkClient - zookeeper state changed (SyncConnected)
[15:00:18] ZkEventThread - New event: ZkEvent[State changed to SyncConnected sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$1@7b4547fa]
[15:00:18] ZkClient - Leaving process event
[15:00:18] ZkClient - State is SyncConnected
[15:00:18] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:18] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996356065, dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:18] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:18] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:18] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:18] ZkEventThread - Delivering event #4 done
[15:00:18] ZkEventThread - Delivering event #5 ZkEvent[Children of /dubbo/com.crossoverJie.seconds.kill.api.StockServiceFacade/configurators changed sent to com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient$2@5e1824fa]
[15:00:18] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996356065, dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:18] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:18] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:18] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996356065, dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:18] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996356065, dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:18] ZkClient - Closing ZkClient...
[15:00:18] ZkEventThread - Delivering event #5 done
[15:00:18] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[15:00:18] ZkClient - Closing ZkClient...done
[15:00:28] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:29] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:29] NettyChannel -  [DUBBO] Close netty channel [id: 0x2a3ccb31, /192.168.18.244:60500 => /192.168.18.244:20880], dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:29] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:29] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:60500,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:29] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996356065, dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:29] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:29] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996356065, dubbo version: 2.0.1, current host: 192.168.18.244
[15:00:29] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=7048&side=provider&timestamp=1529996355246, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:17] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[15:01:18] Connection - {conn-10001} connected
[15:01:18] Connection - {conn-10001} connected
[15:01:18] Connection - {conn-10001} connected
[15:01:18] Connection - {conn-10002} connected
[15:01:18] Connection - {conn-10002} connected
[15:01:18] Connection - {conn-10002} connected
[15:01:18] Connection - {conn-10003} connected
[15:01:18] Connection - {conn-10003} connected
[15:01:18] Connection - {conn-10003} connected
[15:01:18] DruidDataSource - {dataSource-1} inited
[15:01:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996493271, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996493271 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=28864&registry=zookeeper&timestamp=1529996493265, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, com.crossoverJie.seconds.kill.api.OrderServiceFacade=override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[15:01:33] ZkEventThread - Starting ZkClient event thread.
[15:01:33] ZkClient - Awaiting connection to Zookeeper server
[15:01:33] ZkClient - Waiting for keeper state SyncConnected
[15:01:33] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[15:01:33] ZkClient - zookeeper state changed (SyncConnected)
[15:01:33] ZkClient - Leaving process event
[15:01:33] ZkClient - State is SyncConnected
[15:01:33] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996493271, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:33] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996493271, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:34] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996493271, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:34] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:34] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996493271, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:34] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:34] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:34] RegistryProtocol -  [DUBBO] exported provider url changed, origin url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996493271, old export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996493271, new export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996493271, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:34] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:34] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:34] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996494041, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:34] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996494041 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=28864&registry=zookeeper&timestamp=1529996494041, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:34] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996494041, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:34] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996494041, dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:34] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996494041, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:34] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:34] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996494041, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:01:34] RegistryProtocol -  [DUBBO] exported provider url changed, origin url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996494041, old export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996494041, new export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996494041, dubbo version: 2.0.1, current host: 192.168.18.244
[15:03:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:60575, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[15:04:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:60575, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[15:04:50] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[15:04:50] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=28864&timestamp=1529996493265], dubbo version: 2.0.1, current host: 192.168.18.244
[15:04:50] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=28864&timestamp=1529996493265, dubbo version: 2.0.1, current host: 192.168.18.244
[15:04:50] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996494041, dubbo version: 2.0.1, current host: 192.168.18.244
[15:04:50] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996494041, dubbo version: 2.0.1, current host: 192.168.18.244
[15:04:50] Connection - {conn-10001} closed
[15:04:50] Connection - {conn-10001} closed
[15:04:50] Connection - {conn-10001} closed
[15:04:50] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996493271, dubbo version: 2.0.1, current host: 192.168.18.244
[15:04:50] Connection - {conn-10002} closed
[15:04:50] Connection - {conn-10002} closed
[15:04:50] Connection - {conn-10002} closed
[15:04:50] Connection - {conn-10003} closed
[15:04:50] Connection - {conn-10003} closed
[15:04:50] Connection - {conn-10003} closed
[15:04:50] DruidDataSource - {dataSource-1} closed
[15:04:50] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996493271, dubbo version: 2.0.1, current host: 192.168.18.244
[15:04:50] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996494041, dubbo version: 2.0.1, current host: 192.168.18.244
[15:04:50] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996494041, dubbo version: 2.0.1, current host: 192.168.18.244
[15:04:50] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996493271, dubbo version: 2.0.1, current host: 192.168.18.244
[15:04:50] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996493271, dubbo version: 2.0.1, current host: 192.168.18.244
[15:04:50] ZkClient - Closing ZkClient...
[15:04:50] ZkEventThread - Terminate ZkClient event thread.
[15:04:50] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[15:04:50] ZkClient - Closing ZkClient...done
[15:05:00] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[15:05:00] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[15:05:00] NettyChannel -  [DUBBO] Close netty channel [id: 0x2e928d73, /192.168.18.244:60575 => /192.168.18.244:20880], dubbo version: 2.0.1, current host: 192.168.18.244
[15:05:00] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[15:05:00] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:60575,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996493271, dubbo version: 2.0.1, current host: 192.168.18.244
[15:05:00] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996494041, dubbo version: 2.0.1, current host: 192.168.18.244
[15:05:00] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996493271, dubbo version: 2.0.1, current host: 192.168.18.244
[15:05:00] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996494041, dubbo version: 2.0.1, current host: 192.168.18.244
[15:05:00] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=28864&side=provider&timestamp=1529996493271, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:54] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[15:21:55] Connection - {conn-10001} connected
[15:21:55] Connection - {conn-10001} connected
[15:21:55] Connection - {conn-10001} connected
[15:21:55] Connection - {conn-10002} connected
[15:21:55] Connection - {conn-10002} connected
[15:21:55] Connection - {conn-10002} connected
[15:21:55] Connection - {conn-10003} connected
[15:21:55] Connection - {conn-10003} connected
[15:21:55] Connection - {conn-10003} connected
[15:21:55] DruidDataSource - {dataSource-1} inited
[15:21:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718347, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718347 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=9096&registry=zookeeper&timestamp=1529997718339, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, com.crossoverJie.seconds.kill.api.OrderServiceFacade=override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[15:21:58] ZkEventThread - Starting ZkClient event thread.
[15:21:58] ZkClient - Awaiting connection to Zookeeper server
[15:21:58] ZkClient - Waiting for keeper state SyncConnected
[15:21:58] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[15:21:58] ZkClient - zookeeper state changed (SyncConnected)
[15:21:58] ZkClient - Leaving process event
[15:21:58] ZkClient - State is SyncConnected
[15:21:58] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718347, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718347, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718347, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718347, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] RegistryProtocol -  [DUBBO] exported provider url changed, origin url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718347, old export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718347, new export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718347, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718896, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718896 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=9096&registry=zookeeper&timestamp=1529997718896, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718896, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:58] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718896, dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:59] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718896, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:59] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:59] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718896, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:21:59] RegistryProtocol -  [DUBBO] exported provider url changed, origin url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718896, old export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718896, new export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718896, dubbo version: 2.0.1, current host: 192.168.18.244
[15:23:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:61301, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[15:24:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:61301, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[15:25:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:61301, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:61301, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:32] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:32] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=9096&timestamp=1529997718339], dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:32] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=9096&timestamp=1529997718339, dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:32] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718347, dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:32] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718347, dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:32] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718896, dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:32] Connection - {conn-10001} closed
[15:26:32] Connection - {conn-10001} closed
[15:26:32] Connection - {conn-10001} closed
[15:26:32] Connection - {conn-10002} closed
[15:26:32] Connection - {conn-10002} closed
[15:26:32] Connection - {conn-10002} closed
[15:26:32] Connection - {conn-10003} closed
[15:26:32] Connection - {conn-10003} closed
[15:26:32] Connection - {conn-10003} closed
[15:26:32] DruidDataSource - {dataSource-1} closed
[15:26:32] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718896, dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:32] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718896, dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:32] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718896, dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:32] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718347, dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:32] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718347, dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:32] ZkClient - Closing ZkClient...
[15:26:32] ZkEventThread - Terminate ZkClient event thread.
[15:26:32] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[15:26:32] ZkClient - Closing ZkClient...done
[15:26:42] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:42] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:42] NettyChannel -  [DUBBO] Close netty channel [id: 0x1acefd20, /192.168.18.244:61301 => /192.168.18.244:20880], dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:42] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:42] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:61301,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718347, dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:42] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718896, dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:42] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718347, dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:42] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718896, dubbo version: 2.0.1, current host: 192.168.18.244
[15:26:42] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=9096&side=provider&timestamp=1529997718347, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:28] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[15:35:29] Connection - {conn-10001} connected
[15:35:29] Connection - {conn-10001} connected
[15:35:29] Connection - {conn-10001} connected
[15:35:29] Connection - {conn-10002} connected
[15:35:29] Connection - {conn-10002} connected
[15:35:29] Connection - {conn-10002} connected
[15:35:29] Connection - {conn-10003} connected
[15:35:29] Connection - {conn-10003} connected
[15:35:29] Connection - {conn-10003} connected
[15:35:29] DruidDataSource - {dataSource-1} inited
[15:35:31] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:31] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:31] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:31] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:31] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:31] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998531925, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998531925 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=4324&registry=zookeeper&timestamp=1529998531918, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, com.crossoverJie.seconds.kill.api.OrderServiceFacade=override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[15:35:32] ZkEventThread - Starting ZkClient event thread.
[15:35:32] ZkClient - Awaiting connection to Zookeeper server
[15:35:32] ZkClient - Waiting for keeper state SyncConnected
[15:35:32] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[15:35:32] ZkClient - zookeeper state changed (SyncConnected)
[15:35:32] ZkClient - Leaving process event
[15:35:32] ZkClient - State is SyncConnected
[15:35:32] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998531925, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998531925, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998531925, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998531925, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] RegistryProtocol -  [DUBBO] exported provider url changed, origin url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998531925, old export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998531925, new export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998531925, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998532428, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998532428 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=4324&registry=zookeeper&timestamp=1529998532428, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998532428, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998532428, dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998532428, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998532428, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:35:32] RegistryProtocol -  [DUBBO] exported provider url changed, origin url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998532428, old export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998532428, new export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998532428, dubbo version: 2.0.1, current host: 192.168.18.244
[15:37:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:61755, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:07] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:07] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=4324&timestamp=1529998531918], dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:07] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=4324&timestamp=1529998531918, dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:07] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998531925, dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:07] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998531925, dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:07] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998532428, dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:07] Connection - {conn-10001} closed
[15:38:07] Connection - {conn-10001} closed
[15:38:07] Connection - {conn-10001} closed
[15:38:07] Connection - {conn-10002} closed
[15:38:07] Connection - {conn-10002} closed
[15:38:07] Connection - {conn-10002} closed
[15:38:07] Connection - {conn-10003} closed
[15:38:07] Connection - {conn-10003} closed
[15:38:07] Connection - {conn-10003} closed
[15:38:07] DruidDataSource - {dataSource-1} closed
[15:38:07] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998532428, dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:07] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998531925, dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:07] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998531925, dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:07] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998532428, dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:07] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998532428, dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:07] ZkClient - Closing ZkClient...
[15:38:07] ZkEventThread - Terminate ZkClient event thread.
[15:38:07] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[15:38:07] ZkClient - Closing ZkClient...done
[15:38:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:61755, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:17] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:17] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:17] NettyChannel -  [DUBBO] Close netty channel [id: 0x3635a439, /192.168.18.244:61755 => /192.168.18.244:20880], dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:17] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:17] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998532428, dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:17] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:61755,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998531925, dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:17] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998531925, dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:17] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998532428, dubbo version: 2.0.1, current host: 192.168.18.244
[15:38:17] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4324&side=provider&timestamp=1529998531925, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:30] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[15:39:31] Connection - {conn-10001} connected
[15:39:31] Connection - {conn-10001} connected
[15:39:31] Connection - {conn-10001} connected
[15:39:31] Connection - {conn-10002} connected
[15:39:31] Connection - {conn-10002} connected
[15:39:31] Connection - {conn-10002} connected
[15:39:31] Connection - {conn-10003} connected
[15:39:31] Connection - {conn-10003} connected
[15:39:31] Connection - {conn-10003} connected
[15:39:31] DruidDataSource - {dataSource-1} inited
[15:39:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:33] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:33] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:33] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998773766, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:33] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998773766 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=26632&registry=zookeeper&timestamp=1529998773760, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:33] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, com.crossoverJie.seconds.kill.api.OrderServiceFacade=override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:61894,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998773766, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[15:39:34] ZkEventThread - Starting ZkClient event thread.
[15:39:34] ZkClient - Awaiting connection to Zookeeper server
[15:39:34] ZkClient - Waiting for keeper state SyncConnected
[15:39:34] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[15:39:34] ZkClient - zookeeper state changed (SyncConnected)
[15:39:34] ZkClient - Leaving process event
[15:39:34] ZkClient - State is SyncConnected
[15:39:34] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998773766, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998773766, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998773766, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998773766, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] RegistryProtocol -  [DUBBO] exported provider url changed, origin url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998773766, old export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998773766, new export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998773766, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998774285, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998774285 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=26632&registry=zookeeper&timestamp=1529998774285, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998774285, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998774285, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998774285, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998774285, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] RegistryProtocol -  [DUBBO] exported provider url changed, origin url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998774285, old export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998774285, new export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998774285, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=26632&timestamp=1529998773760], dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=26632&timestamp=1529998773760, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998774285, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] Connection - {conn-10001} closed
[15:39:34] Connection - {conn-10001} closed
[15:39:34] Connection - {conn-10001} closed
[15:39:34] Connection - {conn-10002} closed
[15:39:34] Connection - {conn-10002} closed
[15:39:34] Connection - {conn-10002} closed
[15:39:34] Connection - {conn-10003} closed
[15:39:34] Connection - {conn-10003} closed
[15:39:34] Connection - {conn-10003} closed
[15:39:34] DruidDataSource - {dataSource-1} closed
[15:39:34] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998774285, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998773766, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998773766, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998773766, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998773766, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998774285, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998774285, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:34] ZkClient - Closing ZkClient...
[15:39:34] ZkEventThread - Terminate ZkClient event thread.
[15:39:34] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[15:39:34] ZkClient - Closing ZkClient...done
[15:39:44] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:44] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:44] NettyChannel -  [DUBBO] Close netty channel [id: 0x00b16a52, /192.168.18.244:61902 => /192.168.18.244:20880], dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:44] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:44] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:61902,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998773766, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:44] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998774285, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:44] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998773766, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:44] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998774285, dubbo version: 2.0.1, current host: 192.168.18.244
[15:39:44] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=26632&side=provider&timestamp=1529998773766, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:36] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[16:19:37] Connection - {conn-10001} connected
[16:19:37] Connection - {conn-10001} connected
[16:19:37] Connection - {conn-10001} connected
[16:19:38] Connection - {conn-10002} connected
[16:19:38] Connection - {conn-10002} connected
[16:19:38] Connection - {conn-10002} connected
[16:19:38] Connection - {conn-10003} connected
[16:19:38] Connection - {conn-10003} connected
[16:19:38] Connection - {conn-10003} connected
[16:19:38] DruidDataSource - {dataSource-1} inited
[16:19:39] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:39] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180196, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180196 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=6660&registry=zookeeper&timestamp=1530001180189, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, com.crossoverJie.seconds.kill.api.OrderServiceFacade=override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[16:19:40] ZkEventThread - Starting ZkClient event thread.
[16:19:40] ZkClient - Awaiting connection to Zookeeper server
[16:19:40] ZkClient - Waiting for keeper state SyncConnected
[16:19:40] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[16:19:40] ZkClient - zookeeper state changed (SyncConnected)
[16:19:40] ZkClient - Leaving process event
[16:19:40] ZkClient - State is SyncConnected
[16:19:40] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180196, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180196, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180196, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180196, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] RegistryProtocol -  [DUBBO] exported provider url changed, origin url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180196, old export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180196, new export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180196, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180740, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180740 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=6660&registry=zookeeper&timestamp=1530001180740, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180740, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180740, dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180740, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180740, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[16:19:40] RegistryProtocol -  [DUBBO] exported provider url changed, origin url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180740, old export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180740, new export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180740, dubbo version: 2.0.1, current host: 192.168.18.244
[16:21:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:63721, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:22:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:63721, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:63721, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:32] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:32] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=6660&timestamp=1530001180189], dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:32] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=6660&timestamp=1530001180189, dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:32] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180196, dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:32] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180196, dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:32] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180740, dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:32] Connection - {conn-10001} closed
[16:23:32] Connection - {conn-10001} closed
[16:23:32] Connection - {conn-10001} closed
[16:23:32] Connection - {conn-10002} closed
[16:23:32] Connection - {conn-10002} closed
[16:23:32] Connection - {conn-10002} closed
[16:23:32] Connection - {conn-10003} closed
[16:23:32] Connection - {conn-10003} closed
[16:23:32] Connection - {conn-10003} closed
[16:23:32] DruidDataSource - {dataSource-1} closed
[16:23:32] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180740, dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:32] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180740, dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:32] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180740, dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:32] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180196, dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:32] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180196, dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:32] ZkClient - Closing ZkClient...
[16:23:32] ZkEventThread - Terminate ZkClient event thread.
[16:23:32] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[16:23:32] ZkClient - Closing ZkClient...done
[16:23:42] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:42] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:42] NettyChannel -  [DUBBO] Close netty channel [id: 0x3635a439, /192.168.18.244:63721 => /192.168.18.244:20880], dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:42] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:42] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:63721,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180196, dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:42] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180740, dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:42] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180196, dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:42] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180740, dubbo version: 2.0.1, current host: 192.168.18.244
[16:23:42] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=6660&side=provider&timestamp=1530001180196, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:29] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[16:24:30] Connection - {conn-10001} connected
[16:24:30] Connection - {conn-10001} connected
[16:24:30] Connection - {conn-10001} connected
[16:24:30] Connection - {conn-10002} connected
[16:24:30] Connection - {conn-10002} connected
[16:24:30] Connection - {conn-10002} connected
[16:24:30] Connection - {conn-10003} connected
[16:24:30] Connection - {conn-10003} connected
[16:24:30] Connection - {conn-10003} connected
[16:24:30] DruidDataSource - {dataSource-1} inited
[16:24:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001472549, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001472549 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=17700&registry=zookeeper&timestamp=1530001472542, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, com.crossoverJie.seconds.kill.api.OrderServiceFacade=override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[16:24:32] ZkEventThread - Starting ZkClient event thread.
[16:24:32] ZkClient - Awaiting connection to Zookeeper server
[16:24:32] ZkClient - Waiting for keeper state SyncConnected
[16:24:32] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[16:24:32] ZkClient - zookeeper state changed (SyncConnected)
[16:24:32] ZkClient - Leaving process event
[16:24:32] ZkClient - State is SyncConnected
[16:24:32] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001472549, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:32] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001472549, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:33] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001472549, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:33] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:33] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001472549, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:33] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:33] RegistryProtocol -  [DUBBO] exported provider url changed, origin url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001472549, old export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001472549, new export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001472549, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:33] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:33] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:33] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001473130, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:33] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001473130 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=17700&registry=zookeeper&timestamp=1530001473129, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:33] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001473130, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:33] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001473130, dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:33] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001473130, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:33] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:33] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001473130, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[16:24:33] RegistryProtocol -  [DUBBO] exported provider url changed, origin url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001473130, old export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001473130, new export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001473130, dubbo version: 2.0.1, current host: 192.168.18.244
[16:26:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:27:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:28:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:29:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:30:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:31:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:32:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:33:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:34:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:35:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:36:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:37:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:38:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:39:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:40:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:41:32] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[16:41:32] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:42:32] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:42:32] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[16:43:32] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:43:32] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[16:44:32] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:44:32] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[16:45:32] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:45:32] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[16:46:32] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:46:32] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[16:47:32] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:47:32] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[16:48:32] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:48:32] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[16:49:32] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:49:32] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[16:50:32] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:50:32] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[16:51:32] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:51:32] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[16:52:32] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:52:33] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[16:53:32] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:63826, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[16:53:32] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:12] AbstractConfig -  [DUBBO] Run shutdown hook now., dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:12] AbstractRegistryFactory -  [DUBBO] Close all registries [zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=17700&timestamp=1530001472542], dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:12] ZookeeperRegistry -  [DUBBO] Destroy registry:zookeeper://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&interface=com.alibaba.dubbo.registry.RegistryService&owner=crossoverJie&pid=17700&timestamp=1530001472542, dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:12] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001473130, dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:12] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001473130, dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:12] ZookeeperRegistry -  [DUBBO] Unregister: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001472549, dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:12] Connection - {conn-10001} closed
[16:54:12] Connection - {conn-10001} closed
[16:54:12] Connection - {conn-10001} closed
[16:54:12] Connection - {conn-10002} closed
[16:54:12] Connection - {conn-10002} closed
[16:54:12] Connection - {conn-10002} closed
[16:54:12] Connection - {conn-10003} closed
[16:54:12] Connection - {conn-10003} closed
[16:54:12] Connection - {conn-10003} closed
[16:54:12] DruidDataSource - {dataSource-1} closed
[16:54:12] ZookeeperRegistry -  [DUBBO] Destroy unregister url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001472549, dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:12] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001473130, dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:12] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001473130, dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:12] ZookeeperRegistry -  [DUBBO] Unsubscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001472549, dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:12] ZookeeperRegistry -  [DUBBO] Destroy unsubscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001472549, dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:12] ZkClient - Closing ZkClient...
[16:54:12] ZkEventThread - Terminate ZkClient event thread.
[16:54:12] ZkConnection - Closing ZooKeeper connected to 192.168.116.168:2181
[16:54:12] ZkClient - Closing ZkClient...done
[16:54:22] DubboProtocol -  [DUBBO] Close dubbo server: /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:22] AbstractServer -  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:22] NettyChannel -  [DUBBO] Close netty channel [id: 0x3635a439, /192.168.18.244:63826 => /192.168.18.244:20880], dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:22] AbstractServer -  [DUBBO] All clients has discontected from /192.168.18.244:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:22] DubboProtocol -  [DUBBO] disconected from /192.168.18.244:63826,url:dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001472549, dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:22] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001473130, dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:22] DubboProtocol -  [DUBBO] Unexport service: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001472549, dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:22] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001473130, dubbo version: 2.0.1, current host: 192.168.18.244
[16:54:22] InjvmProtocol -  [DUBBO] Unexport service: injvm://127.0.0.1/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=17700&side=provider&timestamp=1530001472549, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:24] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[17:51:25] Connection - {conn-10001} connected
[17:51:25] Connection - {conn-10001} connected
[17:51:25] Connection - {conn-10001} connected
[17:51:25] Connection - {conn-10002} connected
[17:51:25] Connection - {conn-10002} connected
[17:51:25] Connection - {conn-10002} connected
[17:51:26] Connection - {conn-10003} connected
[17:51:26] Connection - {conn-10003} connected
[17:51:26] Connection - {conn-10003} connected
[17:51:26] DruidDataSource - {dataSource-1} inited
[17:51:28] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:28] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:28] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:28] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:28] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:28] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:28] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:28] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=30724&side=provider&timestamp=1530006688647, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:28] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=30724&side=provider&timestamp=1530006688647 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=30724&registry=zookeeper&timestamp=1530006688639, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:28] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:28] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:28] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:28] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:28] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:28] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:28] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.18.244:20880, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:28] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:28] ZookeeperRegistry -  [DUBBO] Load registry store file C:\Users\fhadmin\.dubbo\dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, com.crossoverJie.seconds.kill.api.OrderServiceFacade=override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true}, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:28] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:29] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[17:51:29] ZkEventThread - Starting ZkClient event thread.
[17:51:29] ZkClient - Awaiting connection to Zookeeper server
[17:51:29] ZkClient - Waiting for keeper state SyncConnected
[17:51:29] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[17:51:29] ZkClient - zookeeper state changed (SyncConnected)
[17:51:29] ZkClient - Leaving process event
[17:51:29] ZkClient - State is SyncConnected
[17:51:29] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=30724&side=provider&timestamp=1530006688647, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:29] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=30724&side=provider&timestamp=1530006688647, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:29] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=30724&side=provider&timestamp=1530006688647, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:29] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:29] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=30724&side=provider&timestamp=1530006688647, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:29] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:29] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:29] RegistryProtocol -  [DUBBO] exported provider url changed, origin url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=30724&side=provider&timestamp=1530006688647, old export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=30724&side=provider&timestamp=1530006688647, new export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=30724&side=provider&timestamp=1530006688647, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:29] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:29] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:29] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=30724&side=provider&timestamp=1530006689141, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:29] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=30724&side=provider&timestamp=1530006689141 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=30724&registry=zookeeper&timestamp=1530006689141, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:29] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=30724&side=provider&timestamp=1530006689141, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:29] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=30724&side=provider&timestamp=1530006689141, dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:29] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=30724&side=provider&timestamp=1530006689141, urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:29] RegistryProtocol -  [DUBBO] original override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:29] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=30724&side=provider&timestamp=1530006689141, override urls: [override://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true, override://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?category=configurators&disabled=true&dynamic=false&enabled=true], dubbo version: 2.0.1, current host: 192.168.18.244
[17:51:29] RegistryProtocol -  [DUBBO] exported provider url changed, origin url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=30724&side=provider&timestamp=1530006689141, old export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=30724&side=provider&timestamp=1530006689141, new export url: dubbo://192.168.18.244:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.18.244&bind.port=20880&disabled=true&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=30724&side=provider&timestamp=1530006689141, dubbo version: 2.0.1, current host: 192.168.18.244
[17:53:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[17:54:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[17:55:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[17:56:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[17:57:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[17:58:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[17:59:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:00:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:01:15] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:02:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:02:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:03:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:03:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:04:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:04:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:05:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:05:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:06:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:06:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:07:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:07:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:08:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:08:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:09:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:09:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:10:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:10:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:11:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:11:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:12:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:12:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:13:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:13:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:14:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:14:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:15:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:15:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:16:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:16:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:17:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:17:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:18:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:18:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:19:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:19:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:20:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:20:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:21:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:21:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:22:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:22:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:23:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:23:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:24:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:24:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:25:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:25:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:26:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:26:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:27:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:27:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:28:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:28:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:29:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:29:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:30:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:30:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:31:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:31:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:32:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:32:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:33:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:33:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:34:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:34:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:35:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:35:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:36:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:36:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:37:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:37:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:38:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:38:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:39:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:39:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:40:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:40:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:41:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:41:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:42:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:42:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:43:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:43:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:44:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:44:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:45:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:45:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:46:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:46:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:47:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:47:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:48:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:48:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:49:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:49:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:50:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:50:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:51:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:51:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:52:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:52:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:53:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:53:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:54:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:54:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:55:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:55:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:56:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:56:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:57:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:57:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:58:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:58:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[18:59:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[18:59:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:00:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:00:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:01:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:01:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:02:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:02:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:03:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:03:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:04:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:04:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:05:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:05:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:06:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:06:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:07:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:07:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:08:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:08:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:09:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:09:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:10:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:10:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:11:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:11:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:12:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:12:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:13:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:13:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:14:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:14:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:15:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:15:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:16:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:16:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:17:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:17:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:18:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:18:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:19:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:19:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:20:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:20:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:21:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:21:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:22:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:22:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:23:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:23:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:24:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:24:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:25:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:25:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:26:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:26:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:27:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:27:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:28:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:28:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:29:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:29:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:30:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:30:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:31:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:31:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:32:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:32:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:33:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:33:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:34:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:34:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:35:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:35:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:36:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:36:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:37:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:37:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:38:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:38:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:39:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:39:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:40:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:40:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:41:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:41:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:42:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:42:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:43:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:43:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:44:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:44:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:45:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:45:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:46:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:46:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:47:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:47:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:48:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:48:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:49:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:49:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:50:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:50:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:51:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:51:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:52:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:52:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:53:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:53:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:54:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:54:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:55:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:55:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:56:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:56:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:57:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:57:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:58:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:58:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[19:59:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[19:59:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:00:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:00:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:01:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:01:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:02:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:02:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:03:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:03:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:04:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:04:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:05:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:05:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:06:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:06:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:07:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:07:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:08:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:08:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:09:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:09:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:10:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:10:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:11:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:11:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:12:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:12:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:13:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:13:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:14:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:14:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:15:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:15:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:16:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:16:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:17:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:17:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:18:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:18:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:19:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:19:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:20:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:20:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:21:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:21:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:22:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:22:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:23:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:23:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:24:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:24:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:25:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:25:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:26:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:26:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:27:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:27:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:28:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:28:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:29:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:29:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:30:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:30:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:31:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:31:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:32:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:32:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:33:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:33:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:34:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:34:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:35:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:35:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:36:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:36:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:37:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:37:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:38:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:38:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:39:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:39:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:40:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:40:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:41:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:41:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:42:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:42:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:43:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:43:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:44:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:44:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:45:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:45:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:46:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:46:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:47:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:47:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:48:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:48:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:49:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:49:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:50:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:50:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:51:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:51:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:52:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:52:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:53:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:53:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:54:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:54:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:55:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:55:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:56:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:56:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:57:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:57:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:58:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:58:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[20:59:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[20:59:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:00:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:00:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:01:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:01:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:02:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:02:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:03:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:03:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:04:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:04:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:05:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:05:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:06:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:06:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:07:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:07:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:08:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:08:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:09:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:09:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:10:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:10:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:11:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:11:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:12:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:12:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:13:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:13:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:14:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:14:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:15:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:15:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:16:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:16:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:17:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:17:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:18:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:18:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:19:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:19:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:20:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:20:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:21:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:21:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:22:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:22:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:23:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:23:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:24:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:24:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:25:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:25:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:26:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:26:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:27:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:27:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:28:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:28:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:29:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:29:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:30:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:30:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:31:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:31:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:32:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:32:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:33:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:33:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:34:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:34:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:35:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:35:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:36:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:36:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:37:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:37:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:38:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:38:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:39:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:39:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:40:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:40:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:41:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:41:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:42:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:42:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:43:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:43:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:44:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:44:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:45:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:45:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:46:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:46:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:47:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:47:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:48:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:48:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:49:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:49:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:50:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:50:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:51:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:51:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:52:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:52:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:53:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:53:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:54:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:54:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:55:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:55:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:56:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:56:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:57:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:57:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:58:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:58:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[21:59:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[21:59:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:00:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:00:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:01:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:01:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:02:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:02:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:03:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:03:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:04:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:04:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:05:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:05:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:06:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:06:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:07:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:07:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:08:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:08:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:09:29] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:09:29] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:10:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:10:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:11:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:11:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:12:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:12:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:13:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:13:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:14:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:14:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:15:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:15:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:16:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:16:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:17:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:17:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:18:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:18:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:19:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:19:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:20:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:20:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:21:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:21:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:22:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:22:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:23:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:23:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:24:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:24:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:25:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:25:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:26:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:26:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:27:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:27:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:28:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:28:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:29:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:29:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:30:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:30:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:31:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:31:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:32:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:32:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:33:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:33:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:34:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:34:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:35:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:35:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:36:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:36:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:37:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:37:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:38:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:38:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:39:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:39:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:40:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:40:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:41:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:41:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:42:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:42:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:43:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:43:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:44:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:44:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:45:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:45:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:46:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:46:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:47:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:47:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:48:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:48:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:49:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:49:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:50:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:50:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:51:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:51:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:52:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:52:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:53:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:53:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:54:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:54:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:55:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:55:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:56:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:56:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:57:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:57:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:58:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:58:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[22:59:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[22:59:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:00:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:00:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:01:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:01:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:02:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:02:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:03:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:03:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:04:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:04:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:05:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:05:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:06:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:06:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:07:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:07:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:08:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:08:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:09:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:09:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:10:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:10:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:11:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:11:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:12:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:12:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:13:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:13:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:14:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:14:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:15:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:15:32] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:16:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:16:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:17:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:17:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:18:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:18:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:19:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:19:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:20:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:20:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:21:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:21:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:22:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:22:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:23:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:23:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:24:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:24:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:25:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:25:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:26:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:26:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:27:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:27:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:28:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:28:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:29:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:29:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:30:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:30:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:31:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:31:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:32:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:32:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:33:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:33:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:34:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:34:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:35:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:35:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:36:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:36:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:37:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:37:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:38:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:38:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:39:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:39:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:40:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:40:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:41:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:41:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:42:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:42:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:43:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:43:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:44:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:44:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:45:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:45:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:46:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:46:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:47:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:47:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:48:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:48:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:49:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:49:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:50:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:50:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:51:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:51:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:52:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:52:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:53:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:53:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:54:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:54:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:55:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:55:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:56:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:56:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:57:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:57:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:58:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:58:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
[23:59:30] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.18.244:50469, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.18.244
[23:59:30] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.18.244
