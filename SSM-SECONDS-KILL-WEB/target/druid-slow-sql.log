[10:23:04] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[10:23:04] Main -  [DUBBO] Use container type([spring, jetty]) to run dubbo serivce., dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:05] Connection - {conn-10001} connected
[10:23:05] Connection - {conn-10001} connected
[10:23:05] Connection - {conn-10001} connected
[10:23:05] Connection - {conn-10002} connected
[10:23:05] Connection - {conn-10002} connected
[10:23:05] Connection - {conn-10002} connected
[10:23:05] Connection - {conn-10003} connected
[10:23:05] Connection - {conn-10003} connected
[10:23:05] Connection - {conn-10003} connected
[10:23:06] DruidDataSource - {dataSource-1} inited
[10:23:06] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:06] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:06] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:06] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:06] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:06] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:06] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:06] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.116.168&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634186835, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:06] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.116.168&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634186835 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=2888&registry=zookeeper&timestamp=1529634186831, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:06] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:06] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:06] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:06] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.116.168:20880, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] ZookeeperRegistry -  [DUBBO] Load registry store file /home/jie/.dubbo/dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=2609&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529633721038, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=2609&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529633719400}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[10:23:07] ZkEventThread - Starting ZkClient event thread.
[10:23:07] ZkClient - Awaiting connection to Zookeeper server
[10:23:07] ZkClient - Waiting for keeper state SyncConnected
[10:23:07] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[10:23:07] ZkClient - zookeeper state changed (SyncConnected)
[10:23:07] ZkClient - Leaving process event
[10:23:07] ZkClient - State is SyncConnected
[10:23:07] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634186835, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634186835, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634186835, urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634186835], dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634186835], dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634186835, override urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634186835], dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.116.168&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634187385, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.116.168&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634187385 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=2888&registry=zookeeper&timestamp=1529634187385, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634187385, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634187385, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634187385, urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634187385], dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634187385], dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634187385, override urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634187385], dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] Main -  [DUBBO] Dubbo SpringContainer started!, dubbo version: 2.0.1, current host: 192.168.116.168
[10:23:07] Main -  [DUBBO] Dubbo JettyContainer started!, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:06] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:06] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:06] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:06] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:06] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:06] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:06] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:06] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:06] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:06] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:06] Connection - {conn-10003} pool-connect
[10:24:06] Connection - {conn-10003} pool-connect
[10:24:06] Connection - {conn-10001} pool-connect
[10:24:06] Connection - {conn-10003} pool-connect
[10:24:06] Connection - {conn-10001} pool-connect
[10:24:06] Connection - {conn-10001} pool-connect
[10:24:06] Connection - {conn-10002} pool-connect
[10:24:06] Connection - {conn-10002} pool-connect
[10:24:06] Connection - {conn-10002} pool-connect
[10:24:06] Connection - {conn-10004} connected
[10:24:06] Connection - {conn-10004} connected
[10:24:06] Connection - {conn-10004} connected
[10:24:06] Connection - {conn-10004} pool-connect
[10:24:06] Connection - {conn-10004} pool-connect
[10:24:06] Connection - {conn-10004} pool-connect
[10:24:06] Connection - {conn-10005} connected
[10:24:06] Connection - {conn-10005} connected
[10:24:06] Connection - {conn-10005} connected
[10:24:06] Connection - {conn-10005} pool-connect
[10:24:06] Connection - {conn-10005} pool-connect
[10:24:06] Connection - {conn-10005} pool-connect
[10:24:06] Connection - {conn-10006} connected
[10:24:06] Connection - {conn-10006} connected
[10:24:06] Connection - {conn-10006} connected
[10:24:06] Connection - {conn-10006} pool-connect
[10:24:06] Connection - {conn-10006} pool-connect
[10:24:06] Connection - {conn-10006} pool-connect
[10:24:06] Connection - {conn-10007} connected
[10:24:06] Connection - {conn-10007} connected
[10:24:06] Connection - {conn-10007} connected
[10:24:06] Connection - {conn-10007} pool-connect
[10:24:06] Connection - {conn-10007} pool-connect
[10:24:06] Connection - {conn-10007} pool-connect
[10:24:06] Connection - {conn-10008} connected
[10:24:06] Connection - {conn-10008} connected
[10:24:06] Connection - {conn-10008} connected
[10:24:06] Connection - {conn-10008} pool-connect
[10:24:06] Connection - {conn-10008} pool-connect
[10:24:06] Connection - {conn-10008} pool-connect
[10:24:06] Connection - {conn-10009} connected
[10:24:06] Connection - {conn-10009} connected
[10:24:06] Connection - {conn-10009} connected
[10:24:06] Connection - {conn-10009} pool-connect
[10:24:06] Connection - {conn-10009} pool-connect
[10:24:06] Connection - {conn-10009} pool-connect
[10:24:07] Connection - {conn-10010} connected
[10:24:07] Connection - {conn-10010} connected
[10:24:07] Connection - {conn-10010} connected
[10:24:07] Connection - {conn-10010} pool-connect
[10:24:07] Connection - {conn-10010} pool-connect
[10:24:07] Connection - {conn-10010} pool-connect
[10:24:07] Statement - {conn-10002, pstmt-20000} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10002, pstmt-20000} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10002, pstmt-20000} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10002, pstmt-20000} Parameters : [1, 0]
[10:24:07] Statement - {conn-10002, pstmt-20000} Parameters : [1, 0]
[10:24:07] Statement - {conn-10002, pstmt-20000} Parameters : [1, 0]
[10:24:07] Statement - {conn-10002, pstmt-20000} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10002, pstmt-20000} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10002, pstmt-20000} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10003, pstmt-20001} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10003, pstmt-20001} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10003, pstmt-20001} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[10:24:07] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[10:24:07] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[10:24:07] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10001, pstmt-20002} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10001, pstmt-20002} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10001, pstmt-20002} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10001, pstmt-20002} Parameters : [1, 0]
[10:24:07] Statement - {conn-10001, pstmt-20002} Parameters : [1, 0]
[10:24:07] Statement - {conn-10001, pstmt-20002} Parameters : [1, 0]
[10:24:07] Statement - {conn-10001, pstmt-20002} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10001, pstmt-20002} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10001, pstmt-20002} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10009, pstmt-20003} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10009, pstmt-20003} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10002, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10002, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10009, pstmt-20003} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10008, pstmt-20004} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10008, pstmt-20004} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10008, pstmt-20004} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10009, pstmt-20003} Parameters : [1, 0]
[10:24:07] Statement - {conn-10009, pstmt-20003} Parameters : [1, 0]
[10:24:07] Statement - {conn-10009, pstmt-20003} Parameters : [1, 0]
[10:24:07] Statement - {conn-10009, pstmt-20003} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10009, pstmt-20003} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10009, pstmt-20003} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10008, pstmt-20004} Parameters : [1, 0]
[10:24:07] Statement - {conn-10008, pstmt-20004} Parameters : [1, 0]
[10:24:07] Statement - {conn-10008, pstmt-20004} Parameters : [1, 0]
[10:24:07] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10002, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10001, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10001, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10001, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10004, pstmt-20005} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10004, pstmt-20005} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10004, pstmt-20005} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10004, pstmt-20005} Parameters : [1, 0]
[10:24:07] Statement - {conn-10004, pstmt-20005} Parameters : [1, 0]
[10:24:07] Statement - {conn-10004, pstmt-20005} Parameters : [1, 0]
[10:24:07] Statement - {conn-10004, pstmt-20005} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10004, pstmt-20005} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10004, pstmt-20005} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10002, pstmt-20000} executed. 34.67606 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10002, pstmt-20000} executed. 34.67606 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10002, pstmt-20000} executed. 34.67606 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10003, pstmt-20001} executed. 7.78813 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10003, pstmt-20001} executed. 7.78813 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10003, pstmt-20001} executed. 7.78813 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10002, pstmt-20000} clearParameters. 
[10:24:07] Statement - {conn-10002, pstmt-20000} clearParameters. 
[10:24:07] Statement - {conn-10002, pstmt-20000} clearParameters. 
[10:24:07] PreparedStatementPool - {conn-10002, pstmt-20000} enter cache
[10:24:07] Connection - {conn-10002} pool-recycle
[10:24:07] Connection - {conn-10002} pool-recycle
[10:24:07] Connection - {conn-10002} pool-recycle
[10:24:07] Statement - {conn-10001, pstmt-20002} executed. 95.323989 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10001, pstmt-20002} executed. 95.323989 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10001, pstmt-20002} executed. 95.323989 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10001, pstmt-20002} clearParameters. 
[10:24:07] Statement - {conn-10001, pstmt-20002} clearParameters. 
[10:24:07] Statement - {conn-10001, pstmt-20002} clearParameters. 
[10:24:07] Statement - {conn-10009, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10009, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10009, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10009, pstmt-20003} executed. 96.424267 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10009, pstmt-20003} executed. 96.424267 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10009, pstmt-20003} executed. 96.424267 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10009, pstmt-20003} clearParameters. 
[10:24:07] Statement - {conn-10009, pstmt-20003} clearParameters. 
[10:24:07] Statement - {conn-10009, pstmt-20003} clearParameters. 
[10:24:07] Statement - {conn-10010, pstmt-20009} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10010, pstmt-20009} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10010, pstmt-20009} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:07] PreparedStatementPool - {conn-10009, pstmt-20003} enter cache
[10:24:07] PreparedStatementPool - {conn-10001, pstmt-20002} enter cache
[10:24:07] Connection - {conn-10009} pool-recycle
[10:24:07] Connection - {conn-10009} pool-recycle
[10:24:07] Connection - {conn-10009} pool-recycle
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] Statement - {conn-10010, pstmt-20009} Parameters : [1, 0]
[10:24:07] Statement - {conn-10010, pstmt-20009} Parameters : [1, 0]
[10:24:07] Connection - {conn-10001} pool-recycle
[10:24:07] Connection - {conn-10001} pool-recycle
[10:24:07] Connection - {conn-10001} pool-recycle
[10:24:07] Statement - {conn-10007, pstmt-20008} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10007, pstmt-20008} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10007, pstmt-20008} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] Statement - {conn-10007, pstmt-20008} Parameters : [1, 0]
[10:24:07] Statement - {conn-10007, pstmt-20008} Parameters : [1, 0]
[10:24:07] Statement - {conn-10007, pstmt-20008} Parameters : [1, 0]
[10:24:07] Statement - {conn-10006, pstmt-20007} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10006, pstmt-20007} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10006, pstmt-20007} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10006, pstmt-20007} Parameters : [1, 0]
[10:24:07] Statement - {conn-10006, pstmt-20007} Parameters : [1, 0]
[10:24:07] Statement - {conn-10006, pstmt-20007} Parameters : [1, 0]
[10:24:07] Statement - {conn-10006, pstmt-20007} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10006, pstmt-20007} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10006, pstmt-20007} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10010, pstmt-20009} Parameters : [1, 0]
[10:24:07] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10005, pstmt-20006} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10005, pstmt-20006} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10005, pstmt-20006} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10005, pstmt-20006} Parameters : [1, 0]
[10:24:07] Statement - {conn-10005, pstmt-20006} Parameters : [1, 0]
[10:24:07] Statement - {conn-10005, pstmt-20006} Parameters : [1, 0]
[10:24:07] Statement - {conn-10005, pstmt-20006} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10005, pstmt-20006} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10005, pstmt-20006} Types : [INTEGER, INTEGER]
[10:24:07] Connection - {conn-10001} pool-connect
[10:24:07] Connection - {conn-10001} pool-connect
[10:24:07] Connection - {conn-10001} pool-connect
[10:24:07] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 172.338432 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 172.338432 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 172.338432 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:24:07] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:24:07] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:24:07] PreparedStatementPool - {conn-10008, pstmt-20004} enter cache
[10:24:07] Statement - {conn-10003, pstmt-20001} clearParameters. 
[10:24:07] Statement - {conn-10003, pstmt-20001} clearParameters. 
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] Statement - {conn-10003, pstmt-20001} clearParameters. 
[10:24:07] PreparedStatementPool - {conn-10003, pstmt-20001} enter cache
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] Connection - {conn-10003} pool-recycle
[10:24:07] Connection - {conn-10003} pool-recycle
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:07] Connection - {conn-10003} pool-recycle
[10:24:07] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:07] Connection - {conn-10003} pool-connect
[10:24:07] Connection - {conn-10003} pool-connect
[10:24:07] Connection - {conn-10003} pool-connect
[10:24:07] Statement - {conn-10003, pstmt-20010} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Statement - {conn-10003, pstmt-20010} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Statement - {conn-10003, pstmt-20010} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Statement - {conn-10003, pstmt-20010} Parameters : [null, 1, 手机, 2018-06-22 10:24:07.495]
[10:24:07] Statement - {conn-10003, pstmt-20010} Parameters : [null, 1, 手机, 2018-06-22 10:24:07.495]
[10:24:07] Statement - {conn-10003, pstmt-20010} Parameters : [null, 1, 手机, 2018-06-22 10:24:07.495]
[10:24:07] Statement - {conn-10003, pstmt-20010} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:24:07] Statement - {conn-10003, pstmt-20010} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:24:07] Statement - {conn-10003, pstmt-20010} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:24:07] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:07] Statement - {conn-10004, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10004, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10004, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10004, pstmt-20005} executed. 155.182124 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10004, pstmt-20005} executed. 155.182124 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10004, pstmt-20005} executed. 155.182124 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10004, pstmt-20005} clearParameters. 
[10:24:07] Statement - {conn-10004, pstmt-20005} clearParameters. 
[10:24:07] Statement - {conn-10004, pstmt-20005} clearParameters. 
[10:24:07] PreparedStatementPool - {conn-10004, pstmt-20005} enter cache
[10:24:07] Connection - {conn-10004} pool-recycle
[10:24:07] Connection - {conn-10004} pool-recycle
[10:24:07] Connection - {conn-10004} pool-recycle
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] Connection - {conn-10004} pool-connect
[10:24:07] Connection - {conn-10004} pool-connect
[10:24:07] Connection - {conn-10004} pool-connect
[10:24:07] Statement - {conn-10004, pstmt-20005} Parameters : [1, 1]
[10:24:07] Statement - {conn-10004, pstmt-20005} Parameters : [1, 1]
[10:24:07] Statement - {conn-10004, pstmt-20005} Parameters : [1, 1]
[10:24:07] Statement - {conn-10004, pstmt-20005} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10004, pstmt-20005} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10004, pstmt-20005} Types : [INTEGER, INTEGER]
[10:24:07] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:07] Connection - {conn-10008} pool-connect
[10:24:07] Connection - {conn-10008} pool-connect
[10:24:07] Connection - {conn-10008} pool-connect
[10:24:07] Statement - {conn-10008, pstmt-20004} Parameters : [1, 1]
[10:24:07] Statement - {conn-10008, pstmt-20004} Parameters : [1, 1]
[10:24:07] Statement - {conn-10008, pstmt-20004} Parameters : [1, 1]
[10:24:07] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 0.909448 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 0.909448 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 0.909448 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:24:07] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:24:07] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] Statement - {conn-10001, pstmt-20002} Parameters : [1, 0]
[10:24:07] Statement - {conn-10001, pstmt-20002} Parameters : [1, 0]
[10:24:07] Statement - {conn-10001, pstmt-20002} Parameters : [1, 0]
[10:24:07] Statement - {conn-10001, pstmt-20002} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10001, pstmt-20002} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10001, pstmt-20002} Types : [INTEGER, INTEGER]
[10:24:07] Connection - {conn-10008} pool-connect
[10:24:07] Connection - {conn-10008} pool-connect
[10:24:07] Connection - {conn-10008} pool-connect
[10:24:07] Statement - {conn-10008, pstmt-20004} Parameters : [1, 1]
[10:24:07] Statement - {conn-10008, pstmt-20004} Parameters : [1, 1]
[10:24:07] Statement - {conn-10008, pstmt-20004} Parameters : [1, 1]
[10:24:07] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10001, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10001, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10001, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10001, pstmt-20002} executed. 1.044493 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10001, pstmt-20002} executed. 1.044493 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10001, pstmt-20002} executed. 1.044493 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:24:07] Statement - {conn-10001, pstmt-20002} clearParameters. 
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 0.751025 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10001, pstmt-20002} clearParameters. 
[10:24:07] Statement - {conn-10001, pstmt-20002} clearParameters. 
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 0.751025 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 0.751025 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Connection - {conn-10001} pool-recycle
[10:24:07] Connection - {conn-10001} pool-recycle
[10:24:07] Connection - {conn-10001} pool-recycle
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:24:07] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:24:07] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:24:07] Statement - {conn-10003, pstmt-20010} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:24:07.495')
[10:24:07] Statement - {conn-10003, pstmt-20010} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:24:07.495')
[10:24:07] Statement - {conn-10003, pstmt-20010} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:24:07.495')
[10:24:07] Statement - {conn-10003, pstmt-20010} executed. 90.48945 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Statement - {conn-10003, pstmt-20010} executed. 90.48945 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Statement - {conn-10003, pstmt-20010} executed. 90.48945 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:07] Statement - {conn-10004, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:24:07] Statement - {conn-10004, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:24:07] Statement - {conn-10004, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:24:07] Statement - {conn-10004, pstmt-20005} executed. 61.893216 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10004, pstmt-20005} executed. 61.893216 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10004, pstmt-20005} executed. 61.893216 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10004, pstmt-20005} clearParameters. 
[10:24:07] Statement - {conn-10004, pstmt-20005} clearParameters. 
[10:24:07] Statement - {conn-10004, pstmt-20005} clearParameters. 
[10:24:07] Connection - {conn-10004} pool-recycle
[10:24:07] Connection - {conn-10004} pool-recycle
[10:24:07] Connection - {conn-10004} pool-recycle
[10:24:07] ResultSet - {conn-10003, pstmt-20010, rs-50000} open
[10:24:07] ResultSet - {conn-10003, pstmt-20010, rs-50000} open
[10:24:07] Connection - {conn-10004} pool-connect
[10:24:07] Connection - {conn-10004} pool-connect
[10:24:07] Connection - {conn-10004} pool-connect
[10:24:07] Connection - {conn-10008} pool-connect
[10:24:07] Connection - {conn-10008} pool-connect
[10:24:07] Connection - {conn-10008} pool-connect
[10:24:07] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10010, pstmt-20009} executed. 220.142991 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10010, pstmt-20009} executed. 220.142991 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10010, pstmt-20009} executed. 220.142991 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10008, pstmt-20011} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Statement - {conn-10008, pstmt-20011} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] StatFilter - slow sql 220 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[1,0]
[10:24:07] Statement - {conn-10004, pstmt-20005} Parameters : [1, 1]
[10:24:07] Statement - {conn-10004, pstmt-20005} Parameters : [1, 1]
[10:24:07] ResultSet - {conn-10003, pstmt-20010, rs-50000} Header: [GENERATED_KEY]
[10:24:07] Statement - {conn-10010, pstmt-20009} clearParameters. 
[10:24:07] Statement - {conn-10010, pstmt-20009} clearParameters. 
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10010, pstmt-20009} clearParameters. 
[10:24:07] PreparedStatementPool - {conn-10010, pstmt-20009} enter cache
[10:24:07] Connection - {conn-10010} pool-recycle
[10:24:07] Connection - {conn-10010} pool-recycle
[10:24:07] Statement - {conn-10006, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10006, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] ResultSet - {conn-10003, pstmt-20010, rs-50000} Header: [GENERATED_KEY]
[10:24:07] Statement - {conn-10004, pstmt-20005} Parameters : [1, 1]
[10:24:07] Statement - {conn-10004, pstmt-20005} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10004, pstmt-20005} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10004, pstmt-20005} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10008, pstmt-20011} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Statement - {conn-10008, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 10:24:07.635]
[10:24:07] Statement - {conn-10008, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 10:24:07.635]
[10:24:07] Statement - {conn-10008, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 10:24:07.635]
[10:24:07] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:24:07] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:24:07] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:24:07] Statement - {conn-10006, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10006, pstmt-20007} executed. 178.63369 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10006, pstmt-20007} executed. 178.63369 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10006, pstmt-20007} executed. 178.63369 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10006, pstmt-20007} clearParameters. 
[10:24:07] Statement - {conn-10006, pstmt-20007} clearParameters. 
[10:24:07] Statement - {conn-10006, pstmt-20007} clearParameters. 
[10:24:07] PreparedStatementPool - {conn-10006, pstmt-20007} enter cache
[10:24:07] Connection - {conn-10006} pool-recycle
[10:24:07] Connection - {conn-10006} pool-recycle
[10:24:07] Connection - {conn-10006} pool-recycle
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] Connection - {conn-10010} pool-recycle
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] ResultSet - {conn-10003, pstmt-20010, rs-50000} Result: [34]
[10:24:07] ResultSet - {conn-10003, pstmt-20010, rs-50000} Result: [34]
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] ResultSet - {conn-10003, pstmt-20010, rs-50000} closed
[10:24:07] ResultSet - {conn-10003, pstmt-20010, rs-50000} closed
[10:24:07] Connection - {conn-10006} pool-connect
[10:24:07] Connection - {conn-10006} pool-connect
[10:24:07] Connection - {conn-10006} pool-connect
[10:24:07] Connection - {conn-10010} pool-connect
[10:24:07] Connection - {conn-10010} pool-connect
[10:24:07] Connection - {conn-10010} pool-connect
[10:24:07] Connection - {conn-10001} pool-connect
[10:24:07] Connection - {conn-10001} pool-connect
[10:24:07] Connection - {conn-10001} pool-connect
[10:24:07] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:07] Statement - {conn-10004, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:24:07] Statement - {conn-10004, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:24:07] Statement - {conn-10004, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:24:07] Statement - {conn-10004, pstmt-20005} executed. 32.947552 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10004, pstmt-20005} executed. 32.947552 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10004, pstmt-20005} executed. 32.947552 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10004, pstmt-20005} clearParameters. 
[10:24:07] Statement - {conn-10004, pstmt-20005} clearParameters. 
[10:24:07] Statement - {conn-10004, pstmt-20005} clearParameters. 
[10:24:07] Connection - {conn-10004} pool-recycle
[10:24:07] Connection - {conn-10004} pool-recycle
[10:24:07] Connection - {conn-10004} pool-recycle
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:07] Statement - {conn-10001, pstmt-20002} Parameters : [1, 2]
[10:24:07] Statement - {conn-10001, pstmt-20002} Parameters : [1, 2]
[10:24:07] Statement - {conn-10001, pstmt-20002} Parameters : [1, 2]
[10:24:07] Statement - {conn-10010, pstmt-20009} Parameters : [1, 2]
[10:24:07] Statement - {conn-10010, pstmt-20009} Parameters : [1, 2]
[10:24:07] Statement - {conn-10010, pstmt-20009} Parameters : [1, 2]
[10:24:07] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10005, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10005, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10005, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:24:07] Statement - {conn-10005, pstmt-20006} executed. 189.21023 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10005, pstmt-20006} executed. 189.21023 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10005, pstmt-20006} executed. 189.21023 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10005, pstmt-20006} clearParameters. 
[10:24:07] Statement - {conn-10005, pstmt-20006} clearParameters. 
[10:24:07] Statement - {conn-10005, pstmt-20006} clearParameters. 
[10:24:07] PreparedStatementPool - {conn-10005, pstmt-20006} enter cache
[10:24:07] Connection - {conn-10005} pool-recycle
[10:24:07] Connection - {conn-10005} pool-recycle
[10:24:07] Connection - {conn-10005} pool-recycle
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] Statement - {conn-10006, pstmt-20007} Parameters : [1, 2]
[10:24:07] Statement - {conn-10006, pstmt-20007} Parameters : [1, 2]
[10:24:07] Statement - {conn-10006, pstmt-20007} Parameters : [1, 2]
[10:24:07] Statement - {conn-10006, pstmt-20007} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10006, pstmt-20007} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10006, pstmt-20007} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10003, pstmt-20010} clearParameters. 
[10:24:07] Statement - {conn-10003, pstmt-20010} clearParameters. 
[10:24:07] Statement - {conn-10003, pstmt-20010} clearParameters. 
[10:24:07] PreparedStatementPool - {conn-10003, pstmt-20010} enter cache
[10:24:07] Connection - {conn-10003} pool-recycle
[10:24:07] Connection - {conn-10003} pool-recycle
[10:24:07] Connection - {conn-10003} pool-recycle
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 181.35415 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 181.35415 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 181.35415 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] StatFilter - slow sql 202 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[1,0]
[10:24:07] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:24:07] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:24:07] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:24:07] PreparedStatementPool - {conn-10007, pstmt-20008} enter cache
[10:24:07] Connection - {conn-10007} pool-recycle
[10:24:07] Connection - {conn-10007} pool-recycle
[10:24:07] Connection - {conn-10007} pool-recycle
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] Connection - {conn-10007} pool-connect
[10:24:07] Connection - {conn-10007} pool-connect
[10:24:07] Connection - {conn-10007} pool-connect
[10:24:07] Connection - {conn-10003} pool-connect
[10:24:07] Connection - {conn-10003} pool-connect
[10:24:07] Connection - {conn-10003} pool-connect
[10:24:07] Statement - {conn-10001, pstmt-20002} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10001, pstmt-20002} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10001, pstmt-20002} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10003, pstmt-20001} Parameters : [1, 2]
[10:24:07] Statement - {conn-10003, pstmt-20001} Parameters : [1, 2]
[10:24:07] Statement - {conn-10003, pstmt-20001} Parameters : [1, 2]
[10:24:07] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10007, pstmt-20008} Parameters : [1, 2]
[10:24:07] Statement - {conn-10007, pstmt-20008} Parameters : [1, 2]
[10:24:07] Statement - {conn-10007, pstmt-20008} Parameters : [1, 2]
[10:24:07] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10006, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:24:07] Statement - {conn-10006, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:24:07] Statement - {conn-10006, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:24:07] Statement - {conn-10006, pstmt-20007} executed. 74.268024 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10006, pstmt-20007} executed. 74.268024 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10006, pstmt-20007} executed. 74.268024 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10006, pstmt-20007} clearParameters. 
[10:24:07] Statement - {conn-10006, pstmt-20007} clearParameters. 
[10:24:07] Statement - {conn-10006, pstmt-20007} clearParameters. 
[10:24:07] Connection - {conn-10006} pool-recycle
[10:24:07] Connection - {conn-10006} pool-recycle
[10:24:07] Connection - {conn-10006} pool-recycle
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] Statement - {conn-10001, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:24:07] Statement - {conn-10001, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:24:07] Statement - {conn-10001, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:24:07] Statement - {conn-10001, pstmt-20002} executed. 85.323362 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10001, pstmt-20002} executed. 85.323362 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10001, pstmt-20002} executed. 85.323362 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10001, pstmt-20002} clearParameters. 
[10:24:07] Statement - {conn-10001, pstmt-20002} clearParameters. 
[10:24:07] Statement - {conn-10001, pstmt-20002} clearParameters. 
[10:24:07] Connection - {conn-10001} pool-recycle
[10:24:07] Connection - {conn-10001} pool-recycle
[10:24:07] Connection - {conn-10001} pool-recycle
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:24:07] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:24:07] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:24:07] Statement - {conn-10003, pstmt-20001} executed. 16.186736 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10003, pstmt-20001} executed. 16.186736 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10003, pstmt-20001} executed. 16.186736 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10003, pstmt-20001} clearParameters. 
[10:24:07] Statement - {conn-10003, pstmt-20001} clearParameters. 
[10:24:07] Statement - {conn-10003, pstmt-20001} clearParameters. 
[10:24:07] Connection - {conn-10003} pool-recycle
[10:24:07] Connection - {conn-10003} pool-recycle
[10:24:07] Connection - {conn-10003} pool-recycle
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:24:07] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:24:07] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:24:07] Statement - {conn-10010, pstmt-20009} executed. 101.642242 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10010, pstmt-20009} executed. 101.642242 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10010, pstmt-20009} executed. 101.642242 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10010, pstmt-20009} clearParameters. 
[10:24:07] Statement - {conn-10010, pstmt-20009} clearParameters. 
[10:24:07] Statement - {conn-10010, pstmt-20009} clearParameters. 
[10:24:07] Connection - {conn-10010} pool-recycle
[10:24:07] Connection - {conn-10010} pool-recycle
[10:24:07] Statement - {conn-10008, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:24:07.635')
[10:24:07] Statement - {conn-10008, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:24:07.635')
[10:24:07] Connection - {conn-10010} pool-recycle
[10:24:07] Statement - {conn-10008, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:24:07.635')
[10:24:07] Statement - {conn-10008, pstmt-20011} executed. 109.166192 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Statement - {conn-10008, pstmt-20011} executed. 109.166192 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Statement - {conn-10008, pstmt-20011} executed. 109.166192 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50001} open
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50001} open
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50001} Header: [GENERATED_KEY]
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50001} Header: [GENERATED_KEY]
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50001} Result: [35]
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50001} Result: [35]
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50001} closed
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50001} closed
[10:24:07] Statement - {conn-10008, pstmt-20011} clearParameters. 
[10:24:07] Statement - {conn-10008, pstmt-20011} clearParameters. 
[10:24:07] Statement - {conn-10008, pstmt-20011} clearParameters. 
[10:24:07] PreparedStatementPool - {conn-10008, pstmt-20011} enter cache
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] Connection - {conn-10008} pool-connect
[10:24:07] Connection - {conn-10008} pool-connect
[10:24:07] Connection - {conn-10008} pool-connect
[10:24:07] Statement - {conn-10008, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 10:24:07.771]
[10:24:07] Statement - {conn-10008, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 10:24:07.771]
[10:24:07] Statement - {conn-10008, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 10:24:07.771]
[10:24:07] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:24:07] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:24:07] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 48.646619 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 48.646619 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 48.646619 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:24:07] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:24:07] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:24:07] Connection - {conn-10007} pool-recycle
[10:24:07] Connection - {conn-10007} pool-recycle
[10:24:07] Connection - {conn-10007} pool-recycle
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] Statement - {conn-10008, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:24:07.771')
[10:24:07] Statement - {conn-10008, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:24:07.771')
[10:24:07] Statement - {conn-10008, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:24:07.771')
[10:24:07] Statement - {conn-10008, pstmt-20011} executed. 22.349987 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Statement - {conn-10008, pstmt-20011} executed. 22.349987 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Statement - {conn-10008, pstmt-20011} executed. 22.349987 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50002} open
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50002} open
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50002} Header: [GENERATED_KEY]
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50002} Header: [GENERATED_KEY]
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50002} Result: [36]
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50002} Result: [36]
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50002} closed
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50002} closed
[10:24:07] Statement - {conn-10008, pstmt-20011} clearParameters. 
[10:24:07] Statement - {conn-10008, pstmt-20011} clearParameters. 
[10:24:07] Statement - {conn-10008, pstmt-20011} clearParameters. 
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:07] Connection - {conn-10008} pool-connect
[10:24:07] Connection - {conn-10008} pool-connect
[10:24:07] Connection - {conn-10008} pool-connect
[10:24:07] Statement - {conn-10008, pstmt-20004} Parameters : [1, 3]
[10:24:07] Statement - {conn-10008, pstmt-20004} Parameters : [1, 3]
[10:24:07] Statement - {conn-10008, pstmt-20004} Parameters : [1, 3]
[10:24:07] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 18.589598 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 18.589598 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10008, pstmt-20004} executed. 18.589598 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:24:07] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:24:07] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] Connection - {conn-10008} pool-connect
[10:24:07] Connection - {conn-10008} pool-connect
[10:24:07] Connection - {conn-10008} pool-connect
[10:24:07] Statement - {conn-10008, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 10:24:07.85]
[10:24:07] Statement - {conn-10008, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 10:24:07.85]
[10:24:07] Statement - {conn-10008, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 10:24:07.85]
[10:24:07] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:24:07] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:24:07] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:24:07] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:07] Connection - {conn-10007} pool-connect
[10:24:07] Connection - {conn-10007} pool-connect
[10:24:07] Connection - {conn-10007} pool-connect
[10:24:07] Statement - {conn-10007, pstmt-20008} Parameters : [1, 4]
[10:24:07] Statement - {conn-10007, pstmt-20008} Parameters : [1, 4]
[10:24:07] Statement - {conn-10007, pstmt-20008} Parameters : [1, 4]
[10:24:07] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:24:07] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:07] Connection - {conn-10010} pool-connect
[10:24:07] Connection - {conn-10010} pool-connect
[10:24:07] Connection - {conn-10010} pool-connect
[10:24:07] Statement - {conn-10010, pstmt-20009} Parameters : [1, 4]
[10:24:07] Statement - {conn-10010, pstmt-20009} Parameters : [1, 4]
[10:24:07] Statement - {conn-10010, pstmt-20009} Parameters : [1, 4]
[10:24:07] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:24:07] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:24:07] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:24:07] Statement - {conn-10010, pstmt-20009} executed. 1.735742 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10010, pstmt-20009} executed. 1.735742 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10010, pstmt-20009} executed. 1.735742 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10010, pstmt-20009} clearParameters. 
[10:24:07] Statement - {conn-10010, pstmt-20009} clearParameters. 
[10:24:07] Statement - {conn-10010, pstmt-20009} clearParameters. 
[10:24:07] Connection - {conn-10010} pool-recycle
[10:24:07] Connection - {conn-10010} pool-recycle
[10:24:07] Connection - {conn-10010} pool-recycle
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] Statement - {conn-10008, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:24:07.850')
[10:24:07] Statement - {conn-10008, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:24:07.850')
[10:24:07] Statement - {conn-10008, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:24:07.850')
[10:24:07] Statement - {conn-10008, pstmt-20011} executed. 38.012642 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Statement - {conn-10008, pstmt-20011} executed. 38.012642 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Statement - {conn-10008, pstmt-20011} executed. 38.012642 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50003} open
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50003} open
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50003} Header: [GENERATED_KEY]
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50003} Header: [GENERATED_KEY]
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50003} Result: [37]
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50003} Result: [37]
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50003} closed
[10:24:07] ResultSet - {conn-10008, pstmt-20011, rs-50003} closed
[10:24:07] Statement - {conn-10008, pstmt-20011} clearParameters. 
[10:24:07] Statement - {conn-10008, pstmt-20011} clearParameters. 
[10:24:07] Statement - {conn-10008, pstmt-20011} clearParameters. 
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] Connection - {conn-10008} pool-recycle
[10:24:07] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 32.317254 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 32.317254 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 32.317254 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:24:07] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:24:07] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:24:07] Connection - {conn-10007} pool-recycle
[10:24:07] Connection - {conn-10007} pool-recycle
[10:24:07] Connection - {conn-10007} pool-recycle
[10:24:07] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:24:07] Connection - {conn-10007} pool-connect
[10:24:07] Connection - {conn-10007} pool-connect
[10:24:07] Connection - {conn-10007} pool-connect
[10:24:07] Statement - {conn-10007, pstmt-20008} Parameters : [1, 4]
[10:24:07] Statement - {conn-10007, pstmt-20008} Parameters : [1, 4]
[10:24:07] Statement - {conn-10007, pstmt-20008} Parameters : [1, 4]
[10:24:07] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 0.783329 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 0.783329 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 0.783329 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:24:07] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:24:07] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:24:07] Connection - {conn-10007} pool-recycle
[10:24:07] Connection - {conn-10007} pool-recycle
[10:24:07] Connection - {conn-10007} pool-recycle
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] Connection - {conn-10007} pool-connect
[10:24:07] Connection - {conn-10007} pool-connect
[10:24:07] Connection - {conn-10007} pool-connect
[10:24:07] Statement - {conn-10007, pstmt-20008} Parameters : [1, 4]
[10:24:07] Statement - {conn-10007, pstmt-20008} Parameters : [1, 4]
[10:24:07] Statement - {conn-10007, pstmt-20008} Parameters : [1, 4]
[10:24:07] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 0.888567 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 0.888567 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10007, pstmt-20008} executed. 0.888567 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:24:07] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:24:07] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:24:07] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:24:07] Connection - {conn-10007} pool-recycle
[10:24:07] Connection - {conn-10007} pool-recycle
[10:24:07] Connection - {conn-10007} pool-recycle
[10:24:07] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:24:07] Connection - {conn-10007} pool-connect
[10:24:07] Connection - {conn-10007} pool-connect
[10:24:07] Connection - {conn-10007} pool-connect
[10:24:07] Statement - {conn-10007, pstmt-20012} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Statement - {conn-10007, pstmt-20012} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Statement - {conn-10007, pstmt-20012} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Statement - {conn-10007, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 10:24:07.963]
[10:24:07] Statement - {conn-10007, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 10:24:07.963]
[10:24:07] Statement - {conn-10007, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 10:24:07.963]
[10:24:07] Statement - {conn-10007, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:24:07] Statement - {conn-10007, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:24:07] Statement - {conn-10007, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:24:07] Statement - {conn-10007, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:24:07.963')
[10:24:07] Statement - {conn-10007, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:24:07.963')
[10:24:07] Statement - {conn-10007, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:24:07.963')
[10:24:07] Statement - {conn-10007, pstmt-20012} executed. 6.793788 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Statement - {conn-10007, pstmt-20012} executed. 6.793788 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] Statement - {conn-10007, pstmt-20012} executed. 6.793788 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:24:07] ResultSet - {conn-10007, pstmt-20012, rs-50004} open
[10:24:07] ResultSet - {conn-10007, pstmt-20012, rs-50004} open
[10:24:07] ResultSet - {conn-10007, pstmt-20012, rs-50004} Header: [GENERATED_KEY]
[10:24:07] ResultSet - {conn-10007, pstmt-20012, rs-50004} Header: [GENERATED_KEY]
[10:24:07] ResultSet - {conn-10007, pstmt-20012, rs-50004} Result: [38]
[10:24:07] ResultSet - {conn-10007, pstmt-20012, rs-50004} Result: [38]
[10:24:07] ResultSet - {conn-10007, pstmt-20012, rs-50004} closed
[10:24:07] ResultSet - {conn-10007, pstmt-20012, rs-50004} closed
[10:24:07] Statement - {conn-10007, pstmt-20012} clearParameters. 
[10:24:07] Statement - {conn-10007, pstmt-20012} clearParameters. 
[10:24:07] Statement - {conn-10007, pstmt-20012} clearParameters. 
[10:24:07] PreparedStatementPool - {conn-10007, pstmt-20012} enter cache
[10:24:07] Connection - {conn-10007} pool-recycle
[10:24:07] Connection - {conn-10007} pool-recycle
[10:24:07] Connection - {conn-10007} pool-recycle
[10:25:27] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:26:27] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:27:27] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:28:27] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:30:06] Connection - {conn-10002} closed
[10:30:06] Connection - {conn-10002} closed
[10:30:06] Connection - {conn-10002} closed
[10:30:06] Connection - {conn-10009} closed
[10:30:06] Connection - {conn-10009} closed
[10:30:06] Connection - {conn-10009} closed
[10:30:06] Connection - {conn-10004} closed
[10:30:06] Connection - {conn-10004} closed
[10:30:06] Connection - {conn-10004} closed
[10:30:06] Connection - {conn-10005} closed
[10:30:06] Connection - {conn-10005} closed
[10:30:06] Connection - {conn-10005} closed
[10:30:06] Connection - {conn-10006} closed
[10:30:06] Connection - {conn-10006} closed
[10:30:06] Connection - {conn-10006} closed
[10:30:06] Connection - {conn-10001} closed
[10:30:06] Connection - {conn-10001} closed
[10:30:06] Connection - {conn-10001} closed
[10:30:06] Connection - {conn-10003} closed
[10:30:06] Connection - {conn-10003} closed
[10:30:06] Connection - {conn-10003} closed
[10:30:07] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:30:07] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:31:07] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:31:07] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:32:07] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:32:07] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:33:07] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:33:07] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:34:07] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:34:07] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:34:30] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:34:30] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:34:30] Connection - {conn-10007} pool-connect
[10:34:30] Connection - {conn-10007} pool-connect
[10:34:30] Connection - {conn-10007} pool-connect
[10:34:30] Statement - {conn-10007, pstmt-20008} Parameters : [1, 0]
[10:34:30] Statement - {conn-10007, pstmt-20008} Parameters : [1, 0]
[10:34:30] Statement - {conn-10007, pstmt-20008} Parameters : [1, 0]
[10:34:30] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:34:30] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:34:30] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:34:30] Connection - {conn-10008} pool-connect
[10:34:30] Connection - {conn-10008} pool-connect
[10:34:30] Connection - {conn-10008} pool-connect
[10:34:30] Statement - {conn-10008, pstmt-20004} Parameters : [1, 0]
[10:34:30] Statement - {conn-10008, pstmt-20004} Parameters : [1, 0]
[10:34:30] Statement - {conn-10008, pstmt-20004} Parameters : [1, 0]
[10:34:30] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:34:30] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:34:30] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:34:30] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 1.10339 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 1.10339 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 1.10339 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:30] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:34:30] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:34:30] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:34:30] Connection - {conn-10008} pool-recycle
[10:34:30] Connection - {conn-10008} pool-recycle
[10:34:30] Connection - {conn-10008} pool-recycle
[10:34:30] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:34:30] Connection - {conn-10008} pool-connect
[10:34:30] Connection - {conn-10008} pool-connect
[10:34:30] Connection - {conn-10008} pool-connect
[10:34:30] Statement - {conn-10008, pstmt-20004} Parameters : [1, 0]
[10:34:30] Statement - {conn-10008, pstmt-20004} Parameters : [1, 0]
[10:34:30] Statement - {conn-10008, pstmt-20004} Parameters : [1, 0]
[10:34:30] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:34:30] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:34:30] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 2.342108 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 2.342108 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 2.342108 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:30] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:34:30] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:34:30] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:34:30] Connection - {conn-10008} pool-recycle
[10:34:30] Connection - {conn-10008} pool-recycle
[10:34:30] Connection - {conn-10008} pool-recycle
[10:34:30] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:34:30] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:34:30] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:34:30] Connection - {conn-10008} pool-connect
[10:34:30] Connection - {conn-10008} pool-connect
[10:34:30] Connection - {conn-10008} pool-connect
[10:34:30] Statement - {conn-10008, pstmt-20004} Parameters : [1, 0]
[10:34:30] Statement - {conn-10008, pstmt-20004} Parameters : [1, 0]
[10:34:30] Statement - {conn-10008, pstmt-20004} Parameters : [1, 0]
[10:34:30] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:34:30] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:34:30] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 1.336682 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 1.336682 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 1.336682 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:30] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:34:30] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:34:30] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:34:30] Connection - {conn-10008} pool-recycle
[10:34:30] Connection - {conn-10008} pool-recycle
[10:34:30] Connection - {conn-10008} pool-recycle
[10:34:30] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:34:30] Connection - {conn-10008} pool-connect
[10:34:30] Connection - {conn-10008} pool-connect
[10:34:30] Connection - {conn-10008} pool-connect
[10:34:30] Statement - {conn-10008, pstmt-20004} Parameters : [1, 0]
[10:34:30] Statement - {conn-10008, pstmt-20004} Parameters : [1, 0]
[10:34:30] Statement - {conn-10008, pstmt-20004} Parameters : [1, 0]
[10:34:30] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:34:30] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:34:30] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 2.837727 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 2.837727 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:30] Statement - {conn-10008, pstmt-20004} executed. 2.837727 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:30] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:34:30] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:34:30] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:34:30] Connection - {conn-10008} pool-recycle
[10:34:30] Connection - {conn-10008} pool-recycle
[10:34:30] Connection - {conn-10008} pool-recycle
[10:34:30] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:34:30] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:34:30] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:34:30] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:34:30] Statement - {conn-10007, pstmt-20008} executed. 172.816176 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:30] Statement - {conn-10007, pstmt-20008} executed. 172.816176 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:30] Statement - {conn-10007, pstmt-20008} executed. 172.816176 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:30] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:34:30] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:34:30] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:34:30] Connection - {conn-10007} pool-recycle
[10:34:30] Connection - {conn-10007} pool-recycle
[10:34:30] Connection - {conn-10007} pool-recycle
[10:34:30] Connection - {conn-10007} pool-connect
[10:34:30] Connection - {conn-10007} pool-connect
[10:34:30] Connection - {conn-10007} pool-connect
[10:34:30] Statement - {conn-10007, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 10:34:30.796]
[10:34:30] Statement - {conn-10007, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 10:34:30.796]
[10:34:30] Statement - {conn-10007, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 10:34:30.796]
[10:34:30] Statement - {conn-10007, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:34:30] Statement - {conn-10007, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:34:30] Statement - {conn-10007, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:34:30] Statement - {conn-10007, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:34:30.796')
[10:34:30] Statement - {conn-10007, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:34:30.796')
[10:34:30] Statement - {conn-10007, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:34:30.796')
[10:34:30] Statement - {conn-10007, pstmt-20012} executed. 79.626533 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:34:30] Statement - {conn-10007, pstmt-20012} executed. 79.626533 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:34:30] Statement - {conn-10007, pstmt-20012} executed. 79.626533 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:34:30] ResultSet - {conn-10007, pstmt-20012, rs-50005} open
[10:34:30] ResultSet - {conn-10007, pstmt-20012, rs-50005} open
[10:34:30] ResultSet - {conn-10007, pstmt-20012, rs-50005} Header: [GENERATED_KEY]
[10:34:30] ResultSet - {conn-10007, pstmt-20012, rs-50005} Header: [GENERATED_KEY]
[10:34:30] ResultSet - {conn-10007, pstmt-20012, rs-50005} Result: [39]
[10:34:30] ResultSet - {conn-10007, pstmt-20012, rs-50005} Result: [39]
[10:34:30] ResultSet - {conn-10007, pstmt-20012, rs-50005} closed
[10:34:30] ResultSet - {conn-10007, pstmt-20012, rs-50005} closed
[10:34:30] Statement - {conn-10007, pstmt-20012} clearParameters. 
[10:34:30] Statement - {conn-10007, pstmt-20012} clearParameters. 
[10:34:30] Statement - {conn-10007, pstmt-20012} clearParameters. 
[10:34:30] Connection - {conn-10007} pool-recycle
[10:34:30] Connection - {conn-10007} pool-recycle
[10:34:30] Connection - {conn-10007} pool-recycle
[10:34:31] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:34:31] Connection - {conn-10007} pool-connect
[10:34:31] Connection - {conn-10007} pool-connect
[10:34:31] Connection - {conn-10007} pool-connect
[10:34:31] Statement - {conn-10007, pstmt-20008} Parameters : [1, 1]
[10:34:31] Statement - {conn-10007, pstmt-20008} Parameters : [1, 1]
[10:34:31] Statement - {conn-10007, pstmt-20008} Parameters : [1, 1]
[10:34:31] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:34:31] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:34:31] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:34:31] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:34:31] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:34:31] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:34:31] Statement - {conn-10007, pstmt-20008} executed. 31.723589 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:31] Statement - {conn-10007, pstmt-20008} executed. 31.723589 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:31] Statement - {conn-10007, pstmt-20008} executed. 31.723589 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:31] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:34:31] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:34:31] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:34:31] Connection - {conn-10007} pool-recycle
[10:34:31] Connection - {conn-10007} pool-recycle
[10:34:31] Connection - {conn-10007} pool-recycle
[10:34:31] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:34:31] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:34:31] Connection - {conn-10007} pool-connect
[10:34:31] Connection - {conn-10007} pool-connect
[10:34:31] Connection - {conn-10007} pool-connect
[10:34:31] Statement - {conn-10007, pstmt-20008} Parameters : [1, 1]
[10:34:31] Statement - {conn-10007, pstmt-20008} Parameters : [1, 1]
[10:34:31] Statement - {conn-10007, pstmt-20008} Parameters : [1, 1]
[10:34:31] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:34:31] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:34:31] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:34:31] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:34:31] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:34:31] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:34:31] Statement - {conn-10007, pstmt-20008} executed. 0.974003 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:31] Statement - {conn-10007, pstmt-20008} executed. 0.974003 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:31] Statement - {conn-10007, pstmt-20008} executed. 0.974003 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:31] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:34:31] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:34:31] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:34:31] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:34:31] Connection - {conn-10008} pool-connect
[10:34:31] Connection - {conn-10008} pool-connect
[10:34:31] Connection - {conn-10008} pool-connect
[10:34:31] Statement - {conn-10008, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 10:34:31.063]
[10:34:31] Statement - {conn-10008, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 10:34:31.063]
[10:34:31] Statement - {conn-10008, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 10:34:31.063]
[10:34:31] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:34:31] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:34:31] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:34:31] Connection - {conn-10007} pool-connect
[10:34:31] Connection - {conn-10007} pool-connect
[10:34:31] Connection - {conn-10007} pool-connect
[10:34:31] Connection - {conn-10007} pool-recycle
[10:34:31] Connection - {conn-10007} pool-recycle
[10:34:31] Connection - {conn-10007} pool-recycle
[10:34:31] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:34:31] Statement - {conn-10007, pstmt-20008} Parameters : [1, 2]
[10:34:31] Statement - {conn-10007, pstmt-20008} Parameters : [1, 2]
[10:34:31] Statement - {conn-10007, pstmt-20008} Parameters : [1, 2]
[10:34:31] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:34:31] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:34:31] Statement - {conn-10007, pstmt-20008} Types : [INTEGER, INTEGER]
[10:34:31] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:34:31] Statement - {conn-10008, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:34:31.063')
[10:34:31] Statement - {conn-10008, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:34:31.063')
[10:34:31] Statement - {conn-10008, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:34:31.063')
[10:34:31] Statement - {conn-10008, pstmt-20011} executed. 118.77467 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:34:31] Statement - {conn-10008, pstmt-20011} executed. 118.77467 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:34:31] Statement - {conn-10008, pstmt-20011} executed. 118.77467 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:34:31] ResultSet - {conn-10008, pstmt-20011, rs-50006} open
[10:34:31] ResultSet - {conn-10008, pstmt-20011, rs-50006} open
[10:34:31] ResultSet - {conn-10008, pstmt-20011, rs-50006} Header: [GENERATED_KEY]
[10:34:31] ResultSet - {conn-10008, pstmt-20011, rs-50006} Header: [GENERATED_KEY]
[10:34:31] ResultSet - {conn-10008, pstmt-20011, rs-50006} Result: [40]
[10:34:31] ResultSet - {conn-10008, pstmt-20011, rs-50006} Result: [40]
[10:34:31] ResultSet - {conn-10008, pstmt-20011, rs-50006} closed
[10:34:31] ResultSet - {conn-10008, pstmt-20011, rs-50006} closed
[10:34:31] Statement - {conn-10008, pstmt-20011} clearParameters. 
[10:34:31] Statement - {conn-10008, pstmt-20011} clearParameters. 
[10:34:31] Statement - {conn-10008, pstmt-20011} clearParameters. 
[10:34:31] Connection - {conn-10008} pool-recycle
[10:34:31] Connection - {conn-10008} pool-recycle
[10:34:31] Connection - {conn-10008} pool-recycle
[10:34:31] Connection - {conn-10008} pool-connect
[10:34:31] Connection - {conn-10008} pool-connect
[10:34:31] Connection - {conn-10008} pool-connect
[10:34:31] Statement - {conn-10008, pstmt-20004} Parameters : [1, 2]
[10:34:31] Statement - {conn-10008, pstmt-20004} Parameters : [1, 2]
[10:34:31] Statement - {conn-10008, pstmt-20004} Parameters : [1, 2]
[10:34:31] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:34:31] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:34:31] Statement - {conn-10008, pstmt-20004} Types : [INTEGER, INTEGER]
[10:34:31] Connection - {conn-10010} pool-connect
[10:34:31] Connection - {conn-10010} pool-connect
[10:34:31] Connection - {conn-10010} pool-connect
[10:34:31] Statement - {conn-10010, pstmt-20009} Parameters : [1, 2]
[10:34:31] Statement - {conn-10010, pstmt-20009} Parameters : [1, 2]
[10:34:31] Statement - {conn-10010, pstmt-20009} Parameters : [1, 2]
[10:34:31] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[10:34:31] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[10:34:31] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[10:34:31] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:34:31] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:34:31] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:34:31] Statement - {conn-10010, pstmt-20009} executed. 0.960173 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:31] Statement - {conn-10010, pstmt-20009} executed. 0.960173 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:31] Statement - {conn-10010, pstmt-20009} executed. 0.960173 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:31] Statement - {conn-10010, pstmt-20009} clearParameters. 
[10:34:31] Statement - {conn-10010, pstmt-20009} clearParameters. 
[10:34:31] Statement - {conn-10010, pstmt-20009} clearParameters. 
[10:34:31] Connection - {conn-10010} pool-recycle
[10:34:31] Connection - {conn-10010} pool-recycle
[10:34:31] Connection - {conn-10010} pool-recycle
[10:34:31] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:34:31] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:34:31] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:34:31] Statement - {conn-10008, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:34:31] Statement - {conn-10008, pstmt-20004} executed. 6.868294 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:31] Statement - {conn-10008, pstmt-20004} executed. 6.868294 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:31] Statement - {conn-10008, pstmt-20004} executed. 6.868294 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:31] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:34:31] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:34:31] Statement - {conn-10008, pstmt-20004} clearParameters. 
[10:34:31] Connection - {conn-10008} pool-recycle
[10:34:31] Connection - {conn-10008} pool-recycle
[10:34:31] Connection - {conn-10008} pool-recycle
[10:34:31] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:34:31] Connection - {conn-10011} connected
[10:34:31] Connection - {conn-10011} connected
[10:34:31] Connection - {conn-10011} connected
[10:34:31] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:34:31] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:34:31] Statement - {conn-10007, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:34:31] Statement - {conn-10007, pstmt-20008} executed. 178.913617 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:31] Statement - {conn-10007, pstmt-20008} executed. 178.913617 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:31] Statement - {conn-10007, pstmt-20008} executed. 178.913617 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:34:31] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:34:31] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:34:31] Statement - {conn-10007, pstmt-20008} clearParameters. 
[10:34:31] Connection - {conn-10007} pool-recycle
[10:34:31] Connection - {conn-10007} pool-recycle
[10:34:31] Connection - {conn-10007} pool-recycle
[10:34:31] Connection - {conn-10007} pool-connect
[10:34:31] Connection - {conn-10007} pool-connect
[10:34:31] Connection - {conn-10007} pool-connect
[10:34:31] Statement - {conn-10007, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 10:34:31.251]
[10:34:31] Statement - {conn-10007, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 10:34:31.251]
[10:34:31] Statement - {conn-10007, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 10:34:31.251]
[10:34:31] Statement - {conn-10007, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:34:31] Statement - {conn-10007, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:34:31] Statement - {conn-10007, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:34:31] Statement - {conn-10007, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:34:31.251')
[10:34:31] Statement - {conn-10007, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:34:31.251')
[10:34:31] Statement - {conn-10007, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:34:31.251')
[10:34:31] Statement - {conn-10007, pstmt-20012} executed. 38.934713 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:34:31] Statement - {conn-10007, pstmt-20012} executed. 38.934713 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:34:31] Statement - {conn-10007, pstmt-20012} executed. 38.934713 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:34:31] ResultSet - {conn-10007, pstmt-20012, rs-50007} open
[10:34:31] ResultSet - {conn-10007, pstmt-20012, rs-50007} open
[10:34:31] ResultSet - {conn-10007, pstmt-20012, rs-50007} Header: [GENERATED_KEY]
[10:34:31] ResultSet - {conn-10007, pstmt-20012, rs-50007} Header: [GENERATED_KEY]
[10:34:31] ResultSet - {conn-10007, pstmt-20012, rs-50007} Result: [41]
[10:34:31] ResultSet - {conn-10007, pstmt-20012, rs-50007} Result: [41]
[10:34:31] ResultSet - {conn-10007, pstmt-20012, rs-50007} closed
[10:34:31] ResultSet - {conn-10007, pstmt-20012, rs-50007} closed
[10:34:31] Statement - {conn-10007, pstmt-20012} clearParameters. 
[10:34:31] Statement - {conn-10007, pstmt-20012} clearParameters. 
[10:34:31] Statement - {conn-10007, pstmt-20012} clearParameters. 
[10:34:31] Connection - {conn-10007} pool-recycle
[10:34:31] Connection - {conn-10007} pool-recycle
[10:34:31] Connection - {conn-10007} pool-recycle
[10:36:07] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:36:07] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:37:07] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:37:07] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:38:07] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:38:07] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:39:07] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:39:07] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:40:06] Connection - {conn-10010} closed
[10:40:06] Connection - {conn-10010} closed
[10:40:06] Connection - {conn-10010} closed
[10:40:07] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:40:07] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:41:07] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:41:07] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:42:07] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:42:07] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:43:07] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:43:07] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:44:07] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:44:07] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:45:07] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:45:07] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:46:07] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:46:07] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:07] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:44748, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:07] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:19] AbstractServer -  [DUBBO] All clients has discontected from /192.168.116.168:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:19] DubboProtocol -  [DUBBO] disconected from /192.168.116.168:44748,url:dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.116.168&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634186835, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:56] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[10:47:56] Main -  [DUBBO] Use container type([spring, jetty]) to run dubbo serivce., dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:57] Connection - {conn-10001} connected
[10:47:57] Connection - {conn-10001} connected
[10:47:57] Connection - {conn-10001} connected
[10:47:57] Connection - {conn-10002} connected
[10:47:57] Connection - {conn-10002} connected
[10:47:57] Connection - {conn-10002} connected
[10:47:57] Connection - {conn-10003} connected
[10:47:57] Connection - {conn-10003} connected
[10:47:57] Connection - {conn-10003} connected
[10:47:57] DruidDataSource - {dataSource-1} inited
[10:47:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.116.168&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635678736, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.116.168&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635678736 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=3254&registry=zookeeper&timestamp=1529635678731, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.116.168:20880, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] ZookeeperRegistry -  [DUBBO] Load registry store file /home/jie/.dubbo/dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634187385, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=2888&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529634186835}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:58] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[10:47:58] ZkEventThread - Starting ZkClient event thread.
[10:47:59] ZkClient - Awaiting connection to Zookeeper server
[10:47:59] ZkClient - Waiting for keeper state SyncConnected
[10:47:59] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[10:47:59] ZkClient - zookeeper state changed (SyncConnected)
[10:47:59] ZkClient - Leaving process event
[10:47:59] ZkClient - State is SyncConnected
[10:47:59] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635678736, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:59] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635678736, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:59] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635678736, urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635678736], dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:59] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635678736], dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:59] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635678736, override urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635678736], dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:59] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:59] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:59] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:59] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:59] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.116.168&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635679113, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:59] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.116.168&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635679113 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=3254&registry=zookeeper&timestamp=1529635679113, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:59] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635679113, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:59] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635679113, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:59] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635679113, urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635679113], dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:59] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635679113], dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:59] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635679113, override urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635679113], dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:59] Main -  [DUBBO] Dubbo SpringContainer started!, dubbo version: 2.0.1, current host: 192.168.116.168
[10:47:59] Main -  [DUBBO] Dubbo JettyContainer started!, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:43] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:43] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:43] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:43] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:43] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:43] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:43] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:44] Connection - {conn-10003} pool-connect
[10:48:44] Connection - {conn-10003} pool-connect
[10:48:44] Connection - {conn-10003} pool-connect
[10:48:44] Connection - {conn-10002} pool-connect
[10:48:44] Connection - {conn-10002} pool-connect
[10:48:44] Connection - {conn-10002} pool-connect
[10:48:44] Connection - {conn-10001} pool-connect
[10:48:44] Connection - {conn-10001} pool-connect
[10:48:44] Connection - {conn-10001} pool-connect
[10:48:44] Connection - {conn-10004} connected
[10:48:44] Connection - {conn-10004} connected
[10:48:44] Connection - {conn-10004} connected
[10:48:44] Connection - {conn-10004} pool-connect
[10:48:44] Connection - {conn-10004} pool-connect
[10:48:44] Connection - {conn-10004} pool-connect
[10:48:44] Connection - {conn-10005} connected
[10:48:44] Connection - {conn-10005} connected
[10:48:44] Connection - {conn-10005} connected
[10:48:44] Connection - {conn-10005} pool-connect
[10:48:44] Connection - {conn-10005} pool-connect
[10:48:44] Connection - {conn-10005} pool-connect
[10:48:44] Connection - {conn-10006} connected
[10:48:44] Connection - {conn-10006} connected
[10:48:44] Connection - {conn-10006} connected
[10:48:44] Connection - {conn-10006} pool-connect
[10:48:44] Connection - {conn-10006} pool-connect
[10:48:44] Connection - {conn-10006} pool-connect
[10:48:44] Connection - {conn-10007} connected
[10:48:44] Connection - {conn-10007} connected
[10:48:44] Connection - {conn-10007} connected
[10:48:44] Connection - {conn-10007} pool-connect
[10:48:44] Connection - {conn-10007} pool-connect
[10:48:44] Connection - {conn-10007} pool-connect
[10:48:44] Statement - {conn-10005, pstmt-20000} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10005, pstmt-20000} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10005, pstmt-20000} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10006, pstmt-20001} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10006, pstmt-20001} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10006, pstmt-20001} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10004, pstmt-20002} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10004, pstmt-20002} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10004, pstmt-20002} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10003, pstmt-20003} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10003, pstmt-20003} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10003, pstmt-20003} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10007, pstmt-20004} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10007, pstmt-20004} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10007, pstmt-20004} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10001, pstmt-20005} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10001, pstmt-20005} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10001, pstmt-20005} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10002, pstmt-20006} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10002, pstmt-20006} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10002, pstmt-20006} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10005, pstmt-20000} Parameters : [1, 0]
[10:48:44] Statement - {conn-10005, pstmt-20000} Parameters : [1, 0]
[10:48:44] Statement - {conn-10005, pstmt-20000} Parameters : [1, 0]
[10:48:44] Statement - {conn-10005, pstmt-20000} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10005, pstmt-20000} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10005, pstmt-20000} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[10:48:44] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[10:48:44] Statement - {conn-10002, pstmt-20006} Parameters : [1, 0]
[10:48:44] Statement - {conn-10002, pstmt-20006} Parameters : [1, 0]
[10:48:44] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[10:48:44] Statement - {conn-10002, pstmt-20006} Parameters : [1, 0]
[10:48:44] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10002, pstmt-20006} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10002, pstmt-20006} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10002, pstmt-20006} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10006, pstmt-20001} Parameters : [1, 0]
[10:48:44] Statement - {conn-10006, pstmt-20001} Parameters : [1, 0]
[10:48:44] Statement - {conn-10006, pstmt-20001} Parameters : [1, 0]
[10:48:44] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10004, pstmt-20002} Parameters : [1, 0]
[10:48:44] Statement - {conn-10004, pstmt-20002} Parameters : [1, 0]
[10:48:44] Statement - {conn-10004, pstmt-20002} Parameters : [1, 0]
[10:48:44] Statement - {conn-10004, pstmt-20002} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10004, pstmt-20002} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10004, pstmt-20002} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10005, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10005, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10005, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10001, pstmt-20005} Parameters : [1, 0]
[10:48:44] Statement - {conn-10001, pstmt-20005} Parameters : [1, 0]
[10:48:44] Statement - {conn-10001, pstmt-20005} Parameters : [1, 0]
[10:48:44] Statement - {conn-10005, pstmt-20000} executed. 76.161689 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10005, pstmt-20000} executed. 76.161689 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10001, pstmt-20005} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10001, pstmt-20005} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10005, pstmt-20000} executed. 76.161689 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10003, pstmt-20003} Parameters : [1, 0]
[10:48:44] Statement - {conn-10003, pstmt-20003} Parameters : [1, 0]
[10:48:44] Statement - {conn-10003, pstmt-20003} Parameters : [1, 0]
[10:48:44] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10002, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10002, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10002, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10005, pstmt-20000} clearParameters. 
[10:48:44] Statement - {conn-10005, pstmt-20000} clearParameters. 
[10:48:44] Statement - {conn-10001, pstmt-20005} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10005, pstmt-20000} clearParameters. 
[10:48:44] PreparedStatementPool - {conn-10005, pstmt-20000} enter cache
[10:48:44] Statement - {conn-10002, pstmt-20006} executed. 6.455583 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10002, pstmt-20006} executed. 6.455583 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10002, pstmt-20006} executed. 6.455583 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10003, pstmt-20003} executed. 19.440697 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10003, pstmt-20003} executed. 19.440697 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10003, pstmt-20003} executed. 19.440697 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:48:44] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:48:44] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:48:44] Statement - {conn-10002, pstmt-20006} clearParameters. 
[10:48:44] Statement - {conn-10002, pstmt-20006} clearParameters. 
[10:48:44] Statement - {conn-10002, pstmt-20006} clearParameters. 
[10:48:44] Statement - {conn-10001, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10001, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10001, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10001, pstmt-20005} executed. 23.423232 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10001, pstmt-20005} executed. 23.423232 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10001, pstmt-20005} executed. 23.423232 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10004, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10004, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10004, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10004, pstmt-20002} executed. 24.048344 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10004, pstmt-20002} executed. 24.048344 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10004, pstmt-20002} executed. 24.048344 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Connection - {conn-10005} pool-recycle
[10:48:44] Connection - {conn-10005} pool-recycle
[10:48:44] Connection - {conn-10005} pool-recycle
[10:48:44] Statement - {conn-10001, pstmt-20005} clearParameters. 
[10:48:44] Statement - {conn-10001, pstmt-20005} clearParameters. 
[10:48:44] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10004, pstmt-20002} clearParameters. 
[10:48:44] Statement - {conn-10004, pstmt-20002} clearParameters. 
[10:48:44] PreparedStatementPool - {conn-10002, pstmt-20006} enter cache
[10:48:44] Connection - {conn-10002} pool-recycle
[10:48:44] Connection - {conn-10002} pool-recycle
[10:48:44] Connection - {conn-10002} pool-recycle
[10:48:44] Statement - {conn-10004, pstmt-20002} clearParameters. 
[10:48:44] PreparedStatementPool - {conn-10004, pstmt-20002} enter cache
[10:48:44] Connection - {conn-10004} pool-recycle
[10:48:44] Connection - {conn-10004} pool-recycle
[10:48:44] Connection - {conn-10004} pool-recycle
[10:48:44] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:48:44] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10006, pstmt-20001} executed. 217.832048 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10006, pstmt-20001} executed. 217.832048 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10006, pstmt-20001} executed. 217.832048 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] StatFilter - slow sql 217 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[1,0]
[10:48:44] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:48:44] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:48:44] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:48:44] PreparedStatementPool - {conn-10006, pstmt-20001} enter cache
[10:48:44] Connection - {conn-10006} pool-recycle
[10:48:44] Connection - {conn-10006} pool-recycle
[10:48:44] Connection - {conn-10006} pool-recycle
[10:48:44] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:48:44] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:48:44] Statement - {conn-10007, pstmt-20004} executed. 228.418434 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10007, pstmt-20004} executed. 228.418434 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10007, pstmt-20004} executed. 228.418434 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] StatFilter - slow sql 228 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[1,0]
[10:48:44] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:48:44] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:48:44] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:48:44] PreparedStatementPool - {conn-10007, pstmt-20004} enter cache
[10:48:44] Connection - {conn-10007} pool-recycle
[10:48:44] Connection - {conn-10007} pool-recycle
[10:48:44] Connection - {conn-10007} pool-recycle
[10:48:44] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:48:44] Statement - {conn-10001, pstmt-20005} clearParameters. 
[10:48:44] PreparedStatementPool - {conn-10001, pstmt-20005} enter cache
[10:48:44] Connection - {conn-10001} pool-recycle
[10:48:44] Connection - {conn-10001} pool-recycle
[10:48:44] Connection - {conn-10001} pool-recycle
[10:48:44] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:48:44] Connection - {conn-10001} pool-connect
[10:48:44] Connection - {conn-10001} pool-connect
[10:48:44] Connection - {conn-10001} pool-connect
[10:48:44] Statement - {conn-10001, pstmt-20007} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:44] Statement - {conn-10001, pstmt-20007} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:44] Statement - {conn-10001, pstmt-20007} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:44] Statement - {conn-10001, pstmt-20007} Parameters : [null, 1, 手机, 2018-06-22 10:48:44.893]
[10:48:44] Statement - {conn-10001, pstmt-20007} Parameters : [null, 1, 手机, 2018-06-22 10:48:44.893]
[10:48:44] Statement - {conn-10001, pstmt-20007} Parameters : [null, 1, 手机, 2018-06-22 10:48:44.893]
[10:48:44] Statement - {conn-10001, pstmt-20007} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:48:44] Statement - {conn-10001, pstmt-20007} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:48:44] Statement - {conn-10001, pstmt-20007} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:48:44] PreparedStatementPool - {conn-10003, pstmt-20003} enter cache
[10:48:44] Connection - {conn-10003} pool-recycle
[10:48:44] Connection - {conn-10003} pool-recycle
[10:48:44] Connection - {conn-10003} pool-recycle
[10:48:44] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:48:44] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:48:44] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:44] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:44] Statement - {conn-10001, pstmt-20007} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:48:44.893')
[10:48:44] Statement - {conn-10001, pstmt-20007} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:48:44.893')
[10:48:44] Statement - {conn-10001, pstmt-20007} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:48:44.893')
[10:48:44] Statement - {conn-10001, pstmt-20007} executed. 13.509408 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:44] Statement - {conn-10001, pstmt-20007} executed. 13.509408 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:44] Statement - {conn-10001, pstmt-20007} executed. 13.509408 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:44] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:44] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:44] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:44] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:44] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:44] Connection - {conn-10003} pool-connect
[10:48:44] Connection - {conn-10003} pool-connect
[10:48:44] Connection - {conn-10003} pool-connect
[10:48:44] Statement - {conn-10003, pstmt-20003} Parameters : [1, 1]
[10:48:44] Statement - {conn-10003, pstmt-20003} Parameters : [1, 1]
[10:48:44] Statement - {conn-10003, pstmt-20003} Parameters : [1, 1]
[10:48:44] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:48:44] ResultSet - {conn-10001, pstmt-20007, rs-50000} open
[10:48:44] ResultSet - {conn-10001, pstmt-20007, rs-50000} open
[10:48:44] ResultSet - {conn-10001, pstmt-20007, rs-50000} Header: [GENERATED_KEY]
[10:48:44] ResultSet - {conn-10001, pstmt-20007, rs-50000} Header: [GENERATED_KEY]
[10:48:44] ResultSet - {conn-10001, pstmt-20007, rs-50000} Result: [42]
[10:48:44] ResultSet - {conn-10001, pstmt-20007, rs-50000} Result: [42]
[10:48:44] ResultSet - {conn-10001, pstmt-20007, rs-50000} closed
[10:48:44] ResultSet - {conn-10001, pstmt-20007, rs-50000} closed
[10:48:44] Statement - {conn-10001, pstmt-20007} clearParameters. 
[10:48:44] Statement - {conn-10001, pstmt-20007} clearParameters. 
[10:48:44] Statement - {conn-10001, pstmt-20007} clearParameters. 
[10:48:44] PreparedStatementPool - {conn-10001, pstmt-20007} enter cache
[10:48:44] Connection - {conn-10001} pool-recycle
[10:48:44] Connection - {conn-10001} pool-recycle
[10:48:44] Connection - {conn-10001} pool-recycle
[10:48:44] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:48:44] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:48:44] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:48:44] Statement - {conn-10003, pstmt-20003} executed. 24.08816 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10003, pstmt-20003} executed. 24.08816 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10003, pstmt-20003} executed. 24.08816 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:48:44] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:48:44] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:48:44] Connection - {conn-10003} pool-recycle
[10:48:44] Connection - {conn-10003} pool-recycle
[10:48:44] Connection - {conn-10003} pool-recycle
[10:48:44] Connection - {conn-10003} pool-connect
[10:48:44] Connection - {conn-10003} pool-connect
[10:48:44] Connection - {conn-10003} pool-connect
[10:48:44] Statement - {conn-10003, pstmt-20003} Parameters : [1, 1]
[10:48:44] Statement - {conn-10003, pstmt-20003} Parameters : [1, 1]
[10:48:44] Statement - {conn-10003, pstmt-20003} Parameters : [1, 1]
[10:48:44] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:48:44] Connection - {conn-10001} pool-connect
[10:48:44] Connection - {conn-10001} pool-connect
[10:48:44] Connection - {conn-10001} pool-connect
[10:48:44] Connection - {conn-10007} pool-connect
[10:48:44] Connection - {conn-10007} pool-connect
[10:48:44] Connection - {conn-10007} pool-connect
[10:48:44] Statement - {conn-10001, pstmt-20007} Parameters : [null, 1, 手机, 2018-06-22 10:48:44.948]
[10:48:44] Statement - {conn-10001, pstmt-20007} Parameters : [null, 1, 手机, 2018-06-22 10:48:44.948]
[10:48:44] Statement - {conn-10001, pstmt-20007} Parameters : [null, 1, 手机, 2018-06-22 10:48:44.948]
[10:48:44] Statement - {conn-10001, pstmt-20007} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:48:44] Statement - {conn-10001, pstmt-20007} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:48:44] Statement - {conn-10001, pstmt-20007} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:48:44] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:48:44] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:48:44] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:48:44] Statement - {conn-10003, pstmt-20003} executed. 2.173564 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10003, pstmt-20003} executed. 2.173564 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10003, pstmt-20003} executed. 2.173564 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:44] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:48:44] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:48:44] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:48:44] Connection - {conn-10003} pool-recycle
[10:48:44] Connection - {conn-10003} pool-recycle
[10:48:44] Connection - {conn-10003} pool-recycle
[10:48:44] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:48:44] Connection - {conn-10003} pool-connect
[10:48:44] Connection - {conn-10003} pool-connect
[10:48:44] Connection - {conn-10003} pool-connect
[10:48:44] Statement - {conn-10003, pstmt-20003} Parameters : [1, 2]
[10:48:44] Statement - {conn-10003, pstmt-20003} Parameters : [1, 2]
[10:48:44] Statement - {conn-10003, pstmt-20003} Parameters : [1, 2]
[10:48:44] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:48:44] Connection - {conn-10006} pool-connect
[10:48:44] Connection - {conn-10006} pool-connect
[10:48:44] Connection - {conn-10006} pool-connect
[10:48:44] Statement - {conn-10006, pstmt-20001} Parameters : [1, 2]
[10:48:44] Statement - {conn-10006, pstmt-20001} Parameters : [1, 2]
[10:48:44] Statement - {conn-10006, pstmt-20001} Parameters : [1, 2]
[10:48:44] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:48:44] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10001, pstmt-20007} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:48:44.948')
[10:48:45] Statement - {conn-10001, pstmt-20007} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:48:44.948')
[10:48:45] Statement - {conn-10001, pstmt-20007} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:48:44.948')
[10:48:45] Statement - {conn-10001, pstmt-20007} executed. 95.867967 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:45] Statement - {conn-10001, pstmt-20007} executed. 95.867967 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:45] Statement - {conn-10001, pstmt-20007} executed. 95.867967 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 65.615582 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 65.615582 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 65.615582 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:48:45] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:48:45] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:48:45] Connection - {conn-10006} pool-recycle
[10:48:45] Connection - {conn-10006} pool-recycle
[10:48:45] Connection - {conn-10006} pool-recycle
[10:48:45] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:48:45] ResultSet - {conn-10001, pstmt-20007, rs-50001} open
[10:48:45] Connection - {conn-10006} pool-connect
[10:48:45] Connection - {conn-10006} pool-connect
[10:48:45] Connection - {conn-10006} pool-connect
[10:48:45] Statement - {conn-10006, pstmt-20001} Parameters : [1, 2]
[10:48:45] Statement - {conn-10006, pstmt-20001} Parameters : [1, 2]
[10:48:45] Statement - {conn-10006, pstmt-20001} Parameters : [1, 2]
[10:48:45] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:48:45] ResultSet - {conn-10001, pstmt-20007, rs-50001} open
[10:48:45] ResultSet - {conn-10001, pstmt-20007, rs-50001} Header: [GENERATED_KEY]
[10:48:45] ResultSet - {conn-10001, pstmt-20007, rs-50001} Header: [GENERATED_KEY]
[10:48:45] ResultSet - {conn-10001, pstmt-20007, rs-50001} Result: [43]
[10:48:45] ResultSet - {conn-10001, pstmt-20007, rs-50001} Result: [43]
[10:48:45] ResultSet - {conn-10001, pstmt-20007, rs-50001} closed
[10:48:45] ResultSet - {conn-10001, pstmt-20007, rs-50001} closed
[10:48:45] Statement - {conn-10001, pstmt-20007} clearParameters. 
[10:48:45] Statement - {conn-10001, pstmt-20007} clearParameters. 
[10:48:45] Statement - {conn-10001, pstmt-20007} clearParameters. 
[10:48:45] Connection - {conn-10001} pool-recycle
[10:48:45] Connection - {conn-10001} pool-recycle
[10:48:45] Connection - {conn-10001} pool-recycle
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 11.216839 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 11.216839 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 11.216839 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:48:45] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:48:45] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:48:45] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:48:45] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:48:45] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:48:45] Connection - {conn-10006} pool-recycle
[10:48:45] Connection - {conn-10006} pool-recycle
[10:48:45] Connection - {conn-10006} pool-recycle
[10:48:45] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:48:45] Statement - {conn-10007, pstmt-20004} Parameters : [1, 1]
[10:48:45] Statement - {conn-10007, pstmt-20004} Parameters : [1, 1]
[10:48:45] Statement - {conn-10007, pstmt-20004} Parameters : [1, 1]
[10:48:45] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:48:45] Connection - {conn-10006} pool-connect
[10:48:45] Connection - {conn-10006} pool-connect
[10:48:45] Connection - {conn-10006} pool-connect
[10:48:45] Statement - {conn-10006, pstmt-20001} Parameters : [1, 2]
[10:48:45] Statement - {conn-10006, pstmt-20001} Parameters : [1, 2]
[10:48:45] Statement - {conn-10006, pstmt-20001} Parameters : [1, 2]
[10:48:45] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 2.472816 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 2.472816 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 2.472816 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:48:45] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:48:45] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:48:45] Connection - {conn-10006} pool-recycle
[10:48:45] Connection - {conn-10006} pool-recycle
[10:48:45] Connection - {conn-10006} pool-recycle
[10:48:45] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:48:45] Statement - {conn-10003, pstmt-20003} executed. 154.621705 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10003, pstmt-20003} executed. 154.621705 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10003, pstmt-20003} executed. 154.621705 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:48:45] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:48:45] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:48:45] Connection - {conn-10003} pool-recycle
[10:48:45] Connection - {conn-10003} pool-recycle
[10:48:45] Connection - {conn-10003} pool-recycle
[10:48:45] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:48:45] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:48:45] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:48:45] Statement - {conn-10007, pstmt-20004} executed. 156.595738 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10007, pstmt-20004} executed. 156.595738 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10007, pstmt-20004} executed. 156.595738 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Connection - {conn-10003} pool-connect
[10:48:45] Connection - {conn-10003} pool-connect
[10:48:45] Connection - {conn-10003} pool-connect
[10:48:45] Statement - {conn-10003, pstmt-20008} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:45] Statement - {conn-10003, pstmt-20008} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:45] Statement - {conn-10003, pstmt-20008} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:45] Statement - {conn-10003, pstmt-20008} Parameters : [null, 1, 手机, 2018-06-22 10:48:45.152]
[10:48:45] Statement - {conn-10003, pstmt-20008} Parameters : [null, 1, 手机, 2018-06-22 10:48:45.152]
[10:48:45] Statement - {conn-10003, pstmt-20008} Parameters : [null, 1, 手机, 2018-06-22 10:48:45.152]
[10:48:45] Statement - {conn-10003, pstmt-20008} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:48:45] Statement - {conn-10003, pstmt-20008} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:48:45] Statement - {conn-10003, pstmt-20008} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:48:45] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:45] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:45] Statement - {conn-10003, pstmt-20008} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:48:45.152')
[10:48:45] Statement - {conn-10003, pstmt-20008} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:48:45.152')
[10:48:45] Statement - {conn-10003, pstmt-20008} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:48:45.152')
[10:48:45] Statement - {conn-10003, pstmt-20008} executed. 3.468013 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:45] Statement - {conn-10003, pstmt-20008} executed. 3.468013 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:45] Statement - {conn-10003, pstmt-20008} executed. 3.468013 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:45] ResultSet - {conn-10003, pstmt-20008, rs-50002} open
[10:48:45] ResultSet - {conn-10003, pstmt-20008, rs-50002} open
[10:48:45] ResultSet - {conn-10003, pstmt-20008, rs-50002} Header: [GENERATED_KEY]
[10:48:45] ResultSet - {conn-10003, pstmt-20008, rs-50002} Header: [GENERATED_KEY]
[10:48:45] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:45] ResultSet - {conn-10003, pstmt-20008, rs-50002} Result: [44]
[10:48:45] ResultSet - {conn-10003, pstmt-20008, rs-50002} Result: [44]
[10:48:45] ResultSet - {conn-10003, pstmt-20008, rs-50002} closed
[10:48:45] ResultSet - {conn-10003, pstmt-20008, rs-50002} closed
[10:48:45] Statement - {conn-10003, pstmt-20008} clearParameters. 
[10:48:45] Statement - {conn-10003, pstmt-20008} clearParameters. 
[10:48:45] Statement - {conn-10003, pstmt-20008} clearParameters. 
[10:48:45] PreparedStatementPool - {conn-10003, pstmt-20008} enter cache
[10:48:45] Connection - {conn-10003} pool-recycle
[10:48:45] Connection - {conn-10003} pool-recycle
[10:48:45] Connection - {conn-10003} pool-recycle
[10:48:45] Connection - {conn-10003} pool-connect
[10:48:45] Connection - {conn-10003} pool-connect
[10:48:45] Connection - {conn-10003} pool-connect
[10:48:45] Statement - {conn-10003, pstmt-20003} Parameters : [1, 3]
[10:48:45] Statement - {conn-10003, pstmt-20003} Parameters : [1, 3]
[10:48:45] Statement - {conn-10003, pstmt-20003} Parameters : [1, 3]
[10:48:45] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:48:45] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:48:45] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:48:45] Connection - {conn-10007} pool-recycle
[10:48:45] Connection - {conn-10007} pool-recycle
[10:48:45] Connection - {conn-10007} pool-recycle
[10:48:45] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:48:45] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[10:48:45] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[10:48:45] Connection - {conn-10007} pool-connect
[10:48:45] Connection - {conn-10007} pool-connect
[10:48:45] Connection - {conn-10007} pool-connect
[10:48:45] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[10:48:45] Statement - {conn-10003, pstmt-20003} executed. 73.757753 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10003, pstmt-20003} executed. 73.757753 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10003, pstmt-20003} executed. 73.757753 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:48:45] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:48:45] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:48:45] Connection - {conn-10003} pool-recycle
[10:48:45] Connection - {conn-10003} pool-recycle
[10:48:45] Connection - {conn-10003} pool-recycle
[10:48:45] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:45] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:48:45] Statement - {conn-10007, pstmt-20004} Parameters : [1, 3]
[10:48:45] Statement - {conn-10007, pstmt-20004} Parameters : [1, 3]
[10:48:45] Statement - {conn-10007, pstmt-20004} Parameters : [1, 3]
[10:48:45] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[10:48:45] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[10:48:45] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[10:48:45] Statement - {conn-10007, pstmt-20004} executed. 1.087971 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10007, pstmt-20004} executed. 1.087971 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10007, pstmt-20004} executed. 1.087971 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:48:45] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:48:45] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:48:45] Connection - {conn-10007} pool-recycle
[10:48:45] Connection - {conn-10007} pool-recycle
[10:48:45] Connection - {conn-10007} pool-recycle
[10:48:45] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:48:45] Connection - {conn-10007} pool-connect
[10:48:45] Connection - {conn-10007} pool-connect
[10:48:45] Connection - {conn-10007} pool-connect
[10:48:45] Connection - {conn-10003} pool-connect
[10:48:45] Connection - {conn-10003} pool-connect
[10:48:45] Connection - {conn-10003} pool-connect
[10:48:45] Statement - {conn-10007, pstmt-20009} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:45] Statement - {conn-10007, pstmt-20009} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:45] Statement - {conn-10007, pstmt-20009} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:45] Statement - {conn-10003, pstmt-20003} Parameters : [1, 4]
[10:48:45] Statement - {conn-10003, pstmt-20003} Parameters : [1, 4]
[10:48:45] Statement - {conn-10003, pstmt-20003} Parameters : [1, 4]
[10:48:45] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:48:45.245]
[10:48:45] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:48:45.245]
[10:48:45] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:48:45.245]
[10:48:45] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:48:45] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:48:45] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:48:45] Connection - {conn-10006} pool-connect
[10:48:45] Connection - {conn-10006} pool-connect
[10:48:45] Connection - {conn-10006} pool-connect
[10:48:45] Statement - {conn-10006, pstmt-20001} Parameters : [1, 4]
[10:48:45] Statement - {conn-10006, pstmt-20001} Parameters : [1, 4]
[10:48:45] Statement - {conn-10006, pstmt-20001} Parameters : [1, 4]
[10:48:45] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 1.154242 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 1.154242 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 1.154242 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:48:45] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:48:45] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:48:45] Connection - {conn-10006} pool-recycle
[10:48:45] Connection - {conn-10006} pool-recycle
[10:48:45] Connection - {conn-10006} pool-recycle
[10:48:45] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:48:45] Connection - {conn-10006} pool-connect
[10:48:45] Connection - {conn-10006} pool-connect
[10:48:45] Connection - {conn-10006} pool-connect
[10:48:45] Statement - {conn-10006, pstmt-20001} Parameters : [1, 3]
[10:48:45] Statement - {conn-10006, pstmt-20001} Parameters : [1, 3]
[10:48:45] Statement - {conn-10006, pstmt-20001} Parameters : [1, 3]
[10:48:45] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 0.970376 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 0.970376 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10006, pstmt-20001} executed. 0.970376 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:48:45] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:48:45] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:48:45] Connection - {conn-10006} pool-recycle
[10:48:45] Connection - {conn-10006} pool-recycle
[10:48:45] Connection - {conn-10006} pool-recycle
[10:48:45] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:48:45] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:48:45] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:48:45] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:48:45] Statement - {conn-10003, pstmt-20003} executed. 8.838595 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10003, pstmt-20003} executed. 8.838595 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10003, pstmt-20003} executed. 8.838595 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:48:45] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:48:45] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:48:45] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:48:45] Connection - {conn-10003} pool-recycle
[10:48:45] Connection - {conn-10003} pool-recycle
[10:48:45] Connection - {conn-10003} pool-recycle
[10:48:45] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:48:45.245')
[10:48:45] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:48:45.245')
[10:48:45] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:48:45.245')
[10:48:45] Statement - {conn-10007, pstmt-20009} executed. 19.950631 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:45] Statement - {conn-10007, pstmt-20009} executed. 19.950631 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:45] Statement - {conn-10007, pstmt-20009} executed. 19.950631 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:45] ResultSet - {conn-10007, pstmt-20009, rs-50003} open
[10:48:45] ResultSet - {conn-10007, pstmt-20009, rs-50003} open
[10:48:45] ResultSet - {conn-10007, pstmt-20009, rs-50003} Header: [GENERATED_KEY]
[10:48:45] ResultSet - {conn-10007, pstmt-20009, rs-50003} Header: [GENERATED_KEY]
[10:48:45] ResultSet - {conn-10007, pstmt-20009, rs-50003} Result: [45]
[10:48:45] ResultSet - {conn-10007, pstmt-20009, rs-50003} Result: [45]
[10:48:45] ResultSet - {conn-10007, pstmt-20009, rs-50003} closed
[10:48:45] ResultSet - {conn-10007, pstmt-20009, rs-50003} closed
[10:48:45] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:48:45] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:48:45] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:48:45] PreparedStatementPool - {conn-10007, pstmt-20009} enter cache
[10:48:45] Connection - {conn-10007} pool-recycle
[10:48:45] Connection - {conn-10007} pool-recycle
[10:48:45] Connection - {conn-10007} pool-recycle
[10:48:45] Connection - {conn-10007} pool-connect
[10:48:45] Connection - {conn-10007} pool-connect
[10:48:45] Connection - {conn-10007} pool-connect
[10:48:45] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:48:45.272]
[10:48:45] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:48:45.272]
[10:48:45] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:48:45.272]
[10:48:45] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:48:45] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:48:45] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:48:45] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:48:45.272')
[10:48:45] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:48:45.272')
[10:48:45] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:48:45.272')
[10:48:45] Statement - {conn-10007, pstmt-20009} executed. 4.422378 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:45] Statement - {conn-10007, pstmt-20009} executed. 4.422378 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:45] Statement - {conn-10007, pstmt-20009} executed. 4.422378 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:48:45] ResultSet - {conn-10007, pstmt-20009, rs-50004} open
[10:48:45] ResultSet - {conn-10007, pstmt-20009, rs-50004} open
[10:48:45] ResultSet - {conn-10007, pstmt-20009, rs-50004} Header: [GENERATED_KEY]
[10:48:45] ResultSet - {conn-10007, pstmt-20009, rs-50004} Header: [GENERATED_KEY]
[10:48:45] ResultSet - {conn-10007, pstmt-20009, rs-50004} Result: [46]
[10:48:45] ResultSet - {conn-10007, pstmt-20009, rs-50004} Result: [46]
[10:48:45] ResultSet - {conn-10007, pstmt-20009, rs-50004} closed
[10:48:45] ResultSet - {conn-10007, pstmt-20009, rs-50004} closed
[10:48:45] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:48:45] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:48:45] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:48:45] Connection - {conn-10007} pool-recycle
[10:48:45] Connection - {conn-10007} pool-recycle
[10:48:45] Connection - {conn-10007} pool-recycle
[10:49:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:49:13] Connection - {conn-10007} pool-connect
[10:49:13] Connection - {conn-10007} pool-connect
[10:49:13] Connection - {conn-10007} pool-connect
[10:49:13] Statement - {conn-10007, pstmt-20004} Parameters : [1, 5]
[10:49:13] Statement - {conn-10007, pstmt-20004} Parameters : [1, 5]
[10:49:13] Statement - {conn-10007, pstmt-20004} Parameters : [1, 5]
[10:49:13] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:13] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:13] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:13] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[10:49:13] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[10:49:13] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[10:49:13] Statement - {conn-10007, pstmt-20004} executed. 6.617789 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:13] Statement - {conn-10007, pstmt-20004} executed. 6.617789 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:13] Statement - {conn-10007, pstmt-20004} executed. 6.617789 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:13] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:13] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:13] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:13] Connection - {conn-10007} pool-recycle
[10:49:13] Connection - {conn-10007} pool-recycle
[10:49:13] Connection - {conn-10007} pool-recycle
[10:49:13] Connection - {conn-10007} pool-connect
[10:49:13] Connection - {conn-10007} pool-connect
[10:49:13] Connection - {conn-10007} pool-connect
[10:49:13] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:49:13.293]
[10:49:13] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:49:13.293]
[10:49:13] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:49:13.293]
[10:49:13] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:49:13] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:49:13] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:49:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:49:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:49:13] Connection - {conn-10003} pool-connect
[10:49:13] Connection - {conn-10003} pool-connect
[10:49:13] Connection - {conn-10003} pool-connect
[10:49:13] Connection - {conn-10006} pool-connect
[10:49:13] Connection - {conn-10006} pool-connect
[10:49:13] Connection - {conn-10006} pool-connect
[10:49:13] Statement - {conn-10006, pstmt-20001} Parameters : [1, 6]
[10:49:13] Statement - {conn-10006, pstmt-20001} Parameters : [1, 6]
[10:49:13] Statement - {conn-10006, pstmt-20001} Parameters : [1, 6]
[10:49:13] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:49:13] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:49:13] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:49:13] Statement - {conn-10003, pstmt-20003} Parameters : [1, 6]
[10:49:13] Statement - {conn-10003, pstmt-20003} Parameters : [1, 6]
[10:49:13] Statement - {conn-10003, pstmt-20003} Parameters : [1, 6]
[10:49:13] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:49:13] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:49:13] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:49:13] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[10:49:13] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[10:49:13] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[10:49:13] Statement - {conn-10003, pstmt-20003} executed. 1.928493 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:13] Statement - {conn-10003, pstmt-20003} executed. 1.928493 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:13] Statement - {conn-10003, pstmt-20003} executed. 1.928493 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:13] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:49:13] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:49:13] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:49:13] Connection - {conn-10003} pool-recycle
[10:49:13] Connection - {conn-10003} pool-recycle
[10:49:13] Connection - {conn-10003} pool-recycle
[10:49:13] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:49:13] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:49:13.293')
[10:49:13] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:49:13.293')
[10:49:13] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:49:13.293')
[10:49:13] Statement - {conn-10007, pstmt-20009} executed. 13.786229 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:49:13] Statement - {conn-10007, pstmt-20009} executed. 13.786229 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:49:13] Statement - {conn-10007, pstmt-20009} executed. 13.786229 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:49:13] ResultSet - {conn-10007, pstmt-20009, rs-50005} open
[10:49:13] ResultSet - {conn-10007, pstmt-20009, rs-50005} open
[10:49:13] ResultSet - {conn-10007, pstmt-20009, rs-50005} Header: [GENERATED_KEY]
[10:49:13] ResultSet - {conn-10007, pstmt-20009, rs-50005} Header: [GENERATED_KEY]
[10:49:13] ResultSet - {conn-10007, pstmt-20009, rs-50005} Result: [47]
[10:49:13] ResultSet - {conn-10007, pstmt-20009, rs-50005} Result: [47]
[10:49:13] ResultSet - {conn-10007, pstmt-20009, rs-50005} closed
[10:49:13] ResultSet - {conn-10007, pstmt-20009, rs-50005} closed
[10:49:13] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:49:13] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:49:13] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:49:13] Connection - {conn-10007} pool-recycle
[10:49:13] Connection - {conn-10007} pool-recycle
[10:49:13] Connection - {conn-10007} pool-recycle
[10:49:13] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[10:49:13] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[10:49:13] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[10:49:13] Statement - {conn-10006, pstmt-20001} executed. 45.42671 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:13] Statement - {conn-10006, pstmt-20001} executed. 45.42671 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:13] Statement - {conn-10006, pstmt-20001} executed. 45.42671 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:13] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:49:13] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:49:13] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:49:13] Connection - {conn-10006} pool-recycle
[10:49:13] Connection - {conn-10006} pool-recycle
[10:49:13] Connection - {conn-10006} pool-recycle
[10:49:13] Connection - {conn-10006} pool-connect
[10:49:13] Connection - {conn-10006} pool-connect
[10:49:13] Connection - {conn-10006} pool-connect
[10:49:13] Statement - {conn-10006, pstmt-20010} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:49:13] Statement - {conn-10006, pstmt-20010} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:49:13] Statement - {conn-10006, pstmt-20010} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:49:13] Statement - {conn-10006, pstmt-20010} Parameters : [null, 1, 手机, 2018-06-22 10:49:13.354]
[10:49:13] Statement - {conn-10006, pstmt-20010} Parameters : [null, 1, 手机, 2018-06-22 10:49:13.354]
[10:49:13] Statement - {conn-10006, pstmt-20010} Parameters : [null, 1, 手机, 2018-06-22 10:49:13.354]
[10:49:13] Statement - {conn-10006, pstmt-20010} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:49:13] Statement - {conn-10006, pstmt-20010} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:49:13] Statement - {conn-10006, pstmt-20010} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:49:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:49:13] Connection - {conn-10007} pool-connect
[10:49:13] Connection - {conn-10007} pool-connect
[10:49:13] Connection - {conn-10007} pool-connect
[10:49:13] Statement - {conn-10007, pstmt-20004} Parameters : [1, 7]
[10:49:13] Statement - {conn-10007, pstmt-20004} Parameters : [1, 7]
[10:49:13] Statement - {conn-10007, pstmt-20004} Parameters : [1, 7]
[10:49:13] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:13] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:13] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:13] Statement - {conn-10006, pstmt-20010} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:49:13.354')
[10:49:13] Statement - {conn-10006, pstmt-20010} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:49:13.354')
[10:49:13] Statement - {conn-10006, pstmt-20010} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:49:13.354')
[10:49:13] Statement - {conn-10006, pstmt-20010} executed. 7.149186 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:49:13] Statement - {conn-10006, pstmt-20010} executed. 7.149186 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:49:13] Statement - {conn-10006, pstmt-20010} executed. 7.149186 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:49:13] ResultSet - {conn-10006, pstmt-20010, rs-50006} open
[10:49:13] ResultSet - {conn-10006, pstmt-20010, rs-50006} open
[10:49:13] ResultSet - {conn-10006, pstmt-20010, rs-50006} Header: [GENERATED_KEY]
[10:49:13] ResultSet - {conn-10006, pstmt-20010, rs-50006} Header: [GENERATED_KEY]
[10:49:13] ResultSet - {conn-10006, pstmt-20010, rs-50006} Result: [48]
[10:49:13] ResultSet - {conn-10006, pstmt-20010, rs-50006} Result: [48]
[10:49:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:49:13] ResultSet - {conn-10006, pstmt-20010, rs-50006} closed
[10:49:13] ResultSet - {conn-10006, pstmt-20010, rs-50006} closed
[10:49:13] Statement - {conn-10006, pstmt-20010} clearParameters. 
[10:49:13] Statement - {conn-10006, pstmt-20010} clearParameters. 
[10:49:13] Statement - {conn-10006, pstmt-20010} clearParameters. 
[10:49:13] PreparedStatementPool - {conn-10006, pstmt-20010} enter cache
[10:49:13] Connection - {conn-10006} pool-recycle
[10:49:13] Connection - {conn-10006} pool-recycle
[10:49:13] Connection - {conn-10006} pool-recycle
[10:49:13] Connection - {conn-10006} pool-connect
[10:49:13] Connection - {conn-10006} pool-connect
[10:49:13] Connection - {conn-10006} pool-connect
[10:49:13] Statement - {conn-10006, pstmt-20001} Parameters : [1, 7]
[10:49:13] Statement - {conn-10006, pstmt-20001} Parameters : [1, 7]
[10:49:13] Statement - {conn-10006, pstmt-20001} Parameters : [1, 7]
[10:49:13] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:49:13] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:49:13] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:49:13] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[10:49:13] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[10:49:13] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[10:49:13] Statement - {conn-10006, pstmt-20001} executed. 0.859609 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:13] Statement - {conn-10006, pstmt-20001} executed. 0.859609 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:13] Statement - {conn-10006, pstmt-20001} executed. 0.859609 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:13] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:49:13] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:49:13] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:49:13] Connection - {conn-10006} pool-recycle
[10:49:13] Connection - {conn-10006} pool-recycle
[10:49:13] Connection - {conn-10006} pool-recycle
[10:49:13] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:49:13] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[10:49:13] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[10:49:13] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[10:49:13] Statement - {conn-10007, pstmt-20004} executed. 62.561456 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:13] Statement - {conn-10007, pstmt-20004} executed. 62.561456 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:13] Statement - {conn-10007, pstmt-20004} executed. 62.561456 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:13] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:13] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:13] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:13] Connection - {conn-10007} pool-recycle
[10:49:13] Connection - {conn-10007} pool-recycle
[10:49:13] Connection - {conn-10007} pool-recycle
[10:49:13] Connection - {conn-10007} pool-connect
[10:49:13] Connection - {conn-10007} pool-connect
[10:49:13] Connection - {conn-10007} pool-connect
[10:49:13] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:49:13.435]
[10:49:13] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:49:13.435]
[10:49:13] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:49:13.435]
[10:49:13] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:49:13] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:49:13] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:49:13] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:49:13.435')
[10:49:13] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:49:13.435')
[10:49:13] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:49:13.435')
[10:49:13] Statement - {conn-10007, pstmt-20009} executed. 23.198664 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:49:13] Statement - {conn-10007, pstmt-20009} executed. 23.198664 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:49:13] Statement - {conn-10007, pstmt-20009} executed. 23.198664 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:49:13] ResultSet - {conn-10007, pstmt-20009, rs-50007} open
[10:49:13] ResultSet - {conn-10007, pstmt-20009, rs-50007} open
[10:49:13] ResultSet - {conn-10007, pstmt-20009, rs-50007} Header: [GENERATED_KEY]
[10:49:13] ResultSet - {conn-10007, pstmt-20009, rs-50007} Header: [GENERATED_KEY]
[10:49:13] ResultSet - {conn-10007, pstmt-20009, rs-50007} Result: [49]
[10:49:13] ResultSet - {conn-10007, pstmt-20009, rs-50007} Result: [49]
[10:49:13] ResultSet - {conn-10007, pstmt-20009, rs-50007} closed
[10:49:13] ResultSet - {conn-10007, pstmt-20009, rs-50007} closed
[10:49:13] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:49:13] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:49:13] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:49:13] Connection - {conn-10007} pool-recycle
[10:49:13] Connection - {conn-10007} pool-recycle
[10:49:13] Connection - {conn-10007} pool-recycle
[10:49:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Statement - {conn-10007, pstmt-20004} Parameters : [1, 8]
[10:49:14] Statement - {conn-10007, pstmt-20004} Parameters : [1, 8]
[10:49:14] Statement - {conn-10007, pstmt-20004} Parameters : [1, 8]
[10:49:14] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:14] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:14] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 19.472574 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 19.472574 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 19.472574 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:14] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:14] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:14] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Statement - {conn-10007, pstmt-20004} Parameters : [1, 8]
[10:49:14] Statement - {conn-10007, pstmt-20004} Parameters : [1, 8]
[10:49:14] Statement - {conn-10007, pstmt-20004} Parameters : [1, 8]
[10:49:14] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:14] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:14] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 2.233515 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 2.233515 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 2.233515 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:14] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:14] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:14] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:49:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Statement - {conn-10007, pstmt-20004} Parameters : [1, 8]
[10:49:14] Statement - {conn-10007, pstmt-20004} Parameters : [1, 8]
[10:49:14] Statement - {conn-10007, pstmt-20004} Parameters : [1, 8]
[10:49:14] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:14] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:14] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 1.005862 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 1.005862 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 1.005862 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:14] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:14] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:14] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Statement - {conn-10007, pstmt-20004} Parameters : [1, 8]
[10:49:14] Statement - {conn-10007, pstmt-20004} Parameters : [1, 8]
[10:49:14] Statement - {conn-10007, pstmt-20004} Parameters : [1, 8]
[10:49:14] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:14] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:14] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 2.114459 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 2.114459 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 2.114459 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:14] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:14] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:14] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:49:14.112]
[10:49:14] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:49:14.112]
[10:49:14] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:49:14.112]
[10:49:14] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:49:14] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:49:14] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:49:14] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:49:14.112')
[10:49:14] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:49:14.112')
[10:49:14] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:49:14.112')
[10:49:14] Statement - {conn-10007, pstmt-20009} executed. 1.738877 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:49:14] Statement - {conn-10007, pstmt-20009} executed. 1.738877 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:49:14] Statement - {conn-10007, pstmt-20009} executed. 1.738877 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:49:14] ResultSet - {conn-10007, pstmt-20009, rs-50008} open
[10:49:14] ResultSet - {conn-10007, pstmt-20009, rs-50008} open
[10:49:14] ResultSet - {conn-10007, pstmt-20009, rs-50008} Header: [GENERATED_KEY]
[10:49:14] ResultSet - {conn-10007, pstmt-20009, rs-50008} Header: [GENERATED_KEY]
[10:49:14] ResultSet - {conn-10007, pstmt-20009, rs-50008} Result: [50]
[10:49:14] ResultSet - {conn-10007, pstmt-20009, rs-50008} Result: [50]
[10:49:14] ResultSet - {conn-10007, pstmt-20009, rs-50008} closed
[10:49:14] ResultSet - {conn-10007, pstmt-20009, rs-50008} closed
[10:49:14] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:49:14] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:49:14] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Statement - {conn-10007, pstmt-20004} Parameters : [1, 9]
[10:49:14] Statement - {conn-10007, pstmt-20004} Parameters : [1, 9]
[10:49:14] Statement - {conn-10007, pstmt-20004} Parameters : [1, 9]
[10:49:14] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:14] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:14] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 7.044627 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 7.044627 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:14] Statement - {conn-10007, pstmt-20004} executed. 7.044627 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:49:14] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:14] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:14] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Connection - {conn-10007} pool-connect
[10:49:14] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:49:14.144]
[10:49:14] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:49:14.144]
[10:49:14] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:49:14.144]
[10:49:14] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:49:14] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:49:14] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:49:14] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:49:14.144')
[10:49:14] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:49:14.144')
[10:49:14] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:49:14.144')
[10:49:14] Statement - {conn-10007, pstmt-20009} executed. 28.414247 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:49:14] Statement - {conn-10007, pstmt-20009} executed. 28.414247 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:49:14] Statement - {conn-10007, pstmt-20009} executed. 28.414247 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:49:14] ResultSet - {conn-10007, pstmt-20009, rs-50009} open
[10:49:14] ResultSet - {conn-10007, pstmt-20009, rs-50009} open
[10:49:14] ResultSet - {conn-10007, pstmt-20009, rs-50009} Header: [GENERATED_KEY]
[10:49:14] ResultSet - {conn-10007, pstmt-20009, rs-50009} Header: [GENERATED_KEY]
[10:49:14] ResultSet - {conn-10007, pstmt-20009, rs-50009} Result: [51]
[10:49:14] ResultSet - {conn-10007, pstmt-20009, rs-50009} Result: [51]
[10:49:14] ResultSet - {conn-10007, pstmt-20009, rs-50009} closed
[10:49:14] ResultSet - {conn-10007, pstmt-20009, rs-50009} closed
[10:49:14] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:49:14] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:49:14] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] Connection - {conn-10007} pool-recycle
[10:49:14] Connection - {conn-10007} pool-recycle
[10:50:19] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:51:19] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:51:24] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:51:24] Connection - {conn-10007} pool-connect
[10:51:24] Connection - {conn-10007} pool-connect
[10:51:24] Connection - {conn-10007} pool-connect
[10:51:24] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[10:51:24] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[10:51:24] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[10:51:24] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:51:24] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:51:24] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:51:24] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:51:24] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:51:24] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:51:24] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:51:24] Statement - {conn-10007, pstmt-20004} executed. 5.580078 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:24] Statement - {conn-10007, pstmt-20004} executed. 5.580078 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:24] Statement - {conn-10007, pstmt-20004} executed. 5.580078 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:24] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:51:24] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:51:24] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:51:24] Connection - {conn-10007} pool-recycle
[10:51:24] Connection - {conn-10007} pool-recycle
[10:51:24] Connection - {conn-10007} pool-recycle
[10:51:24] Connection - {conn-10007} pool-connect
[10:51:24] Connection - {conn-10007} pool-connect
[10:51:24] Connection - {conn-10007} pool-connect
[10:51:24] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[10:51:24] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[10:51:24] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[10:51:24] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:51:24] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:51:24] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:51:24] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:51:24] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:51:24] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[10:51:24] Statement - {conn-10007, pstmt-20004} executed. 1.856716 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:24] Statement - {conn-10007, pstmt-20004} executed. 1.856716 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:24] Statement - {conn-10007, pstmt-20004} executed. 1.856716 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:24] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:51:24] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:51:24] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:51:24] Connection - {conn-10007} pool-recycle
[10:51:24] Connection - {conn-10007} pool-recycle
[10:51:24] Connection - {conn-10007} pool-recycle
[10:51:24] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:51:24] Connection - {conn-10007} pool-connect
[10:51:24] Connection - {conn-10007} pool-connect
[10:51:24] Connection - {conn-10007} pool-connect
[10:51:24] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:51:24.636]
[10:51:24] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:51:24.636]
[10:51:24] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:51:24.636]
[10:51:24] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:51:24] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:51:24] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:51:24] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:51:24] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:51:24] Connection - {conn-10003} pool-connect
[10:51:24] Connection - {conn-10003} pool-connect
[10:51:24] Connection - {conn-10003} pool-connect
[10:51:24] Statement - {conn-10003, pstmt-20003} Parameters : [1, 1]
[10:51:24] Statement - {conn-10003, pstmt-20003} Parameters : [1, 1]
[10:51:24] Statement - {conn-10003, pstmt-20003} Parameters : [1, 1]
[10:51:24] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:51:24] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:51:24] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:51:24] Connection - {conn-10006} pool-connect
[10:51:24] Connection - {conn-10006} pool-connect
[10:51:24] Connection - {conn-10006} pool-connect
[10:51:24] Statement - {conn-10006, pstmt-20001} Parameters : [1, 1]
[10:51:24] Statement - {conn-10006, pstmt-20001} Parameters : [1, 1]
[10:51:24] Statement - {conn-10006, pstmt-20001} Parameters : [1, 1]
[10:51:24] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:51:24] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:51:24] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[10:51:24] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:51:24] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:51:24] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:51:24] Statement - {conn-10006, pstmt-20001} executed. 1.691986 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:24] Statement - {conn-10006, pstmt-20001} executed. 1.691986 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:24] Statement - {conn-10006, pstmt-20001} executed. 1.691986 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:24] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:51:24] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:51:24] Statement - {conn-10006, pstmt-20001} clearParameters. 
[10:51:24] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:51:24] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:51:24] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[10:51:24] Connection - {conn-10006} pool-recycle
[10:51:24] Connection - {conn-10006} pool-recycle
[10:51:24] Connection - {conn-10006} pool-recycle
[10:51:24] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:51:24] Statement - {conn-10003, pstmt-20003} executed. 17.963842 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:24] Statement - {conn-10003, pstmt-20003} executed. 17.963842 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:24] Statement - {conn-10003, pstmt-20003} executed. 17.963842 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:24] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:51:24.636')
[10:51:24] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:51:24.636')
[10:51:24] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:51:24.636')
[10:51:24] Statement - {conn-10007, pstmt-20009} executed. 62.677411 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:51:24] Statement - {conn-10007, pstmt-20009} executed. 62.677411 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:51:24] Statement - {conn-10007, pstmt-20009} executed. 62.677411 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:51:24] ResultSet - {conn-10007, pstmt-20009, rs-50010} open
[10:51:24] ResultSet - {conn-10007, pstmt-20009, rs-50010} open
[10:51:24] ResultSet - {conn-10007, pstmt-20009, rs-50010} Header: [GENERATED_KEY]
[10:51:24] ResultSet - {conn-10007, pstmt-20009, rs-50010} Header: [GENERATED_KEY]
[10:51:24] ResultSet - {conn-10007, pstmt-20009, rs-50010} Result: [52]
[10:51:24] ResultSet - {conn-10007, pstmt-20009, rs-50010} Result: [52]
[10:51:24] ResultSet - {conn-10007, pstmt-20009, rs-50010} closed
[10:51:24] ResultSet - {conn-10007, pstmt-20009, rs-50010} closed
[10:51:24] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:51:24] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:51:24] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:51:24] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:51:24] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:51:24] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:51:24] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:51:24] Connection - {conn-10007} pool-recycle
[10:51:24] Connection - {conn-10007} pool-recycle
[10:51:24] Connection - {conn-10007} pool-recycle
[10:51:24] Connection - {conn-10003} pool-recycle
[10:51:24] Connection - {conn-10003} pool-recycle
[10:51:24] Connection - {conn-10003} pool-recycle
[10:51:24] Connection - {conn-10003} pool-connect
[10:51:24] Connection - {conn-10003} pool-connect
[10:51:24] Connection - {conn-10003} pool-connect
[10:51:24] Statement - {conn-10003, pstmt-20008} Parameters : [null, 1, 手机, 2018-06-22 10:51:24.707]
[10:51:24] Statement - {conn-10003, pstmt-20008} Parameters : [null, 1, 手机, 2018-06-22 10:51:24.707]
[10:51:24] Statement - {conn-10003, pstmt-20008} Parameters : [null, 1, 手机, 2018-06-22 10:51:24.707]
[10:51:24] Statement - {conn-10003, pstmt-20008} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:51:24] Statement - {conn-10003, pstmt-20008} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:51:24] Statement - {conn-10003, pstmt-20008} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:51:24] Statement - {conn-10003, pstmt-20008} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:51:24.707')
[10:51:24] Statement - {conn-10003, pstmt-20008} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:51:24.707')
[10:51:24] Statement - {conn-10003, pstmt-20008} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:51:24.707')
[10:51:24] Statement - {conn-10003, pstmt-20008} executed. 9.064947 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:51:24] Statement - {conn-10003, pstmt-20008} executed. 9.064947 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:51:24] Statement - {conn-10003, pstmt-20008} executed. 9.064947 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:51:24] ResultSet - {conn-10003, pstmt-20008, rs-50011} open
[10:51:24] ResultSet - {conn-10003, pstmt-20008, rs-50011} open
[10:51:24] ResultSet - {conn-10003, pstmt-20008, rs-50011} Header: [GENERATED_KEY]
[10:51:24] ResultSet - {conn-10003, pstmt-20008, rs-50011} Header: [GENERATED_KEY]
[10:51:24] ResultSet - {conn-10003, pstmt-20008, rs-50011} Result: [53]
[10:51:24] ResultSet - {conn-10003, pstmt-20008, rs-50011} Result: [53]
[10:51:24] ResultSet - {conn-10003, pstmt-20008, rs-50011} closed
[10:51:24] ResultSet - {conn-10003, pstmt-20008, rs-50011} closed
[10:51:24] Statement - {conn-10003, pstmt-20008} clearParameters. 
[10:51:24] Statement - {conn-10003, pstmt-20008} clearParameters. 
[10:51:24] Statement - {conn-10003, pstmt-20008} clearParameters. 
[10:51:24] Connection - {conn-10003} pool-recycle
[10:51:24] Connection - {conn-10003} pool-recycle
[10:51:24] Connection - {conn-10003} pool-recycle
[10:51:24] Connection - {conn-10003} pool-connect
[10:51:24] Connection - {conn-10003} pool-connect
[10:51:24] Connection - {conn-10003} pool-connect
[10:51:24] Statement - {conn-10003, pstmt-20003} Parameters : [1, 2]
[10:51:24] Statement - {conn-10003, pstmt-20003} Parameters : [1, 2]
[10:51:24] Statement - {conn-10003, pstmt-20003} Parameters : [1, 2]
[10:51:24] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:51:24] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:51:24] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:51:24] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:51:24] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:51:24] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[10:51:24] Statement - {conn-10003, pstmt-20003} executed. 17.400301 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:24] Statement - {conn-10003, pstmt-20003} executed. 17.400301 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:24] Statement - {conn-10003, pstmt-20003} executed. 17.400301 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:24] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:51:24] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:51:24] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:51:24] Connection - {conn-10003} pool-recycle
[10:51:24] Connection - {conn-10003} pool-recycle
[10:51:24] Connection - {conn-10003} pool-recycle
[10:51:24] Connection - {conn-10003} pool-connect
[10:51:24] Connection - {conn-10003} pool-connect
[10:51:24] Connection - {conn-10003} pool-connect
[10:51:24] Statement - {conn-10003, pstmt-20008} Parameters : [null, 1, 手机, 2018-06-22 10:51:24.781]
[10:51:24] Statement - {conn-10003, pstmt-20008} Parameters : [null, 1, 手机, 2018-06-22 10:51:24.781]
[10:51:24] Statement - {conn-10003, pstmt-20008} Parameters : [null, 1, 手机, 2018-06-22 10:51:24.781]
[10:51:24] Statement - {conn-10003, pstmt-20008} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:51:24] Statement - {conn-10003, pstmt-20008} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:51:24] Statement - {conn-10003, pstmt-20008} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:51:24] Statement - {conn-10003, pstmt-20008} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:51:24.781')
[10:51:24] Statement - {conn-10003, pstmt-20008} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:51:24.781')
[10:51:24] Statement - {conn-10003, pstmt-20008} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:51:24.781')
[10:51:24] Statement - {conn-10003, pstmt-20008} executed. 7.447896 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:51:24] Statement - {conn-10003, pstmt-20008} executed. 7.447896 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:51:24] Statement - {conn-10003, pstmt-20008} executed. 7.447896 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:51:24] ResultSet - {conn-10003, pstmt-20008, rs-50012} open
[10:51:24] ResultSet - {conn-10003, pstmt-20008, rs-50012} open
[10:51:24] ResultSet - {conn-10003, pstmt-20008, rs-50012} Header: [GENERATED_KEY]
[10:51:24] ResultSet - {conn-10003, pstmt-20008, rs-50012} Header: [GENERATED_KEY]
[10:51:24] ResultSet - {conn-10003, pstmt-20008, rs-50012} Result: [54]
[10:51:24] ResultSet - {conn-10003, pstmt-20008, rs-50012} Result: [54]
[10:51:24] ResultSet - {conn-10003, pstmt-20008, rs-50012} closed
[10:51:24] ResultSet - {conn-10003, pstmt-20008, rs-50012} closed
[10:51:24] Statement - {conn-10003, pstmt-20008} clearParameters. 
[10:51:24] Statement - {conn-10003, pstmt-20008} clearParameters. 
[10:51:24] Statement - {conn-10003, pstmt-20008} clearParameters. 
[10:51:24] Connection - {conn-10003} pool-recycle
[10:51:24] Connection - {conn-10003} pool-recycle
[10:51:24] Connection - {conn-10003} pool-recycle
[10:51:25] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:51:25] Connection - {conn-10003} pool-connect
[10:51:25] Connection - {conn-10003} pool-connect
[10:51:25] Connection - {conn-10003} pool-connect
[10:51:25] Statement - {conn-10003, pstmt-20003} Parameters : [1, 3]
[10:51:25] Statement - {conn-10003, pstmt-20003} Parameters : [1, 3]
[10:51:25] Statement - {conn-10003, pstmt-20003} Parameters : [1, 3]
[10:51:25] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:51:25] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:51:25] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:51:25] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:51:25] Connection - {conn-10007} pool-connect
[10:51:25] Connection - {conn-10007} pool-connect
[10:51:25] Connection - {conn-10007} pool-connect
[10:51:25] Statement - {conn-10007, pstmt-20004} Parameters : [1, 3]
[10:51:25] Statement - {conn-10007, pstmt-20004} Parameters : [1, 3]
[10:51:25] Statement - {conn-10007, pstmt-20004} Parameters : [1, 3]
[10:51:25] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:51:25] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:51:25] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:51:25] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[10:51:25] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[10:51:25] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[10:51:25] Statement - {conn-10007, pstmt-20004} executed. 2.498461 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:25] Statement - {conn-10007, pstmt-20004} executed. 2.498461 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:25] Statement - {conn-10007, pstmt-20004} executed. 2.498461 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:25] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:51:25] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:51:25] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:51:25] Connection - {conn-10007} pool-recycle
[10:51:25] Connection - {conn-10007} pool-recycle
[10:51:25] Connection - {conn-10007} pool-recycle
[10:51:25] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[10:51:25] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[10:51:25] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[10:51:25] Statement - {conn-10003, pstmt-20003} executed. 10.759242 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:25] Statement - {conn-10003, pstmt-20003} executed. 10.759242 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:25] Statement - {conn-10003, pstmt-20003} executed. 10.759242 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:25] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:51:25] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:51:25] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:51:25] Connection - {conn-10003} pool-recycle
[10:51:25] Connection - {conn-10003} pool-recycle
[10:51:25] Connection - {conn-10003} pool-recycle
[10:51:25] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:51:25] Connection - {conn-10003} pool-connect
[10:51:25] Connection - {conn-10003} pool-connect
[10:51:25] Connection - {conn-10003} pool-connect
[10:51:25] Statement - {conn-10003, pstmt-20008} Parameters : [null, 1, 手机, 2018-06-22 10:51:25.068]
[10:51:25] Statement - {conn-10003, pstmt-20008} Parameters : [null, 1, 手机, 2018-06-22 10:51:25.068]
[10:51:25] Statement - {conn-10003, pstmt-20008} Parameters : [null, 1, 手机, 2018-06-22 10:51:25.068]
[10:51:25] Statement - {conn-10003, pstmt-20008} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:51:25] Statement - {conn-10003, pstmt-20008} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:51:25] Statement - {conn-10003, pstmt-20008} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:51:25] Statement - {conn-10003, pstmt-20008} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:51:25.068')
[10:51:25] Statement - {conn-10003, pstmt-20008} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:51:25.068')
[10:51:25] Statement - {conn-10003, pstmt-20008} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:51:25.068')
[10:51:25] Statement - {conn-10003, pstmt-20008} executed. 5.893328 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:51:25] Statement - {conn-10003, pstmt-20008} executed. 5.893328 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:51:25] Statement - {conn-10003, pstmt-20008} executed. 5.893328 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:51:25] ResultSet - {conn-10003, pstmt-20008, rs-50013} open
[10:51:25] ResultSet - {conn-10003, pstmt-20008, rs-50013} open
[10:51:25] ResultSet - {conn-10003, pstmt-20008, rs-50013} Header: [GENERATED_KEY]
[10:51:25] ResultSet - {conn-10003, pstmt-20008, rs-50013} Header: [GENERATED_KEY]
[10:51:25] ResultSet - {conn-10003, pstmt-20008, rs-50013} Result: [55]
[10:51:25] ResultSet - {conn-10003, pstmt-20008, rs-50013} Result: [55]
[10:51:25] ResultSet - {conn-10003, pstmt-20008, rs-50013} closed
[10:51:25] ResultSet - {conn-10003, pstmt-20008, rs-50013} closed
[10:51:25] Statement - {conn-10003, pstmt-20008} clearParameters. 
[10:51:25] Statement - {conn-10003, pstmt-20008} clearParameters. 
[10:51:25] Statement - {conn-10003, pstmt-20008} clearParameters. 
[10:51:25] Connection - {conn-10003} pool-recycle
[10:51:25] Connection - {conn-10003} pool-recycle
[10:51:25] Connection - {conn-10003} pool-recycle
[10:51:25] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:51:25] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:51:25] Connection - {conn-10003} pool-connect
[10:51:25] Connection - {conn-10003} pool-connect
[10:51:25] Connection - {conn-10003} pool-connect
[10:51:25] Statement - {conn-10003, pstmt-20003} Parameters : [1, 4]
[10:51:25] Statement - {conn-10003, pstmt-20003} Parameters : [1, 4]
[10:51:25] Statement - {conn-10003, pstmt-20003} Parameters : [1, 4]
[10:51:25] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:51:25] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:51:25] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[10:51:25] Connection - {conn-10007} pool-connect
[10:51:25] Connection - {conn-10007} pool-connect
[10:51:25] Connection - {conn-10007} pool-connect
[10:51:25] Statement - {conn-10007, pstmt-20004} Parameters : [1, 4]
[10:51:25] Statement - {conn-10007, pstmt-20004} Parameters : [1, 4]
[10:51:25] Statement - {conn-10007, pstmt-20004} Parameters : [1, 4]
[10:51:25] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:51:25] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:51:25] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:51:25] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:51:25] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:51:25] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:51:25] Statement - {conn-10003, pstmt-20003} executed. 5.554528 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:25] Statement - {conn-10003, pstmt-20003} executed. 5.554528 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:25] Statement - {conn-10003, pstmt-20003} executed. 5.554528 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:25] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:51:25] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:51:25] Statement - {conn-10003, pstmt-20003} clearParameters. 
[10:51:25] Connection - {conn-10003} pool-recycle
[10:51:25] Connection - {conn-10003} pool-recycle
[10:51:25] Connection - {conn-10003} pool-recycle
[10:51:25] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[10:51:25] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:51:25] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:51:25] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[10:51:25] Statement - {conn-10007, pstmt-20004} executed. 6.899249 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:25] Statement - {conn-10007, pstmt-20004} executed. 6.899249 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:25] Statement - {conn-10007, pstmt-20004} executed. 6.899249 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:25] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:51:25] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:51:25] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:51:25] Connection - {conn-10007} pool-recycle
[10:51:25] Connection - {conn-10007} pool-recycle
[10:51:25] Connection - {conn-10007} pool-recycle
[10:51:25] Connection - {conn-10007} pool-connect
[10:51:25] Connection - {conn-10007} pool-connect
[10:51:25] Connection - {conn-10007} pool-connect
[10:51:25] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:51:25.114]
[10:51:25] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:51:25.114]
[10:51:25] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:51:25.114]
[10:51:25] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:51:25] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:51:25] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:51:25] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:51:25.114')
[10:51:25] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:51:25.114')
[10:51:25] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:51:25.114')
[10:51:25] Statement - {conn-10007, pstmt-20009} executed. 3.596976 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:51:25] Statement - {conn-10007, pstmt-20009} executed. 3.596976 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:51:25] Statement - {conn-10007, pstmt-20009} executed. 3.596976 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:51:25] ResultSet - {conn-10007, pstmt-20009, rs-50014} open
[10:51:25] ResultSet - {conn-10007, pstmt-20009, rs-50014} open
[10:51:25] ResultSet - {conn-10007, pstmt-20009, rs-50014} Header: [GENERATED_KEY]
[10:51:25] ResultSet - {conn-10007, pstmt-20009, rs-50014} Header: [GENERATED_KEY]
[10:51:25] ResultSet - {conn-10007, pstmt-20009, rs-50014} Result: [56]
[10:51:25] ResultSet - {conn-10007, pstmt-20009, rs-50014} Result: [56]
[10:51:25] ResultSet - {conn-10007, pstmt-20009, rs-50014} closed
[10:51:25] ResultSet - {conn-10007, pstmt-20009, rs-50014} closed
[10:51:25] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:51:25] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:51:25] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:51:25] Connection - {conn-10007} pool-recycle
[10:51:25] Connection - {conn-10007} pool-recycle
[10:51:25] Connection - {conn-10007} pool-recycle
[10:51:25] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[10:51:25] Connection - {conn-10007} pool-connect
[10:51:25] Connection - {conn-10007} pool-connect
[10:51:25] Connection - {conn-10007} pool-connect
[10:51:25] Statement - {conn-10007, pstmt-20004} Parameters : [1, 5]
[10:51:25] Statement - {conn-10007, pstmt-20004} Parameters : [1, 5]
[10:51:25] Statement - {conn-10007, pstmt-20004} Parameters : [1, 5]
[10:51:25] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:51:25] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:51:25] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[10:51:25] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[10:51:25] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[10:51:25] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[10:51:25] Statement - {conn-10007, pstmt-20004} executed. 14.093023 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:25] Statement - {conn-10007, pstmt-20004} executed. 14.093023 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:25] Statement - {conn-10007, pstmt-20004} executed. 14.093023 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[10:51:25] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:51:25] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:51:25] Statement - {conn-10007, pstmt-20004} clearParameters. 
[10:51:25] Connection - {conn-10007} pool-recycle
[10:51:25] Connection - {conn-10007} pool-recycle
[10:51:25] Connection - {conn-10007} pool-recycle
[10:51:25] Connection - {conn-10007} pool-connect
[10:51:25] Connection - {conn-10007} pool-connect
[10:51:25] Connection - {conn-10007} pool-connect
[10:51:25] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:51:25.27]
[10:51:25] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:51:25.27]
[10:51:25] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 10:51:25.27]
[10:51:25] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:51:25] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:51:25] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[10:51:25] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:51:25.270')
[10:51:25] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:51:25.270')
[10:51:25] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 10:51:25.270')
[10:51:25] Statement - {conn-10007, pstmt-20009} executed. 32.014831 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:51:25] Statement - {conn-10007, pstmt-20009} executed. 32.014831 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:51:25] Statement - {conn-10007, pstmt-20009} executed. 32.014831 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[10:51:25] ResultSet - {conn-10007, pstmt-20009, rs-50015} open
[10:51:25] ResultSet - {conn-10007, pstmt-20009, rs-50015} open
[10:51:25] ResultSet - {conn-10007, pstmt-20009, rs-50015} Header: [GENERATED_KEY]
[10:51:25] ResultSet - {conn-10007, pstmt-20009, rs-50015} Header: [GENERATED_KEY]
[10:51:25] ResultSet - {conn-10007, pstmt-20009, rs-50015} Result: [57]
[10:51:25] ResultSet - {conn-10007, pstmt-20009, rs-50015} Result: [57]
[10:51:25] ResultSet - {conn-10007, pstmt-20009, rs-50015} closed
[10:51:25] ResultSet - {conn-10007, pstmt-20009, rs-50015} closed
[10:51:25] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:51:25] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:51:25] Statement - {conn-10007, pstmt-20009} clearParameters. 
[10:51:25] Connection - {conn-10007} pool-recycle
[10:51:25] Connection - {conn-10007} pool-recycle
[10:51:25] Connection - {conn-10007} pool-recycle
[10:52:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:52:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:53:57] Connection - {conn-10005} closed
[10:53:57] Connection - {conn-10005} closed
[10:53:57] Connection - {conn-10005} closed
[10:53:57] Connection - {conn-10002} closed
[10:53:57] Connection - {conn-10002} closed
[10:53:57] Connection - {conn-10002} closed
[10:53:57] Connection - {conn-10004} closed
[10:53:57] Connection - {conn-10004} closed
[10:53:57] Connection - {conn-10004} closed
[10:53:57] Connection - {conn-10001} closed
[10:53:57] Connection - {conn-10001} closed
[10:53:57] Connection - {conn-10001} closed
[10:53:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:53:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:54:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:54:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:55:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:55:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:56:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:56:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:57:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:57:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:58:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:58:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[10:59:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[10:59:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:00:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:00:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:30] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:30] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:30] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:30] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:30] Connection - {conn-10007} pool-connect
[11:01:30] Connection - {conn-10007} pool-connect
[11:01:30] Connection - {conn-10007} pool-connect
[11:01:30] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[11:01:30] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[11:01:30] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[11:01:30] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[11:01:30] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[11:01:30] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[11:01:30] Connection - {conn-10003} pool-connect
[11:01:30] Connection - {conn-10003} pool-connect
[11:01:30] Connection - {conn-10003} pool-connect
[11:01:30] Connection - {conn-10006} pool-connect
[11:01:30] Connection - {conn-10006} pool-connect
[11:01:30] Connection - {conn-10006} pool-connect
[11:01:30] Statement - {conn-10006, pstmt-20001} Parameters : [1, 0]
[11:01:30] Statement - {conn-10006, pstmt-20001} Parameters : [1, 0]
[11:01:30] Statement - {conn-10006, pstmt-20001} Parameters : [1, 0]
[11:01:30] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:30] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:30] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:30] Statement - {conn-10003, pstmt-20003} Parameters : [1, 0]
[11:01:30] Statement - {conn-10003, pstmt-20003} Parameters : [1, 0]
[11:01:30] Statement - {conn-10003, pstmt-20003} Parameters : [1, 0]
[11:01:30] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[11:01:30] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[11:01:30] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[11:01:30] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:01:30] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:01:30] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:01:30] Statement - {conn-10006, pstmt-20001} executed. 2.132121 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:30] Statement - {conn-10006, pstmt-20001} executed. 2.132121 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:30] Statement - {conn-10006, pstmt-20001} executed. 2.132121 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:30] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:30] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:30] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:30] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:30] Connection - {conn-10006} pool-recycle
[11:01:30] Connection - {conn-10006} pool-recycle
[11:01:30] Connection - {conn-10006} pool-recycle
[11:01:30] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:01:30] Connection - {conn-10006} pool-connect
[11:01:30] Connection - {conn-10006} pool-connect
[11:01:30] Connection - {conn-10006} pool-connect
[11:01:30] Statement - {conn-10006, pstmt-20001} Parameters : [1, 0]
[11:01:30] Statement - {conn-10006, pstmt-20001} Parameters : [1, 0]
[11:01:30] Statement - {conn-10006, pstmt-20001} Parameters : [1, 0]
[11:01:30] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:30] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:30] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:30] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:01:30] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:01:30] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:01:30] Statement - {conn-10006, pstmt-20001} executed. 86.338243 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:30] Statement - {conn-10006, pstmt-20001} executed. 86.338243 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:30] Statement - {conn-10006, pstmt-20001} executed. 86.338243 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:30] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:30] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:30] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:30] Connection - {conn-10006} pool-recycle
[11:01:30] Connection - {conn-10006} pool-recycle
[11:01:30] Connection - {conn-10006} pool-recycle
[11:01:30] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:01:30] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:01:30] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:01:30] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:01:30] Statement - {conn-10003, pstmt-20003} executed. 96.192536 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:30] Statement - {conn-10003, pstmt-20003} executed. 96.192536 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:30] Statement - {conn-10003, pstmt-20003} executed. 96.192536 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:30] Statement - {conn-10003, pstmt-20003} clearParameters. 
[11:01:30] Statement - {conn-10003, pstmt-20003} clearParameters. 
[11:01:30] Statement - {conn-10003, pstmt-20003} clearParameters. 
[11:01:30] Connection - {conn-10003} pool-recycle
[11:01:30] Connection - {conn-10003} pool-recycle
[11:01:30] Connection - {conn-10003} pool-recycle
[11:01:30] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:01:30] Connection - {conn-10008} connected
[11:01:30] Connection - {conn-10008} connected
[11:01:30] Connection - {conn-10008} connected
[11:01:30] Connection - {conn-10008} pool-connect
[11:01:30] Connection - {conn-10008} pool-connect
[11:01:30] Connection - {conn-10008} pool-connect
[11:01:30] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:01:30] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:01:30] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:01:30] Statement - {conn-10007, pstmt-20004} executed. 172.236399 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:30] Statement - {conn-10007, pstmt-20004} executed. 172.236399 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:30] Statement - {conn-10007, pstmt-20004} executed. 172.236399 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:30] Statement - {conn-10007, pstmt-20004} clearParameters. 
[11:01:30] Statement - {conn-10007, pstmt-20004} clearParameters. 
[11:01:30] Statement - {conn-10007, pstmt-20004} clearParameters. 
[11:01:30] Connection - {conn-10007} pool-recycle
[11:01:30] Connection - {conn-10007} pool-recycle
[11:01:30] Connection - {conn-10007} pool-recycle
[11:01:30] Statement - {conn-10008, pstmt-20011} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:30] Statement - {conn-10008, pstmt-20011} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:30] Statement - {conn-10008, pstmt-20011} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:30] Statement - {conn-10008, pstmt-20011} Parameters : [1, 0]
[11:01:30] Statement - {conn-10008, pstmt-20011} Parameters : [1, 0]
[11:01:30] Statement - {conn-10008, pstmt-20011} Parameters : [1, 0]
[11:01:30] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:30] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:30] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:30] Connection - {conn-10007} pool-connect
[11:01:30] Connection - {conn-10007} pool-connect
[11:01:30] Connection - {conn-10007} pool-connect
[11:01:30] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 11:01:30.618]
[11:01:30] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 11:01:30.618]
[11:01:30] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 11:01:30.618]
[11:01:30] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:30] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:30] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:30] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:01:30] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:01:30] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:01:30] Statement - {conn-10008, pstmt-20011} executed. 33.510896 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:30] Statement - {conn-10008, pstmt-20011} executed. 33.510896 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:30] Statement - {conn-10008, pstmt-20011} executed. 33.510896 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:30] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:30] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:30] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:30] PreparedStatementPool - {conn-10008, pstmt-20011} enter cache
[11:01:30] Connection - {conn-10008} pool-recycle
[11:01:30] Connection - {conn-10008} pool-recycle
[11:01:30] Connection - {conn-10008} pool-recycle
[11:01:30] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:01:30] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:30.618')
[11:01:30] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:30.618')
[11:01:30] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:30.618')
[11:01:30] Statement - {conn-10007, pstmt-20009} executed. 297.388124 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:30] Statement - {conn-10007, pstmt-20009} executed. 297.388124 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:30] Statement - {conn-10007, pstmt-20009} executed. 297.388124 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:30] StatFilter - slow sql 297 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[null,1,"手机","2018-06-22 11:01:30"]
[11:01:30] ResultSet - {conn-10007, pstmt-20009, rs-50016} open
[11:01:30] ResultSet - {conn-10007, pstmt-20009, rs-50016} open
[11:01:30] ResultSet - {conn-10007, pstmt-20009, rs-50016} Header: [GENERATED_KEY]
[11:01:30] ResultSet - {conn-10007, pstmt-20009, rs-50016} Header: [GENERATED_KEY]
[11:01:30] ResultSet - {conn-10007, pstmt-20009, rs-50016} Result: [58]
[11:01:30] ResultSet - {conn-10007, pstmt-20009, rs-50016} Result: [58]
[11:01:30] ResultSet - {conn-10007, pstmt-20009, rs-50016} closed
[11:01:30] ResultSet - {conn-10007, pstmt-20009, rs-50016} closed
[11:01:30] Statement - {conn-10007, pstmt-20009} clearParameters. 
[11:01:30] Statement - {conn-10007, pstmt-20009} clearParameters. 
[11:01:30] Statement - {conn-10007, pstmt-20009} clearParameters. 
[11:01:30] Connection - {conn-10007} pool-recycle
[11:01:30] Connection - {conn-10007} pool-recycle
[11:01:30] Connection - {conn-10007} pool-recycle
[11:01:31] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:31] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:31] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:31] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:31] Connection - {conn-10007} pool-connect
[11:01:31] Connection - {conn-10007} pool-connect
[11:01:31] Connection - {conn-10007} pool-connect
[11:01:31] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:31] Statement - {conn-10007, pstmt-20004} Parameters : [1, 1]
[11:01:31] Statement - {conn-10007, pstmt-20004} Parameters : [1, 1]
[11:01:31] Statement - {conn-10007, pstmt-20004} Parameters : [1, 1]
[11:01:31] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[11:01:31] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[11:01:31] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[11:01:31] Connection - {conn-10008} pool-connect
[11:01:31] Connection - {conn-10008} pool-connect
[11:01:31] Connection - {conn-10008} pool-connect
[11:01:31] Statement - {conn-10008, pstmt-20011} Parameters : [1, 1]
[11:01:31] Statement - {conn-10008, pstmt-20011} Parameters : [1, 1]
[11:01:31] Statement - {conn-10008, pstmt-20011} Parameters : [1, 1]
[11:01:31] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:31] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:31] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:31] Connection - {conn-10003} pool-connect
[11:01:31] Connection - {conn-10003} pool-connect
[11:01:31] Connection - {conn-10003} pool-connect
[11:01:31] Statement - {conn-10003, pstmt-20003} Parameters : [1, 1]
[11:01:31] Statement - {conn-10003, pstmt-20003} Parameters : [1, 1]
[11:01:31] Statement - {conn-10003, pstmt-20003} Parameters : [1, 1]
[11:01:31] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[11:01:31] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[11:01:31] Statement - {conn-10003, pstmt-20003} Types : [INTEGER, INTEGER]
[11:01:31] Connection - {conn-10006} pool-connect
[11:01:31] Connection - {conn-10006} pool-connect
[11:01:31] Connection - {conn-10006} pool-connect
[11:01:31] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:01:31] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:01:31] Statement - {conn-10003, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:01:31] Statement - {conn-10003, pstmt-20003} executed. 3.107891 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:31] Statement - {conn-10003, pstmt-20003} executed. 3.107891 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:31] Statement - {conn-10003, pstmt-20003} executed. 3.107891 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:31] Statement - {conn-10003, pstmt-20003} clearParameters. 
[11:01:31] Statement - {conn-10003, pstmt-20003} clearParameters. 
[11:01:31] Statement - {conn-10003, pstmt-20003} clearParameters. 
[11:01:31] Statement - {conn-10006, pstmt-20001} Parameters : [1, 1]
[11:01:31] Statement - {conn-10006, pstmt-20001} Parameters : [1, 1]
[11:01:31] Statement - {conn-10006, pstmt-20001} Parameters : [1, 1]
[11:01:31] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:31] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:31] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:31] Connection - {conn-10003} pool-recycle
[11:01:31] Connection - {conn-10003} pool-recycle
[11:01:31] Connection - {conn-10003} pool-recycle
[11:01:31] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:01:31] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:01:31] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:01:31] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:01:31] Statement - {conn-10006, pstmt-20001} executed. 1.011355 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:31] Statement - {conn-10006, pstmt-20001} executed. 1.011355 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:31] Statement - {conn-10006, pstmt-20001} executed. 1.011355 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:31] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:31] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:31] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:31] Connection - {conn-10006} pool-recycle
[11:01:31] Connection - {conn-10006} pool-recycle
[11:01:31] Connection - {conn-10006} pool-recycle
[11:01:31] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:01:31] Connection - {conn-10006} pool-connect
[11:01:31] Connection - {conn-10006} pool-connect
[11:01:31] Connection - {conn-10006} pool-connect
[11:01:31] Statement - {conn-10006, pstmt-20001} Parameters : [1, 1]
[11:01:31] Statement - {conn-10006, pstmt-20001} Parameters : [1, 1]
[11:01:31] Statement - {conn-10006, pstmt-20001} Parameters : [1, 1]
[11:01:31] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:31] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:31] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:31] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:01:31] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:01:31] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:01:31] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:01:31] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:01:31] Statement - {conn-10006, pstmt-20001} executed. 20.29463 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:31] Statement - {conn-10006, pstmt-20001} executed. 20.29463 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:31] Statement - {conn-10006, pstmt-20001} executed. 20.29463 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:31] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:31] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:31] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:31] Connection - {conn-10006} pool-recycle
[11:01:31] Connection - {conn-10006} pool-recycle
[11:01:31] Connection - {conn-10006} pool-recycle
[11:01:31] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:01:31] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:01:31] Statement - {conn-10007, pstmt-20004} executed. 62.016824 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:31] Statement - {conn-10007, pstmt-20004} executed. 62.016824 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:31] Statement - {conn-10007, pstmt-20004} executed. 62.016824 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:31] Statement - {conn-10007, pstmt-20004} clearParameters. 
[11:01:31] Statement - {conn-10007, pstmt-20004} clearParameters. 
[11:01:31] Statement - {conn-10007, pstmt-20004} clearParameters. 
[11:01:31] Connection - {conn-10007} pool-recycle
[11:01:31] Connection - {conn-10007} pool-recycle
[11:01:31] Connection - {conn-10007} pool-recycle
[11:01:31] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:01:31] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:01:31] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:01:31] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:01:31] Statement - {conn-10008, pstmt-20011} executed. 65.225173 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:31] Statement - {conn-10008, pstmt-20011} executed. 65.225173 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:31] Statement - {conn-10008, pstmt-20011} executed. 65.225173 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:31] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:31] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:31] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:31] Connection - {conn-10008} pool-recycle
[11:01:31] Connection - {conn-10008} pool-recycle
[11:01:31] Connection - {conn-10008} pool-recycle
[11:01:31] Connection - {conn-10008} pool-connect
[11:01:31] Connection - {conn-10008} pool-connect
[11:01:31] Connection - {conn-10008} pool-connect
[11:01:31] Statement - {conn-10008, pstmt-20012} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:31] Statement - {conn-10008, pstmt-20012} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:31] Statement - {conn-10008, pstmt-20012} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:31] Statement - {conn-10008, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 11:01:31.128]
[11:01:31] Statement - {conn-10008, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 11:01:31.128]
[11:01:31] Statement - {conn-10008, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 11:01:31.128]
[11:01:31] Statement - {conn-10008, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:31] Statement - {conn-10008, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:31] Statement - {conn-10008, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:31] Statement - {conn-10008, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:31.128')
[11:01:31] Statement - {conn-10008, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:31.128')
[11:01:31] Statement - {conn-10008, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:31.128')
[11:01:31] Statement - {conn-10008, pstmt-20012} executed. 52.893385 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:31] Statement - {conn-10008, pstmt-20012} executed. 52.893385 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:31] Statement - {conn-10008, pstmt-20012} executed. 52.893385 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:31] ResultSet - {conn-10008, pstmt-20012, rs-50017} open
[11:01:31] ResultSet - {conn-10008, pstmt-20012, rs-50017} open
[11:01:31] ResultSet - {conn-10008, pstmt-20012, rs-50017} Header: [GENERATED_KEY]
[11:01:31] ResultSet - {conn-10008, pstmt-20012, rs-50017} Header: [GENERATED_KEY]
[11:01:31] ResultSet - {conn-10008, pstmt-20012, rs-50017} Result: [59]
[11:01:31] ResultSet - {conn-10008, pstmt-20012, rs-50017} Result: [59]
[11:01:31] ResultSet - {conn-10008, pstmt-20012, rs-50017} closed
[11:01:31] ResultSet - {conn-10008, pstmt-20012, rs-50017} closed
[11:01:31] Statement - {conn-10008, pstmt-20012} clearParameters. 
[11:01:31] Statement - {conn-10008, pstmt-20012} clearParameters. 
[11:01:31] Statement - {conn-10008, pstmt-20012} clearParameters. 
[11:01:31] PreparedStatementPool - {conn-10008, pstmt-20012} enter cache
[11:01:31] Connection - {conn-10008} pool-recycle
[11:01:31] Connection - {conn-10008} pool-recycle
[11:01:31] Connection - {conn-10008} pool-recycle
[11:01:32] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:32] Connection - {conn-10008} pool-connect
[11:01:32] Connection - {conn-10008} pool-connect
[11:01:32] Connection - {conn-10008} pool-connect
[11:01:32] Statement - {conn-10008, pstmt-20011} Parameters : [1, 2]
[11:01:32] Statement - {conn-10008, pstmt-20011} Parameters : [1, 2]
[11:01:32] Statement - {conn-10008, pstmt-20011} Parameters : [1, 2]
[11:01:32] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:32] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:32] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:32] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[11:01:32] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[11:01:32] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[11:01:32] Statement - {conn-10008, pstmt-20011} executed. 29.071027 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:32] Statement - {conn-10008, pstmt-20011} executed. 29.071027 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:32] Statement - {conn-10008, pstmt-20011} executed. 29.071027 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:32] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:32] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:32] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:32] Connection - {conn-10008} pool-recycle
[11:01:32] Connection - {conn-10008} pool-recycle
[11:01:32] Connection - {conn-10008} pool-recycle
[11:01:32] Connection - {conn-10008} pool-connect
[11:01:32] Connection - {conn-10008} pool-connect
[11:01:32] Connection - {conn-10008} pool-connect
[11:01:32] Statement - {conn-10008, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 11:01:32.067]
[11:01:32] Statement - {conn-10008, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 11:01:32.067]
[11:01:32] Statement - {conn-10008, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 11:01:32.067]
[11:01:32] Statement - {conn-10008, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:32] Statement - {conn-10008, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:32] Statement - {conn-10008, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:32] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:32] Connection - {conn-10007} pool-connect
[11:01:32] Connection - {conn-10007} pool-connect
[11:01:32] Connection - {conn-10007} pool-connect
[11:01:32] Statement - {conn-10007, pstmt-20004} Parameters : [1, 3]
[11:01:32] Statement - {conn-10007, pstmt-20004} Parameters : [1, 3]
[11:01:32] Statement - {conn-10007, pstmt-20004} Parameters : [1, 3]
[11:01:32] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[11:01:32] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[11:01:32] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[11:01:32] Statement - {conn-10008, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:32.067')
[11:01:32] Statement - {conn-10008, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:32.067')
[11:01:32] Statement - {conn-10008, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:32.067')
[11:01:32] Statement - {conn-10008, pstmt-20012} executed. 54.371754 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:32] Statement - {conn-10008, pstmt-20012} executed. 54.371754 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:32] Statement - {conn-10008, pstmt-20012} executed. 54.371754 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:32] ResultSet - {conn-10008, pstmt-20012, rs-50018} open
[11:01:32] ResultSet - {conn-10008, pstmt-20012, rs-50018} open
[11:01:32] ResultSet - {conn-10008, pstmt-20012, rs-50018} Header: [GENERATED_KEY]
[11:01:32] ResultSet - {conn-10008, pstmt-20012, rs-50018} Header: [GENERATED_KEY]
[11:01:32] ResultSet - {conn-10008, pstmt-20012, rs-50018} Result: [60]
[11:01:32] ResultSet - {conn-10008, pstmt-20012, rs-50018} Result: [60]
[11:01:32] ResultSet - {conn-10008, pstmt-20012, rs-50018} closed
[11:01:32] ResultSet - {conn-10008, pstmt-20012, rs-50018} closed
[11:01:32] Statement - {conn-10008, pstmt-20012} clearParameters. 
[11:01:32] Statement - {conn-10008, pstmt-20012} clearParameters. 
[11:01:32] Statement - {conn-10008, pstmt-20012} clearParameters. 
[11:01:32] Connection - {conn-10008} pool-recycle
[11:01:32] Connection - {conn-10008} pool-recycle
[11:01:32] Connection - {conn-10008} pool-recycle
[11:01:32] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:32] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:01:32] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:01:32] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:01:32] Statement - {conn-10007, pstmt-20004} executed. 10.36098 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:32] Statement - {conn-10007, pstmt-20004} executed. 10.36098 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:32] Statement - {conn-10007, pstmt-20004} executed. 10.36098 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:32] Statement - {conn-10007, pstmt-20004} clearParameters. 
[11:01:32] Statement - {conn-10007, pstmt-20004} clearParameters. 
[11:01:32] Statement - {conn-10007, pstmt-20004} clearParameters. 
[11:01:32] Connection - {conn-10007} pool-recycle
[11:01:32] Connection - {conn-10007} pool-recycle
[11:01:32] Connection - {conn-10007} pool-recycle
[11:01:32] Connection - {conn-10007} pool-connect
[11:01:32] Connection - {conn-10007} pool-connect
[11:01:32] Connection - {conn-10007} pool-connect
[11:01:32] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 11:01:32.136]
[11:01:32] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 11:01:32.136]
[11:01:32] Statement - {conn-10007, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 11:01:32.136]
[11:01:32] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:32] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:32] Statement - {conn-10007, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:32] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:32] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:32.136')
[11:01:32] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:32.136')
[11:01:32] Statement - {conn-10007, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:32.136')
[11:01:32] Statement - {conn-10007, pstmt-20009} executed. 61.262445 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:32] Statement - {conn-10007, pstmt-20009} executed. 61.262445 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:32] Statement - {conn-10007, pstmt-20009} executed. 61.262445 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:32] ResultSet - {conn-10007, pstmt-20009, rs-50019} open
[11:01:32] ResultSet - {conn-10007, pstmt-20009, rs-50019} open
[11:01:32] ResultSet - {conn-10007, pstmt-20009, rs-50019} Header: [GENERATED_KEY]
[11:01:32] ResultSet - {conn-10007, pstmt-20009, rs-50019} Header: [GENERATED_KEY]
[11:01:32] ResultSet - {conn-10007, pstmt-20009, rs-50019} Result: [61]
[11:01:32] ResultSet - {conn-10007, pstmt-20009, rs-50019} Result: [61]
[11:01:32] ResultSet - {conn-10007, pstmt-20009, rs-50019} closed
[11:01:32] ResultSet - {conn-10007, pstmt-20009, rs-50019} closed
[11:01:32] Statement - {conn-10007, pstmt-20009} clearParameters. 
[11:01:32] Statement - {conn-10007, pstmt-20009} clearParameters. 
[11:01:32] Statement - {conn-10007, pstmt-20009} clearParameters. 
[11:01:32] Connection - {conn-10008} pool-connect
[11:01:32] Connection - {conn-10008} pool-connect
[11:01:32] Connection - {conn-10008} pool-connect
[11:01:32] Statement - {conn-10008, pstmt-20011} Parameters : [1, 4]
[11:01:32] Statement - {conn-10008, pstmt-20011} Parameters : [1, 4]
[11:01:32] Statement - {conn-10008, pstmt-20011} Parameters : [1, 4]
[11:01:32] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:32] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:32] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:32] Connection - {conn-10007} pool-recycle
[11:01:32] Connection - {conn-10007} pool-recycle
[11:01:32] Connection - {conn-10007} pool-recycle
[11:01:32] Connection - {conn-10006} pool-connect
[11:01:32] Connection - {conn-10006} pool-connect
[11:01:32] Connection - {conn-10006} pool-connect
[11:01:32] Statement - {conn-10006, pstmt-20001} Parameters : [1, 4]
[11:01:32] Statement - {conn-10006, pstmt-20001} Parameters : [1, 4]
[11:01:32] Statement - {conn-10006, pstmt-20001} Parameters : [1, 4]
[11:01:32] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:32] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:32] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:32] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[11:01:32] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[11:01:32] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[11:01:32] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:32] Statement - {conn-10006, pstmt-20001} executed. 0.847383 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:32] Statement - {conn-10006, pstmt-20001} executed. 0.847383 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:32] Statement - {conn-10006, pstmt-20001} executed. 0.847383 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:32] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:32] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:32] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:32] Connection - {conn-10006} pool-recycle
[11:01:32] Connection - {conn-10006} pool-recycle
[11:01:32] Connection - {conn-10006} pool-recycle
[11:01:32] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:01:32] Connection - {conn-10006} pool-connect
[11:01:32] Connection - {conn-10006} pool-connect
[11:01:32] Connection - {conn-10006} pool-connect
[11:01:32] Statement - {conn-10006, pstmt-20001} Parameters : [1, 4]
[11:01:32] Statement - {conn-10006, pstmt-20001} Parameters : [1, 4]
[11:01:32] Statement - {conn-10006, pstmt-20001} Parameters : [1, 4]
[11:01:32] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:32] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:32] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:32] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[11:01:32] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[11:01:32] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[11:01:32] Statement - {conn-10006, pstmt-20001} executed. 11.763865 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:32] Statement - {conn-10006, pstmt-20001} executed. 11.763865 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:32] Statement - {conn-10006, pstmt-20001} executed. 11.763865 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:32] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:32] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:32] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:32] Connection - {conn-10006} pool-recycle
[11:01:32] Connection - {conn-10006} pool-recycle
[11:01:32] Connection - {conn-10006} pool-recycle
[11:01:32] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[11:01:32] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[11:01:32] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[11:01:32] Statement - {conn-10008, pstmt-20011} executed. 28.691511 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:32] Statement - {conn-10008, pstmt-20011} executed. 28.691511 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:32] Statement - {conn-10008, pstmt-20011} executed. 28.691511 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:32] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:32] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:32] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:32] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:01:32] Connection - {conn-10008} pool-recycle
[11:01:32] Connection - {conn-10008} pool-recycle
[11:01:32] Connection - {conn-10008} pool-recycle
[11:01:32] Connection - {conn-10008} pool-connect
[11:01:32] Connection - {conn-10008} pool-connect
[11:01:32] Connection - {conn-10008} pool-connect
[11:01:32] Statement - {conn-10008, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 11:01:32.248]
[11:01:32] Statement - {conn-10008, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 11:01:32.248]
[11:01:32] Statement - {conn-10008, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 11:01:32.248]
[11:01:32] Statement - {conn-10008, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:32] Statement - {conn-10008, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:32] Statement - {conn-10008, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:32] Statement - {conn-10008, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:32.248')
[11:01:32] Statement - {conn-10008, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:32.248')
[11:01:32] Statement - {conn-10008, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:32.248')
[11:01:32] Statement - {conn-10008, pstmt-20012} executed. 121.757295 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:32] Statement - {conn-10008, pstmt-20012} executed. 121.757295 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:32] Statement - {conn-10008, pstmt-20012} executed. 121.757295 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:32] ResultSet - {conn-10008, pstmt-20012, rs-50020} open
[11:01:32] ResultSet - {conn-10008, pstmt-20012, rs-50020} open
[11:01:32] ResultSet - {conn-10008, pstmt-20012, rs-50020} Header: [GENERATED_KEY]
[11:01:32] ResultSet - {conn-10008, pstmt-20012, rs-50020} Header: [GENERATED_KEY]
[11:01:32] ResultSet - {conn-10008, pstmt-20012, rs-50020} Result: [62]
[11:01:32] ResultSet - {conn-10008, pstmt-20012, rs-50020} Result: [62]
[11:01:32] ResultSet - {conn-10008, pstmt-20012, rs-50020} closed
[11:01:32] ResultSet - {conn-10008, pstmt-20012, rs-50020} closed
[11:01:32] Statement - {conn-10008, pstmt-20012} clearParameters. 
[11:01:32] Statement - {conn-10008, pstmt-20012} clearParameters. 
[11:01:32] Statement - {conn-10008, pstmt-20012} clearParameters. 
[11:01:32] Connection - {conn-10008} pool-recycle
[11:01:32] Connection - {conn-10008} pool-recycle
[11:01:32] Connection - {conn-10008} pool-recycle
[11:01:33] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:33] Connection - {conn-10008} pool-connect
[11:01:33] Connection - {conn-10008} pool-connect
[11:01:33] Connection - {conn-10008} pool-connect
[11:01:33] Statement - {conn-10008, pstmt-20011} Parameters : [1, 5]
[11:01:33] Statement - {conn-10008, pstmt-20011} Parameters : [1, 5]
[11:01:33] Statement - {conn-10008, pstmt-20011} Parameters : [1, 5]
[11:01:33] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:33] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:33] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:33] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:33] Connection - {conn-10006} pool-connect
[11:01:33] Connection - {conn-10006} pool-connect
[11:01:33] Connection - {conn-10006} pool-connect
[11:01:33] Statement - {conn-10006, pstmt-20001} Parameters : [1, 5]
[11:01:33] Statement - {conn-10006, pstmt-20001} Parameters : [1, 5]
[11:01:33] Statement - {conn-10006, pstmt-20001} Parameters : [1, 5]
[11:01:33] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:33] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:33] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:33] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[11:01:33] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[11:01:33] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[11:01:33] Statement - {conn-10006, pstmt-20001} executed. 1.348413 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:33] Statement - {conn-10006, pstmt-20001} executed. 1.348413 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:33] Statement - {conn-10006, pstmt-20001} executed. 1.348413 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:33] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:33] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:33] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:33] Connection - {conn-10006} pool-recycle
[11:01:33] Connection - {conn-10006} pool-recycle
[11:01:33] Connection - {conn-10006} pool-recycle
[11:01:33] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:01:33] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[11:01:33] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[11:01:33] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[11:01:33] Statement - {conn-10008, pstmt-20011} executed. 36.084463 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:33] Statement - {conn-10008, pstmt-20011} executed. 36.084463 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:33] Statement - {conn-10008, pstmt-20011} executed. 36.084463 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:33] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:33] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:33] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:33] Connection - {conn-10008} pool-recycle
[11:01:33] Connection - {conn-10008} pool-recycle
[11:01:33] Connection - {conn-10008} pool-recycle
[11:01:33] Connection - {conn-10008} pool-connect
[11:01:33] Connection - {conn-10008} pool-connect
[11:01:33] Connection - {conn-10008} pool-connect
[11:01:33] Statement - {conn-10008, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 11:01:33.447]
[11:01:33] Statement - {conn-10008, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 11:01:33.447]
[11:01:33] Statement - {conn-10008, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 11:01:33.447]
[11:01:33] Statement - {conn-10008, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:33] Statement - {conn-10008, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:33] Statement - {conn-10008, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:33] Statement - {conn-10008, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:33.447')
[11:01:33] Statement - {conn-10008, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:33.447')
[11:01:33] Statement - {conn-10008, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:33.447')
[11:01:33] Statement - {conn-10008, pstmt-20012} executed. 1.740718 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:33] Statement - {conn-10008, pstmt-20012} executed. 1.740718 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:33] Statement - {conn-10008, pstmt-20012} executed. 1.740718 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:33] ResultSet - {conn-10008, pstmt-20012, rs-50021} open
[11:01:33] ResultSet - {conn-10008, pstmt-20012, rs-50021} open
[11:01:33] ResultSet - {conn-10008, pstmt-20012, rs-50021} Header: [GENERATED_KEY]
[11:01:33] ResultSet - {conn-10008, pstmt-20012, rs-50021} Header: [GENERATED_KEY]
[11:01:33] ResultSet - {conn-10008, pstmt-20012, rs-50021} Result: [63]
[11:01:33] ResultSet - {conn-10008, pstmt-20012, rs-50021} Result: [63]
[11:01:33] ResultSet - {conn-10008, pstmt-20012, rs-50021} closed
[11:01:33] ResultSet - {conn-10008, pstmt-20012, rs-50021} closed
[11:01:33] Statement - {conn-10008, pstmt-20012} clearParameters. 
[11:01:33] Statement - {conn-10008, pstmt-20012} clearParameters. 
[11:01:33] Statement - {conn-10008, pstmt-20012} clearParameters. 
[11:01:33] Connection - {conn-10008} pool-recycle
[11:01:33] Connection - {conn-10008} pool-recycle
[11:01:33] Connection - {conn-10008} pool-recycle
[11:01:34] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:34] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:34] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:34] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:34] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:34] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:34] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:01:34] Connection - {conn-10008} pool-connect
[11:01:34] Connection - {conn-10008} pool-connect
[11:01:34] Connection - {conn-10008} pool-connect
[11:01:34] Statement - {conn-10008, pstmt-20011} Parameters : [1, 6]
[11:01:34] Statement - {conn-10008, pstmt-20011} Parameters : [1, 6]
[11:01:34] Statement - {conn-10008, pstmt-20011} Parameters : [1, 6]
[11:01:34] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:34] Connection - {conn-10006} pool-connect
[11:01:34] Connection - {conn-10006} pool-connect
[11:01:34] Connection - {conn-10006} pool-connect
[11:01:34] Statement - {conn-10006, pstmt-20001} Parameters : [1, 6]
[11:01:34] Statement - {conn-10006, pstmt-20001} Parameters : [1, 6]
[11:01:34] Statement - {conn-10006, pstmt-20001} Parameters : [1, 6]
[11:01:34] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10006, pstmt-20001} executed. 0.774439 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10006, pstmt-20001} executed. 0.774439 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10006, pstmt-20001} executed. 0.774439 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:34] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:34] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:34] Connection - {conn-10006} pool-recycle
[11:01:34] Connection - {conn-10006} pool-recycle
[11:01:34] Connection - {conn-10006} pool-recycle
[11:01:34] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 16.692573 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 16.692573 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 16.692573 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:34] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:34] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:34] Connection - {conn-10008} pool-recycle
[11:01:34] Connection - {conn-10008} pool-recycle
[11:01:34] Connection - {conn-10008} pool-recycle
[11:01:34] Connection - {conn-10008} pool-connect
[11:01:34] Connection - {conn-10008} pool-connect
[11:01:34] Connection - {conn-10008} pool-connect
[11:01:34] Statement - {conn-10008, pstmt-20011} Parameters : [1, 6]
[11:01:34] Statement - {conn-10008, pstmt-20011} Parameters : [1, 6]
[11:01:34] Statement - {conn-10008, pstmt-20011} Parameters : [1, 6]
[11:01:34] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 0.89527 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 0.89527 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 0.89527 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:34] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:34] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:34] Connection - {conn-10008} pool-recycle
[11:01:34] Connection - {conn-10008} pool-recycle
[11:01:34] Connection - {conn-10008} pool-recycle
[11:01:34] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:01:34] Connection - {conn-10008} pool-connect
[11:01:34] Connection - {conn-10008} pool-connect
[11:01:34] Connection - {conn-10008} pool-connect
[11:01:34] Statement - {conn-10008, pstmt-20011} Parameters : [1, 6]
[11:01:34] Statement - {conn-10008, pstmt-20011} Parameters : [1, 6]
[11:01:34] Statement - {conn-10008, pstmt-20011} Parameters : [1, 6]
[11:01:34] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 0.823652 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 0.823652 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 0.823652 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:34] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:34] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:34] Connection - {conn-10008} pool-recycle
[11:01:34] Connection - {conn-10008} pool-recycle
[11:01:34] Connection - {conn-10008} pool-recycle
[11:01:34] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:01:34] Connection - {conn-10008} pool-connect
[11:01:34] Connection - {conn-10008} pool-connect
[11:01:34] Connection - {conn-10008} pool-connect
[11:01:34] Statement - {conn-10008, pstmt-20011} Parameters : [1, 6]
[11:01:34] Statement - {conn-10008, pstmt-20011} Parameters : [1, 6]
[11:01:34] Statement - {conn-10008, pstmt-20011} Parameters : [1, 6]
[11:01:34] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10008, pstmt-20011} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 0.776462 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 0.776462 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10008, pstmt-20011} executed. 0.776462 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:34] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:34] Statement - {conn-10008, pstmt-20011} clearParameters. 
[11:01:34] Connection - {conn-10008} pool-recycle
[11:01:34] Connection - {conn-10008} pool-recycle
[11:01:34] Connection - {conn-10008} pool-recycle
[11:01:34] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:01:34] Connection - {conn-10008} pool-connect
[11:01:34] Connection - {conn-10008} pool-connect
[11:01:34] Connection - {conn-10008} pool-connect
[11:01:34] Statement - {conn-10008, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 11:01:34.118]
[11:01:34] Statement - {conn-10008, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 11:01:34.118]
[11:01:34] Statement - {conn-10008, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 11:01:34.118]
[11:01:34] Statement - {conn-10008, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:34] Statement - {conn-10008, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:34] Statement - {conn-10008, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:01:34] Connection - {conn-10006} pool-connect
[11:01:34] Connection - {conn-10006} pool-connect
[11:01:34] Connection - {conn-10006} pool-connect
[11:01:34] Statement - {conn-10008, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:34.118')
[11:01:34] Statement - {conn-10008, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:34.118')
[11:01:34] Statement - {conn-10008, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:01:34.118')
[11:01:34] Statement - {conn-10008, pstmt-20012} executed. 10.738717 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:34] Statement - {conn-10008, pstmt-20012} executed. 10.738717 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:34] Statement - {conn-10008, pstmt-20012} executed. 10.738717 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:01:34] ResultSet - {conn-10008, pstmt-20012, rs-50022} open
[11:01:34] ResultSet - {conn-10008, pstmt-20012, rs-50022} open
[11:01:34] ResultSet - {conn-10008, pstmt-20012, rs-50022} Header: [GENERATED_KEY]
[11:01:34] ResultSet - {conn-10008, pstmt-20012, rs-50022} Header: [GENERATED_KEY]
[11:01:34] ResultSet - {conn-10008, pstmt-20012, rs-50022} Result: [64]
[11:01:34] ResultSet - {conn-10008, pstmt-20012, rs-50022} Result: [64]
[11:01:34] ResultSet - {conn-10008, pstmt-20012, rs-50022} closed
[11:01:34] ResultSet - {conn-10008, pstmt-20012, rs-50022} closed
[11:01:34] Statement - {conn-10008, pstmt-20012} clearParameters. 
[11:01:34] Statement - {conn-10008, pstmt-20012} clearParameters. 
[11:01:34] Statement - {conn-10006, pstmt-20001} Parameters : [1, 6]
[11:01:34] Statement - {conn-10006, pstmt-20001} Parameters : [1, 6]
[11:01:34] Statement - {conn-10008, pstmt-20012} clearParameters. 
[11:01:34] Statement - {conn-10006, pstmt-20001} Parameters : [1, 6]
[11:01:34] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:34] Connection - {conn-10008} pool-recycle
[11:01:34] Connection - {conn-10008} pool-recycle
[11:01:34] Connection - {conn-10008} pool-recycle
[11:01:34] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10006, pstmt-20001} executed. 1.092442 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10006, pstmt-20001} executed. 1.092442 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10006, pstmt-20001} executed. 1.092442 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:34] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:34] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:34] Connection - {conn-10006} pool-recycle
[11:01:34] Connection - {conn-10006} pool-recycle
[11:01:34] Connection - {conn-10006} pool-recycle
[11:01:34] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:01:34] Connection - {conn-10006} pool-connect
[11:01:34] Connection - {conn-10006} pool-connect
[11:01:34] Connection - {conn-10006} pool-connect
[11:01:34] Statement - {conn-10006, pstmt-20001} Parameters : [1, 6]
[11:01:34] Statement - {conn-10006, pstmt-20001} Parameters : [1, 6]
[11:01:34] Statement - {conn-10006, pstmt-20001} Parameters : [1, 6]
[11:01:34] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10006, pstmt-20001} Types : [INTEGER, INTEGER]
[11:01:34] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10006, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[11:01:34] Statement - {conn-10006, pstmt-20001} executed. 0.833951 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10006, pstmt-20001} executed. 0.833951 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10006, pstmt-20001} executed. 0.833951 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:01:34] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:34] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:34] Statement - {conn-10006, pstmt-20001} clearParameters. 
[11:01:34] Connection - {conn-10006} pool-recycle
[11:01:34] Connection - {conn-10006} pool-recycle
[11:01:34] Connection - {conn-10006} pool-recycle
[11:01:34] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:157)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:02:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:02:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:03:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:03:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:04:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:04:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:05:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:05:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:06:57] Connection - {conn-10003} closed
[11:06:57] Connection - {conn-10003} closed
[11:06:57] Connection - {conn-10003} closed
[11:06:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:06:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:07:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:07:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:08:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:08:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:09:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:09:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:10:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:10:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:11:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:11:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:12:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:12:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:13:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:13:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:14:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:14:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:15:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:15:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:16:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:16:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:17:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:17:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:18:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:18:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:19:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:19:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:20:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:20:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:21:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:21:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:22:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:22:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:23:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:23:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:24:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:24:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:25:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:25:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:26:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:26:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:27:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:27:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:28:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:28:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:29:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:29:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:30:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:30:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:31:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:31:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:32:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:32:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:33:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:33:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:34:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:34:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:35:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:35:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:36:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:36:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:37:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:37:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:38:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:38:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:39:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:39:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:40:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:40:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:41:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:41:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:42:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:42:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:43:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:43:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:44:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:44:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:45:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:45:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:46:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:46:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:47:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:47:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:48:59] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45074, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:48:59] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:30] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[11:51:31] Main -  [DUBBO] Use container type([spring, jetty]) to run dubbo serivce., dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:38] Connection - {conn-10001} connected
[11:51:38] Connection - {conn-10001} connected
[11:51:38] Connection - {conn-10001} connected
[11:51:39] Connection - {conn-10002} connected
[11:51:39] Connection - {conn-10002} connected
[11:51:39] Connection - {conn-10002} connected
[11:51:39] Connection - {conn-10003} connected
[11:51:39] Connection - {conn-10003} connected
[11:51:39] Connection - {conn-10003} connected
[11:51:39] DruidDataSource - {dataSource-1} inited
[11:51:40] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:41] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:41] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:41] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:41] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:41] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:41] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:41] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.116.168&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639501475, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:41] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.116.168&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639501475 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=3987&registry=zookeeper&timestamp=1529639501471, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:41] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:41] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:41] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:41] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:41] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:41] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.116.168:20880, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] ZookeeperRegistry -  [DUBBO] Load registry store file /home/jie/.dubbo/dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635679113, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3254&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529635678736}, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[11:51:42] ZkEventThread - Starting ZkClient event thread.
[11:51:42] ZkClient - Awaiting connection to Zookeeper server
[11:51:42] ZkClient - Waiting for keeper state SyncConnected
[11:51:42] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[11:51:42] ZkClient - zookeeper state changed (SyncConnected)
[11:51:42] ZkClient - Leaving process event
[11:51:42] ZkClient - State is SyncConnected
[11:51:42] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639501475, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639501475, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639501475, urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639501475], dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639501475], dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639501475, override urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639501475], dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.116.168&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639502538, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.116.168&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639502538 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=3987&registry=zookeeper&timestamp=1529639502538, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639502538, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639502538, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639502538, urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639502538], dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639502538], dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639502538, override urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639502538], dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] Main -  [DUBBO] Dubbo SpringContainer started!, dubbo version: 2.0.1, current host: 192.168.116.168
[11:51:42] Main -  [DUBBO] Dubbo JettyContainer started!, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:11] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:11] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:11] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:11] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:11] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:11] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:11] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:11] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:11] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:11] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:11] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:11] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:12] Connection - {conn-10002} pool-connect
[11:53:12] Connection - {conn-10002} pool-connect
[11:53:12] Connection - {conn-10002} pool-connect
[11:53:12] Connection - {conn-10001} pool-connect
[11:53:12] Connection - {conn-10001} pool-connect
[11:53:12] Connection - {conn-10001} pool-connect
[11:53:12] Connection - {conn-10003} pool-connect
[11:53:12] Connection - {conn-10003} pool-connect
[11:53:12] Connection - {conn-10003} pool-connect
[11:53:12] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] Connection - {conn-10004} connected
[11:53:13] Connection - {conn-10004} connected
[11:53:13] Connection - {conn-10004} connected
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] Connection - {conn-10004} pool-connect
[11:53:13] Connection - {conn-10004} pool-connect
[11:53:13] Connection - {conn-10004} pool-connect
[11:53:13] Statement - {conn-10001, pstmt-20000} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10001, pstmt-20000} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10001, pstmt-20000} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10003, pstmt-20001} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10003, pstmt-20001} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10003, pstmt-20001} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10002, pstmt-20002} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10002, pstmt-20002} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10002, pstmt-20002} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] Connection - {conn-10005} connected
[11:53:13] Connection - {conn-10005} connected
[11:53:13] Connection - {conn-10005} connected
[11:53:13] Statement - {conn-10001, pstmt-20000} Parameters : [1, 0]
[11:53:13] Statement - {conn-10001, pstmt-20000} Parameters : [1, 0]
[11:53:13] Statement - {conn-10001, pstmt-20000} Parameters : [1, 0]
[11:53:13] Statement - {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER]
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:13] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:13] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:13] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:13] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:13] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:13] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10003, pstmt-20001} executed. 24.561875 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10003, pstmt-20001} executed. 24.561875 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10003, pstmt-20001} executed. 24.561875 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:13] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:13] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:13] PreparedStatementPool - {conn-10003, pstmt-20001} enter cache
[11:53:13] Statement - {conn-10004, pstmt-20003} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10004, pstmt-20003} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10004, pstmt-20003} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:13] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:13] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:13] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10001, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10001, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10001, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10001, pstmt-20000} executed. 68.179481 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10001, pstmt-20000} executed. 68.179481 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10001, pstmt-20000} executed. 68.179481 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Connection - {conn-10005} pool-connect
[11:53:13] Connection - {conn-10005} pool-connect
[11:53:13] Connection - {conn-10005} pool-connect
[11:53:13] Connection - {conn-10003} pool-connect
[11:53:13] Connection - {conn-10003} pool-connect
[11:53:13] Connection - {conn-10003} pool-connect
[11:53:13] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:13] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:13] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:13] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:13] Connection - {conn-10003} pool-recycle
[11:53:13] Connection - {conn-10003} pool-recycle
[11:53:13] Connection - {conn-10003} pool-recycle
[11:53:13] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10002, pstmt-20002} executed. 62.58815 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10002, pstmt-20002} executed. 62.58815 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10002, pstmt-20002} executed. 62.58815 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:13] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:13] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:13] Connection - {conn-10006} connected
[11:53:13] Connection - {conn-10006} connected
[11:53:13] Connection - {conn-10006} connected
[11:53:13] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10003, pstmt-20001} executed. 4.511001 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10003, pstmt-20001} executed. 4.511001 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10003, pstmt-20001} executed. 4.511001 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10001, pstmt-20000} clearParameters. 
[11:53:13] Statement - {conn-10001, pstmt-20000} clearParameters. 
[11:53:13] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:13] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:13] Connection - {conn-10006} pool-connect
[11:53:13] Connection - {conn-10006} pool-connect
[11:53:13] Statement - {conn-10001, pstmt-20000} clearParameters. 
[11:53:13] PreparedStatementPool - {conn-10001, pstmt-20000} enter cache
[11:53:13] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:13] Connection - {conn-10001} pool-recycle
[11:53:13] Connection - {conn-10001} pool-recycle
[11:53:13] Connection - {conn-10001} pool-connect
[11:53:13] Connection - {conn-10001} pool-connect
[11:53:13] Statement - {conn-10005, pstmt-20004} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10005, pstmt-20004} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Connection - {conn-10006} pool-connect
[11:53:13] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:13] Connection - {conn-10003} pool-recycle
[11:53:13] Connection - {conn-10003} pool-recycle
[11:53:13] Connection - {conn-10003} pool-connect
[11:53:13] Connection - {conn-10003} pool-connect
[11:53:13] Statement - {conn-10005, pstmt-20004} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:13] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:13] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:13] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:13] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10004, pstmt-20003} executed. 102.637058 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10004, pstmt-20003} executed. 102.637058 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10004, pstmt-20003} executed. 102.637058 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:13] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:13] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:13] PreparedStatementPool - {conn-10004, pstmt-20003} enter cache
[11:53:13] Connection - {conn-10004} pool-recycle
[11:53:13] Connection - {conn-10004} pool-recycle
[11:53:13] Connection - {conn-10004} pool-recycle
[11:53:13] PreparedStatementPool - {conn-10002, pstmt-20002} enter cache
[11:53:13] Connection - {conn-10001} pool-connect
[11:53:13] Connection - {conn-10004} pool-connect
[11:53:13] Connection - {conn-10004} pool-connect
[11:53:13] Connection - {conn-10004} pool-connect
[11:53:13] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:13] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:13] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:13] Connection - {conn-10002} pool-recycle
[11:53:13] Connection - {conn-10002} pool-recycle
[11:53:13] Connection - {conn-10002} pool-connect
[11:53:13] Connection - {conn-10002} pool-connect
[11:53:13] Statement - {conn-10001, pstmt-20000} Parameters : [1, 0]
[11:53:13] Statement - {conn-10001, pstmt-20000} Parameters : [1, 0]
[11:53:13] Connection - {conn-10001} pool-recycle
[11:53:13] Statement - {conn-10001, pstmt-20000} Parameters : [1, 0]
[11:53:13] Statement - {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER]
[11:53:13] Connection - {conn-10002} pool-connect
[11:53:13] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:13] Connection - {conn-10002} pool-recycle
[11:53:13] Connection - {conn-10003} pool-connect
[11:53:13] Connection - {conn-10003} pool-recycle
[11:53:13] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:13] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:13] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:13] Connection - {conn-10007} connected
[11:53:13] Connection - {conn-10007} connected
[11:53:13] Connection - {conn-10007} connected
[11:53:13] Statement - {conn-10001, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10001, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10001, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10001, pstmt-20000} executed. 42.358964 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10001, pstmt-20000} executed. 42.358964 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10001, pstmt-20000} executed. 42.358964 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10001, pstmt-20000} clearParameters. 
[11:53:13] Statement - {conn-10001, pstmt-20000} clearParameters. 
[11:53:13] Statement - {conn-10001, pstmt-20000} clearParameters. 
[11:53:13] Connection - {conn-10001} pool-recycle
[11:53:13] Connection - {conn-10001} pool-recycle
[11:53:13] Connection - {conn-10001} pool-recycle
[11:53:13] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:13] Connection - {conn-10001} pool-connect
[11:53:13] Connection - {conn-10001} pool-connect
[11:53:13] Connection - {conn-10001} pool-connect
[11:53:13] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10004, pstmt-20003} executed. 43.820239 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10004, pstmt-20003} executed. 43.820239 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10004, pstmt-20003} executed. 43.820239 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10001, pstmt-20000} Parameters : [1, 0]
[11:53:13] Statement - {conn-10001, pstmt-20000} Parameters : [1, 0]
[11:53:13] Statement - {conn-10001, pstmt-20000} Parameters : [1, 0]
[11:53:13] Statement - {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:13] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:13] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:13] Connection - {conn-10004} pool-recycle
[11:53:13] Connection - {conn-10004} pool-recycle
[11:53:13] Connection - {conn-10004} pool-recycle
[11:53:13] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:13] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:13] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:13] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:13] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Connection - {conn-10004} pool-connect
[11:53:13] Connection - {conn-10004} pool-connect
[11:53:13] Statement - {conn-10005, pstmt-20004} executed. 52.647823 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10005, pstmt-20004} executed. 52.647823 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:13] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:13] Connection - {conn-10004} pool-connect
[11:53:13] Statement - {conn-10006, pstmt-20005} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10006, pstmt-20005} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10006, pstmt-20005} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:13] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:13] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:13] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:13] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10001, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:13] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:13] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10005, pstmt-20004} executed. 52.647823 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:13] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:13] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:13] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:13] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:13] PreparedStatementPool - {conn-10005, pstmt-20004} enter cache
[11:53:13] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10001, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10001, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10001, pstmt-20000} executed. 57.453216 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10001, pstmt-20000} executed. 57.453216 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10001, pstmt-20000} executed. 57.453216 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10001, pstmt-20000} clearParameters. 
[11:53:13] Statement - {conn-10001, pstmt-20000} clearParameters. 
[11:53:13] Statement - {conn-10001, pstmt-20000} clearParameters. 
[11:53:13] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:13] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10002, pstmt-20002} executed. 60.723549 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10002, pstmt-20002} executed. 60.723549 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10002, pstmt-20002} executed. 60.723549 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:13] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:13] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:13] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10004, pstmt-20003} executed. 578.320031 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10004, pstmt-20003} executed. 578.320031 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10004, pstmt-20003} executed. 578.320031 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] StatFilter - slow sql 578 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[1,0]
[11:53:13] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:13] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:13] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:13] Connection - {conn-10007} pool-connect
[11:53:13] Connection - {conn-10007} pool-connect
[11:53:13] Connection - {conn-10007} pool-connect
[11:53:13] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10003, pstmt-20001} executed. 596.660478 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10003, pstmt-20001} executed. 596.660478 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10003, pstmt-20001} executed. 596.660478 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Connection - {conn-10001} pool-recycle
[11:53:13] Connection - {conn-10001} pool-recycle
[11:53:13] Connection - {conn-10001} pool-recycle
[11:53:13] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:13] Connection - {conn-10002} pool-recycle
[11:53:13] Connection - {conn-10002} pool-recycle
[11:53:13] Connection - {conn-10002} pool-recycle
[11:53:13] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Connection - {conn-10005} pool-recycle
[11:53:13] Connection - {conn-10005} pool-recycle
[11:53:13] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:13] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:13] Statement - {conn-10006, pstmt-20005} executed. 594.587638 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10006, pstmt-20005} executed. 594.587638 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Statement - {conn-10006, pstmt-20005} executed. 594.587638 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:13] Connection - {conn-10005} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10002} pool-connect
[11:53:14] Connection - {conn-10002} pool-connect
[11:53:14] Connection - {conn-10002} pool-connect
[11:53:14] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:14] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:14] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:14] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:14] Connection - {conn-10004} pool-recycle
[11:53:14] Connection - {conn-10004} pool-recycle
[11:53:14] Connection - {conn-10004} pool-connect
[11:53:14] Connection - {conn-10004} pool-connect
[11:53:14] Connection - {conn-10001} pool-connect
[11:53:14] Connection - {conn-10001} pool-connect
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Connection - {conn-10001} pool-connect
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 1.164934 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 1.164934 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 1.164934 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Statement - {conn-10001, pstmt-20000} Parameters : [1, 0]
[11:53:14] Statement - {conn-10001, pstmt-20000} Parameters : [1, 0]
[11:53:14] Connection - {conn-10004} pool-connect
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:13] StatFilter - slow sql 594 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[1,0]
[11:53:14] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:14] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 5.797923 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 5.797923 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Connection - {conn-10004} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 5.797923 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:14] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:14] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:14] Connection - {conn-10002} pool-recycle
[11:53:14] Connection - {conn-10002} pool-recycle
[11:53:14] Connection - {conn-10002} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10002} pool-connect
[11:53:14] Connection - {conn-10002} pool-connect
[11:53:14] Connection - {conn-10002} pool-connect
[11:53:14] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:14] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:14] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:14] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:14] PreparedStatementPool - {conn-10006, pstmt-20005} enter cache
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:14] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:14] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:14] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 53.497968 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 53.497968 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 53.497968 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 1.241555 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 1.241555 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 1.241555 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 6.311129 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 6.311129 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 6.311129 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:14] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:14] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:14] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:14] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:13] StatFilter - slow sql 596 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[1,0]
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10003} pool-connect
[11:53:14] Connection - {conn-10003} pool-connect
[11:53:14] Connection - {conn-10003} pool-connect
[11:53:14] Statement - {conn-10001, pstmt-20000} Parameters : [1, 0]
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 40.93223 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 40.93223 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 40.93223 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:14] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:14] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:14] Connection - {conn-10002} pool-recycle
[11:53:14] Connection - {conn-10002} pool-recycle
[11:53:14] Connection - {conn-10002} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10002} pool-connect
[11:53:14] Connection - {conn-10002} pool-connect
[11:53:14] Connection - {conn-10002} pool-connect
[11:53:14] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:14] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:14] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:14] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10001, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10001, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10001, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10001, pstmt-20000} executed. 95.352982 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10001, pstmt-20000} executed. 95.352982 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10001, pstmt-20000} executed. 95.352982 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10001, pstmt-20000} clearParameters. 
[11:53:14] Statement - {conn-10001, pstmt-20000} clearParameters. 
[11:53:14] Statement - {conn-10001, pstmt-20000} clearParameters. 
[11:53:14] Connection - {conn-10001} pool-recycle
[11:53:14] Connection - {conn-10001} pool-recycle
[11:53:14] Connection - {conn-10001} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10001} pool-connect
[11:53:14] Connection - {conn-10001} pool-connect
[11:53:14] Connection - {conn-10001} pool-connect
[11:53:14] Statement - {conn-10001, pstmt-20000} Parameters : [1, 0]
[11:53:14] Statement - {conn-10001, pstmt-20000} Parameters : [1, 0]
[11:53:14] Statement - {conn-10001, pstmt-20000} Parameters : [1, 0]
[11:53:14] Statement - {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 96.103958 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 96.103958 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 96.103958 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:14] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:14] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:14] Connection - {conn-10004} pool-recycle
[11:53:14] Connection - {conn-10004} pool-recycle
[11:53:14] Connection - {conn-10004} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10004} pool-connect
[11:53:14] Connection - {conn-10004} pool-connect
[11:53:14] Connection - {conn-10004} pool-connect
[11:53:14] Statement - {conn-10007, pstmt-20006} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 0]
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 0]
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 0]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 49.569311 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 49.569311 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 49.569311 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 53.705922 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 53.705922 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 53.705922 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:14] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:14] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:14] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 21.417986 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 21.417986 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 21.417986 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:14] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:14] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:14] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 2.391863 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 2.391863 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 2.391863 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10003} pool-connect
[11:53:14] Connection - {conn-10003} pool-connect
[11:53:14] Connection - {conn-10003} pool-connect
[11:53:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 0.841691 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 0.841691 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 0.841691 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:14] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:14] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:14] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 6.202415 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 6.202415 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 6.202415 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 87.604448 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 87.604448 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 87.604448 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:14] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:14] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 91.040709 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 91.040709 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 91.040709 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] PreparedStatementPool - {conn-10007, pstmt-20006} enter cache
[11:53:14] Statement - {conn-10001, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10001, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10001, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10001, pstmt-20000} executed. 107.413135 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10001, pstmt-20000} executed. 107.413135 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10001, pstmt-20000} executed. 107.413135 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10001, pstmt-20000} clearParameters. 
[11:53:14] Statement - {conn-10001, pstmt-20000} clearParameters. 
[11:53:14] Statement - {conn-10001, pstmt-20000} clearParameters. 
[11:53:14] Connection - {conn-10003} pool-connect
[11:53:14] Connection - {conn-10003} pool-connect
[11:53:14] Connection - {conn-10003} pool-connect
[11:53:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 110.640652 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 110.640652 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 110.640652 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:14] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:14] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 1.046914 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 1.046914 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 1.046914 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 0.943664 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 0.943664 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 0.943664 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10004} pool-recycle
[11:53:14] Connection - {conn-10004} pool-recycle
[11:53:14] Connection - {conn-10004} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] Connection - {conn-10008} connected
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10001} pool-recycle
[11:53:14] Connection - {conn-10002} pool-recycle
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] Connection - {conn-10008} connected
[11:53:14] Connection - {conn-10008} connected
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Connection - {conn-10001} pool-recycle
[11:53:14] Connection - {conn-10001} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10002} pool-recycle
[11:53:14] Connection - {conn-10002} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10003} pool-connect
[11:53:14] Connection - {conn-10003} pool-connect
[11:53:14] Connection - {conn-10003} pool-connect
[11:53:14] Connection - {conn-10002} pool-connect
[11:53:14] Connection - {conn-10002} pool-connect
[11:53:14] Connection - {conn-10002} pool-connect
[11:53:14] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:14] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:14] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:14] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:14] Connection - {conn-10001} pool-connect
[11:53:14] Connection - {conn-10001} pool-connect
[11:53:14] Connection - {conn-10001} pool-connect
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Connection - {conn-10004} pool-connect
[11:53:14] Connection - {conn-10004} pool-connect
[11:53:14] Connection - {conn-10004} pool-connect
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 0]
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 0]
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 0]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 30.89208 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 30.89208 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 30.89208 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:14] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:14] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:14] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10001, pstmt-20000} Parameters : [1, 0]
[11:53:14] Statement - {conn-10001, pstmt-20000} Parameters : [1, 0]
[11:53:14] Statement - {conn-10001, pstmt-20000} Parameters : [1, 0]
[11:53:14] Statement - {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10001, pstmt-20000} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 1.852524 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 1.852524 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 1.852524 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:14] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:14] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 6.662016 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 6.662016 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 6.662016 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 9.399291 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 9.399291 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 9.399291 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:14] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:14] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:14] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10004} pool-recycle
[11:53:14] Connection - {conn-10004} pool-recycle
[11:53:14] Connection - {conn-10004} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 35.82578 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 35.82578 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 35.82578 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:14] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:14] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:14] Connection - {conn-10002} pool-recycle
[11:53:14] Connection - {conn-10002} pool-recycle
[11:53:14] Connection - {conn-10002} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 0]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 18.782674 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 18.782674 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 18.782674 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Connection - {conn-10002} pool-connect
[11:53:14] Connection - {conn-10002} pool-connect
[11:53:14] Connection - {conn-10002} pool-connect
[11:53:14] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:14] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:14] Statement - {conn-10002, pstmt-20002} Parameters : [1, 0]
[11:53:14] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10002, pstmt-20002} Types : [INTEGER, INTEGER]
[11:53:14] Connection - {conn-10004} pool-connect
[11:53:14] Connection - {conn-10004} pool-connect
[11:53:14] Connection - {conn-10004} pool-connect
[11:53:14] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:14] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:14] Statement - {conn-10004, pstmt-20003} Parameters : [1, 0]
[11:53:14] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10004, pstmt-20003} Types : [INTEGER, INTEGER]
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 2.012111 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 2.012111 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10004, pstmt-20003} executed. 2.012111 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:14] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:14] Statement - {conn-10004, pstmt-20003} clearParameters. 
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 2.822304 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 2.822304 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10002, pstmt-20002} executed. 2.822304 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:14] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:14] Statement - {conn-10002, pstmt-20002} clearParameters. 
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 4.142994 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 4.142994 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 4.142994 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 0]
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 0]
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 0]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Connection - {conn-10003} pool-connect
[11:53:14] Connection - {conn-10003} pool-connect
[11:53:14] Connection - {conn-10003} pool-connect
[11:53:14] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:14] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:14] Statement - {conn-10006, pstmt-20005} Parameters : [1, 0]
[11:53:14] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10006, pstmt-20005} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:14] Connection - {conn-10008} pool-connect
[11:53:14] Connection - {conn-10008} pool-connect
[11:53:14] Connection - {conn-10008} pool-connect
[11:53:14] Statement - {conn-10001, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10001, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10001, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10001, pstmt-20000} executed. 42.243059 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10001, pstmt-20000} executed. 42.243059 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10001, pstmt-20000} executed. 42.243059 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 6.029526 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 6.029526 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} executed. 6.029526 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Statement - {conn-10006, pstmt-20005} clearParameters. 
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 10.710967 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 10.710967 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 10.710967 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 18.360595 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 18.360595 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 18.360595 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Statement - {conn-10008, pstmt-20007} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10008, pstmt-20007} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10008, pstmt-20007} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10008, pstmt-20007} Parameters : [1, 0]
[11:53:14] Statement - {conn-10008, pstmt-20007} Parameters : [1, 0]
[11:53:14] Statement - {conn-10008, pstmt-20007} Parameters : [1, 0]
[11:53:14] Statement - {conn-10008, pstmt-20007} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10008, pstmt-20007} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10008, pstmt-20007} Types : [INTEGER, INTEGER]
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10004} pool-recycle
[11:53:14] Connection - {conn-10004} pool-recycle
[11:53:14] Connection - {conn-10004} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10002} pool-recycle
[11:53:14] Connection - {conn-10002} pool-recycle
[11:53:14] Connection - {conn-10002} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Statement - {conn-10001, pstmt-20000} clearParameters. 
[11:53:14] Statement - {conn-10001, pstmt-20000} clearParameters. 
[11:53:14] Statement - {conn-10001, pstmt-20000} clearParameters. 
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10001} pool-recycle
[11:53:14] Connection - {conn-10001} pool-recycle
[11:53:14] Connection - {conn-10001} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10009} connected
[11:53:14] Connection - {conn-10009} connected
[11:53:14] Connection - {conn-10009} connected
[11:53:14] Statement - {conn-10008, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10008, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10008, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10008, pstmt-20007} executed. 51.216198 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10008, pstmt-20007} executed. 51.216198 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10008, pstmt-20007} executed. 51.216198 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10008, pstmt-20007} clearParameters. 
[11:53:14] Statement - {conn-10008, pstmt-20007} clearParameters. 
[11:53:14] Statement - {conn-10008, pstmt-20007} clearParameters. 
[11:53:14] PreparedStatementPool - {conn-10008, pstmt-20007} enter cache
[11:53:14] Connection - {conn-10008} pool-recycle
[11:53:14] Connection - {conn-10008} pool-recycle
[11:53:14] Connection - {conn-10008} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] Connection - {conn-10005} pool-connect
[11:53:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 1]
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 1]
[11:53:14] Statement - {conn-10005, pstmt-20004} Parameters : [1, 1]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Connection - {conn-10006} pool-connect
[11:53:14] Connection - {conn-10008} pool-connect
[11:53:14] Connection - {conn-10008} pool-connect
[11:53:14] Connection - {conn-10008} pool-connect
[11:53:14] Statement - {conn-10008, pstmt-20007} Parameters : [1, 1]
[11:53:14] Statement - {conn-10008, pstmt-20007} Parameters : [1, 1]
[11:53:14] Statement - {conn-10008, pstmt-20007} Parameters : [1, 1]
[11:53:14] Statement - {conn-10008, pstmt-20007} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10008, pstmt-20007} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10008, pstmt-20007} Types : [INTEGER, INTEGER]
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] Connection - {conn-10006} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 0]
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 0]
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 0]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10003} pool-connect
[11:53:14] Connection - {conn-10003} pool-connect
[11:53:14] Connection - {conn-10003} pool-connect
[11:53:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[11:53:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] Connection - {conn-10009} pool-connect
[11:53:14] Connection - {conn-10009} pool-connect
[11:53:14] Connection - {conn-10009} pool-connect
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 1.271532 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 1.271532 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10003, pstmt-20001} executed. 1.271532 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] Connection - {conn-10003} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 10.51979 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 10.51979 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} executed. 10.51979 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] Connection - {conn-10005} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 5.254481 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 5.254481 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 5.254481 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 1]
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 1]
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 1]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 0.944271 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 0.944271 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 0.944271 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 1]
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 1]
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 1]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 0.779651 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 0.779651 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 0.779651 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Statement - {conn-10006, pstmt-20008} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:14] Statement - {conn-10006, pstmt-20008} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:14] Statement - {conn-10006, pstmt-20008} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:14] Statement - {conn-10008, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:53:14] Statement - {conn-10008, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:53:14] Statement - {conn-10008, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:53:14] Statement - {conn-10008, pstmt-20007} executed. 48.51587 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10008, pstmt-20007} executed. 48.51587 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10008, pstmt-20007} executed. 48.51587 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10008, pstmt-20007} clearParameters. 
[11:53:14] Statement - {conn-10008, pstmt-20007} clearParameters. 
[11:53:14] Statement - {conn-10008, pstmt-20007} clearParameters. 
[11:53:14] Connection - {conn-10008} pool-recycle
[11:53:14] Connection - {conn-10008} pool-recycle
[11:53:14] Connection - {conn-10008} pool-recycle
[11:53:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:14] Connection - {conn-10008} pool-connect
[11:53:14] Connection - {conn-10008} pool-connect
[11:53:14] Connection - {conn-10008} pool-connect
[11:53:14] Statement - {conn-10008, pstmt-20009} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:14] Statement - {conn-10008, pstmt-20009} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:14] Statement - {conn-10008, pstmt-20009} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:14] Statement - {conn-10006, pstmt-20008} Parameters : [null, 1, 手机, 2018-06-22 11:53:13.379]
[11:53:14] Statement - {conn-10006, pstmt-20008} Parameters : [null, 1, 手机, 2018-06-22 11:53:13.379]
[11:53:14] Statement - {conn-10006, pstmt-20008} Parameters : [null, 1, 手机, 2018-06-22 11:53:13.379]
[11:53:14] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:53:14] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:53:14] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:53:14] Statement - {conn-10008, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 11:53:14.516]
[11:53:14] Statement - {conn-10008, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 11:53:14.516]
[11:53:14] Statement - {conn-10008, pstmt-20009} Parameters : [null, 1, 手机, 2018-06-22 11:53:14.516]
[11:53:14] Statement - {conn-10008, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:53:14] Statement - {conn-10008, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:53:14] Statement - {conn-10008, pstmt-20009} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:53:14] Statement - {conn-10009, pstmt-20010} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10009, pstmt-20010} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10009, pstmt-20010} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10009, pstmt-20010} Parameters : [1, 1]
[11:53:14] Statement - {conn-10009, pstmt-20010} Parameters : [1, 1]
[11:53:14] Statement - {conn-10009, pstmt-20010} Parameters : [1, 1]
[11:53:14] Statement - {conn-10009, pstmt-20010} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10009, pstmt-20010} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10009, pstmt-20010} Types : [INTEGER, INTEGER]
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 2]
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 2]
[11:53:14] Statement - {conn-10007, pstmt-20006} Parameters : [1, 2]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10007, pstmt-20006} Types : [INTEGER, INTEGER]
[11:53:14] Statement - {conn-10009, pstmt-20010} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:53:14] Statement - {conn-10009, pstmt-20010} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:53:14] Statement - {conn-10009, pstmt-20010} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[11:53:14] Statement - {conn-10009, pstmt-20010} executed. 73.07439 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10009, pstmt-20010} executed. 73.07439 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10009, pstmt-20010} executed. 73.07439 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10009, pstmt-20010} clearParameters. 
[11:53:14] Statement - {conn-10009, pstmt-20010} clearParameters. 
[11:53:14] Statement - {conn-10009, pstmt-20010} clearParameters. 
[11:53:14] PreparedStatementPool - {conn-10009, pstmt-20010} enter cache
[11:53:14] Connection - {conn-10009} pool-recycle
[11:53:14] Connection - {conn-10009} pool-recycle
[11:53:14] Connection - {conn-10009} pool-recycle
[11:53:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 79.272585 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 79.272585 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} executed. 79.272585 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Statement - {conn-10007, pstmt-20006} clearParameters. 
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] Connection - {conn-10007} pool-recycle
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Connection - {conn-10007} pool-connect
[11:53:14] Statement - {conn-10007, pstmt-20011} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:14] Statement - {conn-10007, pstmt-20011} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:14] Statement - {conn-10007, pstmt-20011} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:14] Statement - {conn-10007, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 11:53:14.77]
[11:53:14] Statement - {conn-10007, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 11:53:14.77]
[11:53:14] Statement - {conn-10007, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 11:53:14.77]
[11:53:14] Statement - {conn-10007, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:53:14] Statement - {conn-10007, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:53:14] Statement - {conn-10007, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:53:15] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:15] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:15] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:15] Connection - {conn-10009} pool-connect
[11:53:15] Connection - {conn-10009} pool-connect
[11:53:15] Connection - {conn-10009} pool-connect
[11:53:15] Statement - {conn-10009, pstmt-20010} Parameters : [1, 3]
[11:53:15] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:15] Statement - {conn-10009, pstmt-20010} Parameters : [1, 3]
[11:53:15] Statement - {conn-10009, pstmt-20010} Parameters : [1, 3]
[11:53:15] Statement - {conn-10009, pstmt-20010} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10009, pstmt-20010} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10009, pstmt-20010} Types : [INTEGER, INTEGER]
[11:53:15] Connection - {conn-10005} pool-connect
[11:53:15] Connection - {conn-10005} pool-connect
[11:53:15] Connection - {conn-10005} pool-connect
[11:53:15] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:15] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:15] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:15] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 12.998875 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 12.998875 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 12.998875 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:15] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:15] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:15] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:15] Connection - {conn-10005} pool-recycle
[11:53:15] Connection - {conn-10005} pool-recycle
[11:53:15] Connection - {conn-10005} pool-recycle
[11:53:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:15] Connection - {conn-10005} pool-connect
[11:53:15] Connection - {conn-10005} pool-connect
[11:53:15] Connection - {conn-10005} pool-connect
[11:53:15] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:15] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:15] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:15] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 0.973875 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 0.973875 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 0.973875 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:15] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:15] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:15] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:15] Connection - {conn-10005} pool-recycle
[11:53:15] Connection - {conn-10005} pool-recycle
[11:53:15] Connection - {conn-10005} pool-recycle
[11:53:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:15] Connection - {conn-10005} pool-connect
[11:53:15] Connection - {conn-10005} pool-connect
[11:53:15] Connection - {conn-10005} pool-connect
[11:53:15] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:15] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:15] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:15] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 0.771607 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 0.771607 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 0.771607 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:15] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:15] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:15] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:15] Connection - {conn-10005} pool-recycle
[11:53:15] Connection - {conn-10005} pool-recycle
[11:53:15] Connection - {conn-10005} pool-recycle
[11:53:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:15] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:15] Connection - {conn-10005} pool-connect
[11:53:15] Connection - {conn-10005} pool-connect
[11:53:15] Connection - {conn-10005} pool-connect
[11:53:15] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:15] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:15] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:15] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 4.465182 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 4.465182 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 4.465182 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:15] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:15] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:15] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:15] Connection - {conn-10005} pool-recycle
[11:53:15] Connection - {conn-10005} pool-recycle
[11:53:15] Connection - {conn-10005} pool-recycle
[11:53:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:15] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:15] Connection - {conn-10005} pool-connect
[11:53:15] Connection - {conn-10005} pool-connect
[11:53:15] Connection - {conn-10005} pool-connect
[11:53:15] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:15] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:15] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:15] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 1.261886 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 1.261886 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 1.261886 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:15] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:15] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:15] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:15] Connection - {conn-10005} pool-recycle
[11:53:15] Connection - {conn-10005} pool-recycle
[11:53:15] Connection - {conn-10005} pool-recycle
[11:53:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:15] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:15] Connection - {conn-10005} pool-connect
[11:53:15] Connection - {conn-10005} pool-connect
[11:53:15] Connection - {conn-10005} pool-connect
[11:53:15] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:15] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:15] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:15] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 1.058532 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 1.058532 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:15] Statement - {conn-10005, pstmt-20004} executed. 1.058532 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:15] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:15] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:15] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:15] Connection - {conn-10005} pool-recycle
[11:53:15] Connection - {conn-10005} pool-recycle
[11:53:15] Connection - {conn-10005} pool-recycle
[11:53:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:16] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 13.490044 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 13.490044 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 13.490044 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:16] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 2.532971 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 2.532971 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 2.532971 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.586983 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.586983 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.586983 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:16] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.343957 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.343957 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.343957 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:16] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:16] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.137724 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.137724 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.137724 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 0.797037 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 0.797037 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 0.797037 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:16] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 0.776153 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 0.776153 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 0.776153 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:16] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.29807 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.29807 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.29807 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:16] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:16] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:16] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Connection - {conn-10003} pool-connect
[11:53:16] Connection - {conn-10003} pool-connect
[11:53:16] Connection - {conn-10003} pool-connect
[11:53:16] Statement - {conn-10003, pstmt-20001} Parameters : [1, 3]
[11:53:16] Statement - {conn-10003, pstmt-20001} Parameters : [1, 3]
[11:53:16] Statement - {conn-10003, pstmt-20001} Parameters : [1, 3]
[11:53:16] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10003, pstmt-20001} executed. 1.218223 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10003, pstmt-20001} executed. 1.218223 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10003, pstmt-20001} executed. 1.218223 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:16] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:16] Statement - {conn-10003, pstmt-20001} clearParameters. 
[11:53:16] Connection - {conn-10003} pool-recycle
[11:53:16] Connection - {conn-10003} pool-recycle
[11:53:16] Connection - {conn-10003} pool-recycle
[11:53:16] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 3.894577 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 3.894577 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 3.894577 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.179181 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.179181 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.179181 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:16] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.047415 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.047415 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.047415 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:16] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Connection - {conn-10005} pool-connect
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Parameters : [1, 3]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.15817 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.15817 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} executed. 1.15817 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Statement - {conn-10005, pstmt-20004} clearParameters. 
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] Connection - {conn-10005} pool-recycle
[11:53:16] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[11:53:16] Statement - {conn-10009, pstmt-20010} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10009, pstmt-20010} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10009, pstmt-20010} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[11:53:16] Statement - {conn-10009, pstmt-20010} executed. 1351.002548 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10009, pstmt-20010} executed. 1351.002548 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] Statement - {conn-10009, pstmt-20010} executed. 1351.002548 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[11:53:16] StatFilter - slow sql 1351 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[1,3]
[11:53:16] Statement - {conn-10009, pstmt-20010} clearParameters. 
[11:53:16] Statement - {conn-10009, pstmt-20010} clearParameters. 
[11:53:16] Statement - {conn-10009, pstmt-20010} clearParameters. 
[11:53:16] Connection - {conn-10009} pool-recycle
[11:53:16] Connection - {conn-10009} pool-recycle
[11:53:16] Connection - {conn-10009} pool-recycle
[11:53:16] Connection - {conn-10009} pool-connect
[11:53:16] Connection - {conn-10009} pool-connect
[11:53:16] Connection - {conn-10009} pool-connect
[11:53:16] Statement - {conn-10009, pstmt-20012} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:16] Statement - {conn-10009, pstmt-20012} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:16] Statement - {conn-10009, pstmt-20012} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:16] Statement - {conn-10009, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 11:53:16.498]
[11:53:16] Statement - {conn-10009, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 11:53:16.498]
[11:53:16] Statement - {conn-10009, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 11:53:16.498]
[11:53:16] Statement - {conn-10009, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:53:16] Statement - {conn-10009, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:53:16] Statement - {conn-10009, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[11:53:17] Statement - {conn-10006, pstmt-20008} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:53:13.379')
[11:53:17] Statement - {conn-10006, pstmt-20008} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:53:13.379')
[11:53:17] Statement - {conn-10006, pstmt-20008} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:53:13.379')
[11:53:17] Statement - {conn-10006, pstmt-20008} executed. 2551.324716 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:17] Statement - {conn-10006, pstmt-20008} executed. 2551.324716 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:17] Statement - {conn-10006, pstmt-20008} executed. 2551.324716 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:17] StatFilter - slow sql 2551 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[null,1,"手机","2018-06-22 11:53:13"]
[11:53:17] ResultSet - {conn-10006, pstmt-20008, rs-50000} open
[11:53:17] ResultSet - {conn-10006, pstmt-20008, rs-50000} open
[11:53:17] ResultSet - {conn-10006, pstmt-20008, rs-50000} Header: [GENERATED_KEY]
[11:53:17] ResultSet - {conn-10006, pstmt-20008, rs-50000} Header: [GENERATED_KEY]
[11:53:17] ResultSet - {conn-10006, pstmt-20008, rs-50000} Result: [67]
[11:53:17] ResultSet - {conn-10006, pstmt-20008, rs-50000} Result: [67]
[11:53:17] ResultSet - {conn-10006, pstmt-20008, rs-50000} closed
[11:53:17] ResultSet - {conn-10006, pstmt-20008, rs-50000} closed
[11:53:17] Statement - {conn-10006, pstmt-20008} clearParameters. 
[11:53:17] Statement - {conn-10006, pstmt-20008} clearParameters. 
[11:53:17] Statement - {conn-10006, pstmt-20008} clearParameters. 
[11:53:17] PreparedStatementPool - {conn-10006, pstmt-20008} enter cache
[11:53:17] Connection - {conn-10006} pool-recycle
[11:53:17] Connection - {conn-10006} pool-recycle
[11:53:17] Connection - {conn-10006} pool-recycle
[11:53:17] Statement - {conn-10009, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:53:16.498')
[11:53:17] Statement - {conn-10009, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:53:16.498')
[11:53:17] Statement - {conn-10007, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:53:14.770')
[11:53:17] Statement - {conn-10007, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:53:14.770')
[11:53:17] Statement - {conn-10008, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:53:14.516')
[11:53:17] Statement - {conn-10008, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:53:14.516')
[11:53:17] Statement - {conn-10009, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:53:16.498')
[11:53:17] Statement - {conn-10009, pstmt-20012} executed. 823.439523 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:17] Statement - {conn-10009, pstmt-20012} executed. 823.439523 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:17] Statement - {conn-10009, pstmt-20012} executed. 823.439523 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:17] StatFilter - slow sql 823 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[null,1,"手机","2018-06-22 11:53:16"]
[11:53:17] Statement - {conn-10008, pstmt-20009} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:53:14.516')
[11:53:17] Statement - {conn-10008, pstmt-20009} executed. 2703.591178 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:17] Statement - {conn-10008, pstmt-20009} executed. 2703.591178 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:17] Statement - {conn-10008, pstmt-20009} executed. 2703.591178 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:17] StatFilter - slow sql 2703 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[null,1,"手机","2018-06-22 11:53:14"]
[11:53:17] ResultSet - {conn-10009, pstmt-20012, rs-50001} open
[11:53:17] ResultSet - {conn-10009, pstmt-20012, rs-50001} open
[11:53:17] ResultSet - {conn-10009, pstmt-20012, rs-50001} Header: [GENERATED_KEY]
[11:53:17] ResultSet - {conn-10009, pstmt-20012, rs-50001} Header: [GENERATED_KEY]
[11:53:17] ResultSet - {conn-10009, pstmt-20012, rs-50001} Result: [66]
[11:53:17] ResultSet - {conn-10009, pstmt-20012, rs-50001} Result: [66]
[11:53:17] ResultSet - {conn-10009, pstmt-20012, rs-50001} closed
[11:53:17] ResultSet - {conn-10009, pstmt-20012, rs-50001} closed
[11:53:17] Statement - {conn-10009, pstmt-20012} clearParameters. 
[11:53:17] ResultSet - {conn-10008, pstmt-20009, rs-50002} open
[11:53:17] ResultSet - {conn-10008, pstmt-20009, rs-50002} open
[11:53:17] Statement - {conn-10007, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 11:53:14.770')
[11:53:17] Statement - {conn-10007, pstmt-20011} executed. 2602.385749 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:17] Statement - {conn-10009, pstmt-20012} clearParameters. 
[11:53:17] Statement - {conn-10009, pstmt-20012} clearParameters. 
[11:53:17] Statement - {conn-10007, pstmt-20011} executed. 2602.385749 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:17] Statement - {conn-10007, pstmt-20011} executed. 2602.385749 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[11:53:17] PreparedStatementPool - {conn-10009, pstmt-20012} enter cache
[11:53:17] Connection - {conn-10009} pool-recycle
[11:53:17] Connection - {conn-10009} pool-recycle
[11:53:17] Connection - {conn-10009} pool-recycle
[11:53:17] StatFilter - slow sql 2612 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[null,1,"手机","2018-06-22 11:53:14"]
[11:53:17] ResultSet - {conn-10007, pstmt-20011, rs-50003} open
[11:53:17] ResultSet - {conn-10007, pstmt-20011, rs-50003} open
[11:53:17] ResultSet - {conn-10007, pstmt-20011, rs-50003} Header: [GENERATED_KEY]
[11:53:17] ResultSet - {conn-10007, pstmt-20011, rs-50003} Header: [GENERATED_KEY]
[11:53:17] ResultSet - {conn-10007, pstmt-20011, rs-50003} Result: [68]
[11:53:17] ResultSet - {conn-10007, pstmt-20011, rs-50003} Result: [68]
[11:53:17] ResultSet - {conn-10007, pstmt-20011, rs-50003} closed
[11:53:17] ResultSet - {conn-10007, pstmt-20011, rs-50003} closed
[11:53:17] Statement - {conn-10007, pstmt-20011} clearParameters. 
[11:53:17] Statement - {conn-10007, pstmt-20011} clearParameters. 
[11:53:17] Statement - {conn-10007, pstmt-20011} clearParameters. 
[11:53:17] PreparedStatementPool - {conn-10007, pstmt-20011} enter cache
[11:53:17] Connection - {conn-10007} pool-recycle
[11:53:17] Connection - {conn-10007} pool-recycle
[11:53:17] Connection - {conn-10007} pool-recycle
[11:53:17] ResultSet - {conn-10008, pstmt-20009, rs-50002} Header: [GENERATED_KEY]
[11:53:17] ResultSet - {conn-10008, pstmt-20009, rs-50002} Header: [GENERATED_KEY]
[11:53:17] ResultSet - {conn-10008, pstmt-20009, rs-50002} Result: [65]
[11:53:17] ResultSet - {conn-10008, pstmt-20009, rs-50002} Result: [65]
[11:53:17] ResultSet - {conn-10008, pstmt-20009, rs-50002} closed
[11:53:17] ResultSet - {conn-10008, pstmt-20009, rs-50002} closed
[11:53:17] Statement - {conn-10008, pstmt-20009} clearParameters. 
[11:53:17] Statement - {conn-10008, pstmt-20009} clearParameters. 
[11:53:17] Statement - {conn-10008, pstmt-20009} clearParameters. 
[11:53:17] PreparedStatementPool - {conn-10008, pstmt-20009} enter cache
[11:53:17] Connection - {conn-10008} pool-recycle
[11:53:17] Connection - {conn-10008} pool-recycle
[11:53:17] Connection - {conn-10008} pool-recycle
[11:54:42] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:54:42] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45340, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:55:42] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45340, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:55:42] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:56:42] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45340, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:56:42] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:57:42] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45340, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:57:42] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[11:58:39] Connection - {conn-10004} closed
[11:58:39] Connection - {conn-10004} closed
[11:58:39] Connection - {conn-10004} closed
[11:58:39] Connection - {conn-10002} closed
[11:58:39] Connection - {conn-10002} closed
[11:58:39] Connection - {conn-10002} closed
[11:58:39] Connection - {conn-10001} closed
[11:58:39] Connection - {conn-10001} closed
[11:58:39] Connection - {conn-10001} closed
[11:58:39] Connection - {conn-10003} closed
[11:58:39] Connection - {conn-10003} closed
[11:58:39] Connection - {conn-10003} closed
[11:58:39] Connection - {conn-10005} closed
[11:58:39] Connection - {conn-10005} closed
[11:58:39] Connection - {conn-10005} closed
[11:58:39] Connection - {conn-10006} closed
[11:58:39] Connection - {conn-10006} closed
[11:58:39] Connection - {conn-10006} closed
[11:58:42] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45340, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[11:58:42] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:23] LoggerFactory - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[12:00:23] Main -  [DUBBO] Use container type([spring, jetty]) to run dubbo serivce., dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:25] Connection - {conn-10001} connected
[12:00:25] Connection - {conn-10001} connected
[12:00:25] Connection - {conn-10001} connected
[12:00:25] Connection - {conn-10002} connected
[12:00:25] Connection - {conn-10002} connected
[12:00:25] Connection - {conn-10002} connected
[12:00:25] Connection - {conn-10003} connected
[12:00:25] Connection - {conn-10003} connected
[12:00:25] Connection - {conn-10003} connected
[12:00:25] DruidDataSource - {dataSource-1} inited
[12:00:25] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:25] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade to url dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.116.168&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026108, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.OrderServiceFacade url dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.116.168&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026108 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=4418&registry=zookeeper&timestamp=1529640026103, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] NioProviderMetadata -  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] AbstractServer -  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.116.168:20880, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ZookeeperRegistry -  [DUBBO] Load registry store file /home/jie/.dubbo/dubbo-registry-stock-service-192.168.116.168:2181.cache, data: {com.crossoverJie.seconds.kill.api.StockServiceFacade=empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639502538, com.crossoverJie.seconds.kill.api.OrderServiceFacade=empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=3987&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529639501475}, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ExecutionList -  [DUBBO] Executor for listenablefuture is null, will use default executor!, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ZkConnection - Creating new ZookKeeper instance to connect to 192.168.116.168:2181.
[12:00:26] ZkEventThread - Starting ZkClient event thread.
[12:00:26] ZkClient - Awaiting connection to Zookeeper server
[12:00:26] ZkClient - Waiting for keeper state SyncConnected
[12:00:26] ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
[12:00:26] ZkClient - zookeeper state changed (SyncConnected)
[12:00:26] ZkClient - Leaving process event
[12:00:26] ZkClient - State is SyncConnected
[12:00:26] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026108, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026108, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026108, urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026108], dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026108], dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026108, override urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026108], dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] AbstractConfig -  [DUBBO] The service ready on spring started. service: com.crossoverJie.seconds.kill.api.StockServiceFacade, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to local registry, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] AbstractConfig -  [DUBBO] Export dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade to url dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.116.168&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026468, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] AbstractConfig -  [DUBBO] Register dubbo service com.crossoverJie.seconds.kill.api.StockServiceFacade url dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.116.168&bind.port=20880&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026468 to registry registry://192.168.116.168:2181/com.alibaba.dubbo.registry.RegistryService?application=stock-service&dubbo=2.0.1&owner=crossoverJie&pid=4418&registry=zookeeper&timestamp=1529640026468, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ZookeeperRegistry -  [DUBBO] Register: dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026468, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ZookeeperRegistry -  [DUBBO] Subscribe: provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026468, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] ZookeeperRegistry -  [DUBBO] Notify urls for subscribe url provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026468, urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026468], dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] RegistryProtocol -  [DUBBO] original override urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026468], dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] RegistryProtocol -  [DUBBO] subscribe url: provider://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026468, override urls: [empty://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.StockServiceFacade?anyhost=true&application=stock-service&category=configurators&check=false&dubbo=2.0.1&generic=false&interface=com.crossoverJie.seconds.kill.api.StockServiceFacade&methods=getCurrentCount&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026468], dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] Main -  [DUBBO] Dubbo SpringContainer started!, dubbo version: 2.0.1, current host: 192.168.116.168
[12:00:26] Main -  [DUBBO] Dubbo JettyContainer started!, dubbo version: 2.0.1, current host: 192.168.116.168
[12:01:52] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:45888, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:13] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:14] Connection - {conn-10002} pool-connect
[12:02:14] Connection - {conn-10002} pool-connect
[12:02:14] Connection - {conn-10002} pool-connect
[12:02:14] Connection - {conn-10003} pool-connect
[12:02:14] Connection - {conn-10003} pool-connect
[12:02:14] Connection - {conn-10003} pool-connect
[12:02:14] Connection - {conn-10001} pool-connect
[12:02:14] Connection - {conn-10001} pool-connect
[12:02:14] Connection - {conn-10001} pool-connect
[12:02:14] Connection - {conn-10004} connected
[12:02:14] Connection - {conn-10004} connected
[12:02:14] Connection - {conn-10004} connected
[12:02:14] Connection - {conn-10004} pool-connect
[12:02:14] Connection - {conn-10004} pool-connect
[12:02:14] Connection - {conn-10004} pool-connect
[12:02:14] Connection - {conn-10005} connected
[12:02:14] Connection - {conn-10005} connected
[12:02:14] Connection - {conn-10005} connected
[12:02:14] Connection - {conn-10005} pool-connect
[12:02:14] Connection - {conn-10005} pool-connect
[12:02:14] Connection - {conn-10005} pool-connect
[12:02:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:14] Connection - {conn-10006} connected
[12:02:14] Connection - {conn-10006} connected
[12:02:14] Connection - {conn-10006} connected
[12:02:14] Connection - {conn-10006} pool-connect
[12:02:14] Connection - {conn-10006} pool-connect
[12:02:14] Connection - {conn-10006} pool-connect
[12:02:14] Connection - {conn-10007} connected
[12:02:14] Connection - {conn-10007} connected
[12:02:14] Connection - {conn-10007} connected
[12:02:14] Connection - {conn-10007} pool-connect
[12:02:14] Connection - {conn-10007} pool-connect
[12:02:14] Connection - {conn-10007} pool-connect
[12:02:14] Connection - {conn-10008} connected
[12:02:14] Connection - {conn-10008} connected
[12:02:14] Connection - {conn-10008} connected
[12:02:14] Connection - {conn-10008} pool-connect
[12:02:14] Connection - {conn-10008} pool-connect
[12:02:14] Connection - {conn-10008} pool-connect
[12:02:14] Connection - {conn-10009} connected
[12:02:14] Connection - {conn-10009} connected
[12:02:14] Connection - {conn-10009} connected
[12:02:14] Connection - {conn-10009} pool-connect
[12:02:14] Connection - {conn-10009} pool-connect
[12:02:14] Connection - {conn-10009} pool-connect
[12:02:14] Connection - {conn-10010} connected
[12:02:14] Connection - {conn-10010} connected
[12:02:14] Connection - {conn-10010} connected
[12:02:14] Connection - {conn-10010} pool-connect
[12:02:14] Connection - {conn-10010} pool-connect
[12:02:14] Connection - {conn-10010} pool-connect
[12:02:14] Statement - {conn-10002, pstmt-20000} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10002, pstmt-20000} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10002, pstmt-20000} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10003, pstmt-20001} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10003, pstmt-20001} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10003, pstmt-20001} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10001, pstmt-20002} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10001, pstmt-20002} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10001, pstmt-20002} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10009, pstmt-20003} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10009, pstmt-20003} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10009, pstmt-20003} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10009, pstmt-20003} Parameters : [1, 0]
[12:02:14] Statement - {conn-10009, pstmt-20003} Parameters : [1, 0]
[12:02:14] Statement - {conn-10009, pstmt-20003} Parameters : [1, 0]
[12:02:14] Statement - {conn-10009, pstmt-20003} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10009, pstmt-20003} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10009, pstmt-20003} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10007, pstmt-20004} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10007, pstmt-20004} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10007, pstmt-20004} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[12:02:14] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[12:02:14] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[12:02:14] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[12:02:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[12:02:14] Statement - {conn-10003, pstmt-20001} Parameters : [1, 0]
[12:02:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10003, pstmt-20001} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10001, pstmt-20002} Parameters : [1, 0]
[12:02:14] Statement - {conn-10001, pstmt-20002} Parameters : [1, 0]
[12:02:14] Statement - {conn-10001, pstmt-20002} Parameters : [1, 0]
[12:02:14] Statement - {conn-10001, pstmt-20002} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10001, pstmt-20002} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10001, pstmt-20002} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10003, pstmt-20001} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10003, pstmt-20001} executed. 11.062479 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10003, pstmt-20001} executed. 11.062479 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10003, pstmt-20001} executed. 11.062479 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[12:02:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[12:02:14] Statement - {conn-10003, pstmt-20001} clearParameters. 
[12:02:14] PreparedStatementPool - {conn-10003, pstmt-20001} enter cache
[12:02:14] Connection - {conn-10003} pool-recycle
[12:02:14] Connection - {conn-10003} pool-recycle
[12:02:14] Connection - {conn-10003} pool-recycle
[12:02:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:02:14] Statement - {conn-10002, pstmt-20000} Parameters : [1, 0]
[12:02:14] Statement - {conn-10002, pstmt-20000} Parameters : [1, 0]
[12:02:14] Statement - {conn-10002, pstmt-20000} Parameters : [1, 0]
[12:02:14] Statement - {conn-10002, pstmt-20000} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10002, pstmt-20000} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10002, pstmt-20000} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10010, pstmt-20009} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10010, pstmt-20009} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10010, pstmt-20009} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10010, pstmt-20009} Parameters : [1, 0]
[12:02:14] Statement - {conn-10010, pstmt-20009} Parameters : [1, 0]
[12:02:14] Statement - {conn-10010, pstmt-20009} Parameters : [1, 0]
[12:02:14] Statement - {conn-10006, pstmt-20008} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10006, pstmt-20008} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10006, pstmt-20008} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10009, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10009, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10009, pstmt-20003} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10009, pstmt-20003} executed. 27.925792 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10009, pstmt-20003} executed. 27.925792 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10009, pstmt-20003} executed. 27.925792 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10009, pstmt-20003} clearParameters. 
[12:02:14] Statement - {conn-10009, pstmt-20003} clearParameters. 
[12:02:14] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:02:14] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:02:14] Statement - {conn-10004, pstmt-20007} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10004, pstmt-20007} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10005, pstmt-20006} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10005, pstmt-20006} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10008, pstmt-20005} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10008, pstmt-20005} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10002, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10002, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10001, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10001, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10009, pstmt-20003} clearParameters. 
[12:02:14] PreparedStatementPool - {conn-10009, pstmt-20003} enter cache
[12:02:14] Connection - {conn-10009} pool-recycle
[12:02:14] Connection - {conn-10009} pool-recycle
[12:02:14] Connection - {conn-10009} pool-recycle
[12:02:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:02:14] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10007, pstmt-20004} executed. 36.115828 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10007, pstmt-20004} executed. 36.115828 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10007, pstmt-20004} executed. 36.115828 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:02:14] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:02:14] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:02:14] PreparedStatementPool - {conn-10007, pstmt-20004} enter cache
[12:02:14] Connection - {conn-10007} pool-recycle
[12:02:14] Connection - {conn-10007} pool-recycle
[12:02:14] Connection - {conn-10007} pool-recycle
[12:02:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:02:14] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10010, pstmt-20009} executed. 30.840713 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10010, pstmt-20009} executed. 30.840713 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10010, pstmt-20009} executed. 30.840713 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10010, pstmt-20009} clearParameters. 
[12:02:14] Statement - {conn-10010, pstmt-20009} clearParameters. 
[12:02:14] Statement - {conn-10010, pstmt-20009} clearParameters. 
[12:02:14] PreparedStatementPool - {conn-10010, pstmt-20009} enter cache
[12:02:14] Connection - {conn-10010} pool-recycle
[12:02:14] Connection - {conn-10010} pool-recycle
[12:02:14] Connection - {conn-10010} pool-recycle
[12:02:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:02:14] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:14] Connection - {conn-10010} pool-connect
[12:02:14] Connection - {conn-10010} pool-connect
[12:02:14] Connection - {conn-10010} pool-connect
[12:02:14] Statement - {conn-10010, pstmt-20009} Parameters : [1, 0]
[12:02:14] Statement - {conn-10010, pstmt-20009} Parameters : [1, 0]
[12:02:14] Statement - {conn-10010, pstmt-20009} Parameters : [1, 0]
[12:02:14] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10010, pstmt-20009} executed. 0.978753 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10010, pstmt-20009} executed. 0.978753 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10010, pstmt-20009} executed. 0.978753 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10010, pstmt-20009} clearParameters. 
[12:02:14] Statement - {conn-10010, pstmt-20009} clearParameters. 
[12:02:14] Statement - {conn-10010, pstmt-20009} clearParameters. 
[12:02:14] Connection - {conn-10010} pool-recycle
[12:02:14] Connection - {conn-10010} pool-recycle
[12:02:14] Connection - {conn-10010} pool-recycle
[12:02:14] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:02:14] Statement - {conn-10001, pstmt-20002} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:14] Statement - {conn-10001, pstmt-20002} executed. 56.269135 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10001, pstmt-20002} executed. 56.269135 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10001, pstmt-20002} executed. 56.269135 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10001, pstmt-20002} clearParameters. 
[12:02:14] Statement - {conn-10001, pstmt-20002} clearParameters. 
[12:02:14] Statement - {conn-10001, pstmt-20002} clearParameters. 
[12:02:14] PreparedStatementPool - {conn-10001, pstmt-20002} enter cache
[12:02:14] Connection - {conn-10001} pool-recycle
[12:02:14] Connection - {conn-10001} pool-recycle
[12:02:14] Connection - {conn-10001} pool-recycle
[12:02:14] Connection - {conn-10001} pool-connect
[12:02:14] Connection - {conn-10001} pool-connect
[12:02:14] Statement - {conn-10002, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:15] Statement - {conn-10002, pstmt-20000} executed. 82.55725 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10002, pstmt-20000} executed. 82.55725 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:14] Statement - {conn-10008, pstmt-20005} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10008, pstmt-20005} Parameters : [1, 0]
[12:02:15] Statement - {conn-10008, pstmt-20005} Parameters : [1, 0]
[12:02:15] Statement - {conn-10008, pstmt-20005} Parameters : [1, 0]
[12:02:15] Statement - {conn-10008, pstmt-20005} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10008, pstmt-20005} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10008, pstmt-20005} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10005, pstmt-20006} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10005, pstmt-20006} Parameters : [1, 0]
[12:02:15] Statement - {conn-10005, pstmt-20006} Parameters : [1, 0]
[12:02:15] Statement - {conn-10005, pstmt-20006} Parameters : [1, 0]
[12:02:15] Statement - {conn-10005, pstmt-20006} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10005, pstmt-20006} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10005, pstmt-20006} Types : [INTEGER, INTEGER]
[12:02:14] Statement - {conn-10004, pstmt-20007} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:02:15] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:02:15] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:02:15] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:02:15] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:14] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:02:15] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10002, pstmt-20000} executed. 82.55725 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10002, pstmt-20000} clearParameters. 
[12:02:15] Statement - {conn-10002, pstmt-20000} clearParameters. 
[12:02:15] Statement - {conn-10002, pstmt-20000} clearParameters. 
[12:02:15] PreparedStatementPool - {conn-10002, pstmt-20000} enter cache
[12:02:15] Connection - {conn-10002} pool-recycle
[12:02:15] Connection - {conn-10002} pool-recycle
[12:02:15] Connection - {conn-10002} pool-recycle
[12:02:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:02:14] Connection - {conn-10001} pool-connect
[12:02:15] Statement - {conn-10001, pstmt-20010} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] Statement - {conn-10001, pstmt-20010} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] Statement - {conn-10001, pstmt-20010} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:15] Connection - {conn-10002} pool-connect
[12:02:15] Connection - {conn-10002} pool-connect
[12:02:15] Connection - {conn-10002} pool-connect
[12:02:15] Statement - {conn-10002, pstmt-20000} Parameters : [1, 1]
[12:02:15] Statement - {conn-10002, pstmt-20000} Parameters : [1, 1]
[12:02:15] Statement - {conn-10002, pstmt-20000} Parameters : [1, 1]
[12:02:15] Statement - {conn-10002, pstmt-20000} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10002, pstmt-20000} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10002, pstmt-20000} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10005, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:15] Statement - {conn-10005, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:15] Statement - {conn-10005, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:15] Statement - {conn-10005, pstmt-20006} executed. 44.913067 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10005, pstmt-20006} executed. 44.913067 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10005, pstmt-20006} executed. 44.913067 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10005, pstmt-20006} clearParameters. 
[12:02:15] Statement - {conn-10005, pstmt-20006} clearParameters. 
[12:02:15] Statement - {conn-10005, pstmt-20006} clearParameters. 
[12:02:15] PreparedStatementPool - {conn-10005, pstmt-20006} enter cache
[12:02:15] Connection - {conn-10005} pool-recycle
[12:02:15] Connection - {conn-10005} pool-recycle
[12:02:15] Connection - {conn-10005} pool-recycle
[12:02:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 100.958902 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 100.958902 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 100.958902 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:02:15] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:02:15] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:02:15] PreparedStatementPool - {conn-10006, pstmt-20008} enter cache
[12:02:15] Connection - {conn-10006} pool-recycle
[12:02:15] Connection - {conn-10006} pool-recycle
[12:02:15] Connection - {conn-10006} pool-recycle
[12:02:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:02:15] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:15] Statement - {conn-10001, pstmt-20010} Parameters : [null, 1, 手机, 2018-06-22 12:02:14.987]
[12:02:15] Statement - {conn-10001, pstmt-20010} Parameters : [null, 1, 手机, 2018-06-22 12:02:14.987]
[12:02:15] Statement - {conn-10001, pstmt-20010} Parameters : [null, 1, 手机, 2018-06-22 12:02:14.987]
[12:02:15] Statement - {conn-10001, pstmt-20010} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:02:15] Statement - {conn-10001, pstmt-20010} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:02:15] Statement - {conn-10001, pstmt-20010} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:02:15] Statement - {conn-10008, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:15] Statement - {conn-10008, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:15] Statement - {conn-10008, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:15] Statement - {conn-10008, pstmt-20005} executed. 51.467383 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10008, pstmt-20005} executed. 51.467383 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10008, pstmt-20005} executed. 51.467383 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10008, pstmt-20005} clearParameters. 
[12:02:15] Statement - {conn-10008, pstmt-20005} clearParameters. 
[12:02:15] Statement - {conn-10008, pstmt-20005} clearParameters. 
[12:02:15] PreparedStatementPool - {conn-10008, pstmt-20005} enter cache
[12:02:15] Connection - {conn-10008} pool-recycle
[12:02:15] Connection - {conn-10008} pool-recycle
[12:02:15] Connection - {conn-10008} pool-recycle
[12:02:15] Connection - {conn-10008} pool-connect
[12:02:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:02:15] Connection - {conn-10008} pool-connect
[12:02:15] Connection - {conn-10008} pool-connect
[12:02:15] Statement - {conn-10001, pstmt-20010} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:02:14.987')
[12:02:15] Statement - {conn-10001, pstmt-20010} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:02:14.987')
[12:02:15] Statement - {conn-10001, pstmt-20010} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:02:14.987')
[12:02:15] Statement - {conn-10001, pstmt-20010} executed. 20.874421 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] Statement - {conn-10001, pstmt-20010} executed. 20.874421 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] Statement - {conn-10001, pstmt-20010} executed. 20.874421 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] ResultSet - {conn-10001, pstmt-20010, rs-50000} open
[12:02:15] ResultSet - {conn-10001, pstmt-20010, rs-50000} open
[12:02:15] ResultSet - {conn-10001, pstmt-20010, rs-50000} Header: [GENERATED_KEY]
[12:02:15] ResultSet - {conn-10001, pstmt-20010, rs-50000} Header: [GENERATED_KEY]
[12:02:15] ResultSet - {conn-10001, pstmt-20010, rs-50000} Result: [69]
[12:02:15] ResultSet - {conn-10001, pstmt-20010, rs-50000} Result: [69]
[12:02:15] ResultSet - {conn-10001, pstmt-20010, rs-50000} closed
[12:02:15] ResultSet - {conn-10001, pstmt-20010, rs-50000} closed
[12:02:15] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:15] Connection - {conn-10006} pool-connect
[12:02:15] Connection - {conn-10006} pool-connect
[12:02:15] Connection - {conn-10006} pool-connect
[12:02:15] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:15] Connection - {conn-10005} pool-connect
[12:02:15] Connection - {conn-10005} pool-connect
[12:02:15] Connection - {conn-10005} pool-connect
[12:02:15] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:15] Connection - {conn-10010} pool-connect
[12:02:15] Connection - {conn-10010} pool-connect
[12:02:15] Connection - {conn-10010} pool-connect
[12:02:15] Connection - {conn-10007} pool-connect
[12:02:15] Connection - {conn-10007} pool-connect
[12:02:15] Connection - {conn-10007} pool-connect
[12:02:15] Statement - {conn-10002, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:02:15] Statement - {conn-10002, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:02:15] Statement - {conn-10002, pstmt-20000} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:02:15] Statement - {conn-10002, pstmt-20000} executed. 102.332033 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10002, pstmt-20000} executed. 102.332033 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10002, pstmt-20000} executed. 102.332033 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10002, pstmt-20000} clearParameters. 
[12:02:15] Statement - {conn-10002, pstmt-20000} clearParameters. 
[12:02:15] Statement - {conn-10002, pstmt-20000} clearParameters. 
[12:02:15] Connection - {conn-10002} pool-recycle
[12:02:15] Connection - {conn-10002} pool-recycle
[12:02:15] Connection - {conn-10002} pool-recycle
[12:02:15] Statement - {conn-10008, pstmt-20005} Parameters : [1, 1]
[12:02:15] Statement - {conn-10008, pstmt-20005} Parameters : [1, 1]
[12:02:15] Statement - {conn-10008, pstmt-20005} Parameters : [1, 1]
[12:02:15] Statement - {conn-10008, pstmt-20005} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10008, pstmt-20005} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10008, pstmt-20005} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10010, pstmt-20009} Parameters : [1, 1]
[12:02:15] Statement - {conn-10010, pstmt-20009} Parameters : [1, 1]
[12:02:15] Statement - {conn-10010, pstmt-20009} Parameters : [1, 1]
[12:02:15] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10010, pstmt-20009} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10001, pstmt-20010} clearParameters. 
[12:02:15] Statement - {conn-10001, pstmt-20010} clearParameters. 
[12:02:15] Statement - {conn-10001, pstmt-20010} clearParameters. 
[12:02:15] PreparedStatementPool - {conn-10001, pstmt-20010} enter cache
[12:02:15] Connection - {conn-10001} pool-recycle
[12:02:15] Connection - {conn-10001} pool-recycle
[12:02:15] Connection - {conn-10001} pool-recycle
[12:02:15] Statement - {conn-10008, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:02:15] Statement - {conn-10008, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:02:15] Statement - {conn-10008, pstmt-20005} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:02:15] Statement - {conn-10008, pstmt-20005} executed. 5.888267 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10008, pstmt-20005} executed. 5.888267 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10008, pstmt-20005} executed. 5.888267 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10008, pstmt-20005} clearParameters. 
[12:02:15] Statement - {conn-10008, pstmt-20005} clearParameters. 
[12:02:15] Statement - {conn-10008, pstmt-20005} clearParameters. 
[12:02:15] Connection - {conn-10008} pool-recycle
[12:02:15] Connection - {conn-10008} pool-recycle
[12:02:15] Connection - {conn-10008} pool-recycle
[12:02:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:02:15] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:02:15] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:02:15] Statement - {conn-10010, pstmt-20009} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:02:15] Statement - {conn-10010, pstmt-20009} executed. 9.252772 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10010, pstmt-20009} executed. 9.252772 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10010, pstmt-20009} executed. 9.252772 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10010, pstmt-20009} clearParameters. 
[12:02:15] Statement - {conn-10010, pstmt-20009} clearParameters. 
[12:02:15] Statement - {conn-10010, pstmt-20009} clearParameters. 
[12:02:15] Connection - {conn-10010} pool-recycle
[12:02:15] Connection - {conn-10010} pool-recycle
[12:02:15] Connection - {conn-10010} pool-recycle
[12:02:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:02:15] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:15] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:15] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:02:15] Statement - {conn-10004, pstmt-20007} executed. 118.75402 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10004, pstmt-20007} executed. 118.75402 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10004, pstmt-20007} executed. 118.75402 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:02:15] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:02:15] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:02:15] PreparedStatementPool - {conn-10004, pstmt-20007} enter cache
[12:02:15] Connection - {conn-10004} pool-recycle
[12:02:15] Connection - {conn-10004} pool-recycle
[12:02:15] Connection - {conn-10004} pool-recycle
[12:02:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:02:15] Connection - {conn-10004} pool-connect
[12:02:15] Connection - {conn-10004} pool-connect
[12:02:15] Connection - {conn-10004} pool-connect
[12:02:15] Statement - {conn-10004, pstmt-20011} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] Statement - {conn-10004, pstmt-20011} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] Statement - {conn-10004, pstmt-20011} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 12:02:15.135]
[12:02:15] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 12:02:15.135]
[12:02:15] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 12:02:15.135]
[12:02:15] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:02:15] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:02:15] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:02:15] Statement - {conn-10007, pstmt-20004} Parameters : [1, 1]
[12:02:15] Statement - {conn-10007, pstmt-20004} Parameters : [1, 1]
[12:02:15] Statement - {conn-10007, pstmt-20004} Parameters : [1, 1]
[12:02:15] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10005, pstmt-20006} Parameters : [1, 1]
[12:02:15] Statement - {conn-10005, pstmt-20006} Parameters : [1, 1]
[12:02:15] Statement - {conn-10005, pstmt-20006} Parameters : [1, 1]
[12:02:15] Statement - {conn-10005, pstmt-20006} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10005, pstmt-20006} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10005, pstmt-20006} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10006, pstmt-20008} Parameters : [1, 1]
[12:02:15] Statement - {conn-10006, pstmt-20008} Parameters : [1, 1]
[12:02:15] Statement - {conn-10006, pstmt-20008} Parameters : [1, 1]
[12:02:15] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10005, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:02:15] Statement - {conn-10005, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:02:15] Statement - {conn-10005, pstmt-20006} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:02:15] Statement - {conn-10005, pstmt-20006} executed. 23.904755 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10005, pstmt-20006} executed. 23.904755 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10005, pstmt-20006} executed. 23.904755 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10005, pstmt-20006} clearParameters. 
[12:02:15] Statement - {conn-10005, pstmt-20006} clearParameters. 
[12:02:15] Statement - {conn-10005, pstmt-20006} clearParameters. 
[12:02:15] Connection - {conn-10005} pool-recycle
[12:02:15] Connection - {conn-10005} pool-recycle
[12:02:15] Connection - {conn-10005} pool-recycle
[12:02:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:02:15] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:02:15] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:02:15] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:02:15] Statement - {conn-10007, pstmt-20004} executed. 43.465041 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10007, pstmt-20004} executed. 43.465041 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10007, pstmt-20004} executed. 43.465041 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:02:15] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:02:15] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:02:15] Connection - {conn-10007} pool-recycle
[12:02:15] Connection - {conn-10007} pool-recycle
[12:02:15] Connection - {conn-10007} pool-recycle
[12:02:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:02:15] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:15] Connection - {conn-10007} pool-connect
[12:02:15] Connection - {conn-10007} pool-connect
[12:02:15] Connection - {conn-10007} pool-connect
[12:02:15] Statement - {conn-10007, pstmt-20004} Parameters : [1, 2]
[12:02:15] Statement - {conn-10007, pstmt-20004} Parameters : [1, 2]
[12:02:15] Statement - {conn-10007, pstmt-20004} Parameters : [1, 2]
[12:02:15] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 68.915442 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 68.915442 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 68.915442 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:15] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:02:15] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:02:15] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:02:15] Connection - {conn-10006} pool-recycle
[12:02:15] Connection - {conn-10006} pool-recycle
[12:02:15] Connection - {conn-10006} pool-recycle
[12:02:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:02:15] Connection - {conn-10006} pool-connect
[12:02:15] Connection - {conn-10006} pool-connect
[12:02:15] Connection - {conn-10006} pool-connect
[12:02:15] Statement - {conn-10006, pstmt-20008} Parameters : [1, 2]
[12:02:15] Statement - {conn-10006, pstmt-20008} Parameters : [1, 2]
[12:02:15] Statement - {conn-10006, pstmt-20008} Parameters : [1, 2]
[12:02:15] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:02:15.135')
[12:02:15] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:02:15.135')
[12:02:15] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:15] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:02:15.135')
[12:02:15] Statement - {conn-10004, pstmt-20011} executed. 63.244391 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] Statement - {conn-10004, pstmt-20011} executed. 63.244391 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] Statement - {conn-10004, pstmt-20011} executed. 63.244391 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] ResultSet - {conn-10004, pstmt-20011, rs-50001} open
[12:02:15] ResultSet - {conn-10004, pstmt-20011, rs-50001} open
[12:02:15] ResultSet - {conn-10004, pstmt-20011, rs-50001} Header: [GENERATED_KEY]
[12:02:15] ResultSet - {conn-10004, pstmt-20011, rs-50001} Header: [GENERATED_KEY]
[12:02:15] ResultSet - {conn-10004, pstmt-20011, rs-50001} Result: [70]
[12:02:15] ResultSet - {conn-10004, pstmt-20011, rs-50001} Result: [70]
[12:02:15] ResultSet - {conn-10004, pstmt-20011, rs-50001} closed
[12:02:15] ResultSet - {conn-10004, pstmt-20011, rs-50001} closed
[12:02:15] Statement - {conn-10004, pstmt-20011} clearParameters. 
[12:02:15] Statement - {conn-10004, pstmt-20011} clearParameters. 
[12:02:15] Statement - {conn-10004, pstmt-20011} clearParameters. 
[12:02:15] PreparedStatementPool - {conn-10004, pstmt-20011} enter cache
[12:02:15] Connection - {conn-10004} pool-recycle
[12:02:15] Connection - {conn-10004} pool-recycle
[12:02:15] Connection - {conn-10004} pool-recycle
[12:02:15] Connection - {conn-10004} pool-connect
[12:02:15] Connection - {conn-10004} pool-connect
[12:02:15] Connection - {conn-10004} pool-connect
[12:02:15] Statement - {conn-10004, pstmt-20007} Parameters : [1, 2]
[12:02:15] Statement - {conn-10004, pstmt-20007} Parameters : [1, 2]
[12:02:15] Statement - {conn-10004, pstmt-20007} Parameters : [1, 2]
[12:02:15] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:02:15] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:02:15] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:02:15] Statement - {conn-10004, pstmt-20007} executed. 0.950369 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10004, pstmt-20007} executed. 0.950369 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10004, pstmt-20007} executed. 0.950369 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:02:15] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:02:15] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:02:15] Connection - {conn-10004} pool-recycle
[12:02:15] Connection - {conn-10004} pool-recycle
[12:02:15] Connection - {conn-10004} pool-recycle
[12:02:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:02:15] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:02:15] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:02:15] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:02:15] Statement - {conn-10007, pstmt-20004} executed. 29.322463 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10007, pstmt-20004} executed. 29.322463 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10007, pstmt-20004} executed. 29.322463 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:02:15] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:02:15] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:02:15] Connection - {conn-10007} pool-recycle
[12:02:15] Connection - {conn-10007} pool-recycle
[12:02:15] Connection - {conn-10007} pool-recycle
[12:02:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:02:15] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:15] Connection - {conn-10007} pool-connect
[12:02:15] Connection - {conn-10007} pool-connect
[12:02:15] Connection - {conn-10007} pool-connect
[12:02:15] Statement - {conn-10007, pstmt-20004} Parameters : [1, 2]
[12:02:15] Statement - {conn-10007, pstmt-20004} Parameters : [1, 2]
[12:02:15] Statement - {conn-10007, pstmt-20004} Parameters : [1, 2]
[12:02:15] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:02:15] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:02:15] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:02:15] Statement - {conn-10007, pstmt-20004} executed. 0.880204 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10007, pstmt-20004} executed. 0.880204 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10007, pstmt-20004} executed. 0.880204 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:02:15] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:02:15] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:02:15] Connection - {conn-10007} pool-recycle
[12:02:15] Connection - {conn-10007} pool-recycle
[12:02:15] Connection - {conn-10007} pool-recycle
[12:02:15] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 26.902517 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 26.902517 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 26.902517 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:02:15] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:02:15] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:02:15] Connection - {conn-10006} pool-recycle
[12:02:15] Connection - {conn-10006} pool-recycle
[12:02:15] Connection - {conn-10006} pool-recycle
[12:02:15] Connection - {conn-10006} pool-connect
[12:02:15] Connection - {conn-10006} pool-connect
[12:02:15] Connection - {conn-10006} pool-connect
[12:02:15] Statement - {conn-10006, pstmt-20012} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] Statement - {conn-10006, pstmt-20012} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] Statement - {conn-10006, pstmt-20012} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] Statement - {conn-10006, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 12:02:15.251]
[12:02:15] Statement - {conn-10006, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 12:02:15.251]
[12:02:15] Statement - {conn-10006, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 12:02:15.251]
[12:02:15] Statement - {conn-10006, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:02:15] Statement - {conn-10006, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:02:15] Statement - {conn-10006, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:02:15] Statement - {conn-10006, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:02:15.251')
[12:02:15] Statement - {conn-10006, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:02:15.251')
[12:02:15] Statement - {conn-10006, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:02:15.251')
[12:02:15] Statement - {conn-10006, pstmt-20012} executed. 6.12077 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] Statement - {conn-10006, pstmt-20012} executed. 6.12077 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] Statement - {conn-10006, pstmt-20012} executed. 6.12077 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] ResultSet - {conn-10006, pstmt-20012, rs-50002} open
[12:02:15] ResultSet - {conn-10006, pstmt-20012, rs-50002} open
[12:02:15] ResultSet - {conn-10006, pstmt-20012, rs-50002} Header: [GENERATED_KEY]
[12:02:15] ResultSet - {conn-10006, pstmt-20012, rs-50002} Header: [GENERATED_KEY]
[12:02:15] ResultSet - {conn-10006, pstmt-20012, rs-50002} Result: [71]
[12:02:15] ResultSet - {conn-10006, pstmt-20012, rs-50002} Result: [71]
[12:02:15] ResultSet - {conn-10006, pstmt-20012, rs-50002} closed
[12:02:15] ResultSet - {conn-10006, pstmt-20012, rs-50002} closed
[12:02:15] Statement - {conn-10006, pstmt-20012} clearParameters. 
[12:02:15] Statement - {conn-10006, pstmt-20012} clearParameters. 
[12:02:15] Statement - {conn-10006, pstmt-20012} clearParameters. 
[12:02:15] PreparedStatementPool - {conn-10006, pstmt-20012} enter cache
[12:02:15] Connection - {conn-10006} pool-recycle
[12:02:15] Connection - {conn-10006} pool-recycle
[12:02:15] Connection - {conn-10006} pool-recycle
[12:02:15] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:02:15] Connection - {conn-10006} pool-connect
[12:02:15] Connection - {conn-10006} pool-connect
[12:02:15] Connection - {conn-10006} pool-connect
[12:02:15] Statement - {conn-10006, pstmt-20008} Parameters : [1, 3]
[12:02:15] Statement - {conn-10006, pstmt-20008} Parameters : [1, 3]
[12:02:15] Statement - {conn-10006, pstmt-20008} Parameters : [1, 3]
[12:02:15] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 27.412664 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 27.412664 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10006, pstmt-20008} executed. 27.412664 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:02:15] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:02:15] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:02:15] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:02:15] Connection - {conn-10006} pool-recycle
[12:02:15] Connection - {conn-10006} pool-recycle
[12:02:15] Connection - {conn-10006} pool-recycle
[12:02:15] Connection - {conn-10006} pool-connect
[12:02:15] Connection - {conn-10006} pool-connect
[12:02:15] Connection - {conn-10006} pool-connect
[12:02:15] Statement - {conn-10006, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 12:02:15.348]
[12:02:15] Statement - {conn-10006, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 12:02:15.348]
[12:02:15] Statement - {conn-10006, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 12:02:15.348]
[12:02:15] Statement - {conn-10006, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:02:15] Statement - {conn-10006, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:02:15] Statement - {conn-10006, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:02:15] Statement - {conn-10006, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:02:15.348')
[12:02:15] Statement - {conn-10006, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:02:15.348')
[12:02:15] Statement - {conn-10006, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:02:15.348')
[12:02:15] Statement - {conn-10006, pstmt-20012} executed. 12.98242 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] Statement - {conn-10006, pstmt-20012} executed. 12.98242 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] Statement - {conn-10006, pstmt-20012} executed. 12.98242 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:02:15] ResultSet - {conn-10006, pstmt-20012, rs-50003} open
[12:02:15] ResultSet - {conn-10006, pstmt-20012, rs-50003} open
[12:02:15] ResultSet - {conn-10006, pstmt-20012, rs-50003} Header: [GENERATED_KEY]
[12:02:15] ResultSet - {conn-10006, pstmt-20012, rs-50003} Header: [GENERATED_KEY]
[12:02:15] ResultSet - {conn-10006, pstmt-20012, rs-50003} Result: [72]
[12:02:15] ResultSet - {conn-10006, pstmt-20012, rs-50003} Result: [72]
[12:02:15] ResultSet - {conn-10006, pstmt-20012, rs-50003} closed
[12:02:15] ResultSet - {conn-10006, pstmt-20012, rs-50003} closed
[12:02:15] Statement - {conn-10006, pstmt-20012} clearParameters. 
[12:02:15] Statement - {conn-10006, pstmt-20012} clearParameters. 
[12:02:15] Statement - {conn-10006, pstmt-20012} clearParameters. 
[12:02:15] Connection - {conn-10006} pool-recycle
[12:02:15] Connection - {conn-10006} pool-recycle
[12:02:15] Connection - {conn-10006} pool-recycle
[12:03:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[12:03:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45888, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:04:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45888, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:04:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[12:05:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45888, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:05:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[12:06:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45888, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:06:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[12:06:31] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:06:31] Connection - {conn-10006} pool-connect
[12:06:31] Connection - {conn-10006} pool-connect
[12:06:31] Connection - {conn-10006} pool-connect
[12:06:31] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:06:31] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:06:31] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:06:31] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:31] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:31] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 3.839417 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 3.839417 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 3.839417 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:31] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:31] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:31] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:31] Connection - {conn-10006} pool-recycle
[12:06:31] Connection - {conn-10006} pool-recycle
[12:06:31] Connection - {conn-10006} pool-recycle
[12:06:31] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:06:31] Connection - {conn-10006} pool-connect
[12:06:31] Connection - {conn-10006} pool-connect
[12:06:31] Connection - {conn-10006} pool-connect
[12:06:31] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:06:31] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:06:31] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:06:31] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:31] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:31] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 0.912027 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 0.912027 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 0.912027 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:31] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:31] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:31] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:31] Connection - {conn-10006} pool-recycle
[12:06:31] Connection - {conn-10006} pool-recycle
[12:06:31] Connection - {conn-10006} pool-recycle
[12:06:31] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:06:31] Connection - {conn-10007} pool-connect
[12:06:31] Connection - {conn-10007} pool-connect
[12:06:31] Connection - {conn-10007} pool-connect
[12:06:31] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:06:31] Statement - {conn-10007, pstmt-20013} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:06:31] Statement - {conn-10007, pstmt-20013} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:06:31] Statement - {conn-10007, pstmt-20013} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:06:31] Statement - {conn-10007, pstmt-20013} Parameters : [null, 1, 手机, 2018-06-22 12:06:31.874]
[12:06:31] Statement - {conn-10007, pstmt-20013} Parameters : [null, 1, 手机, 2018-06-22 12:06:31.874]
[12:06:31] Statement - {conn-10007, pstmt-20013} Parameters : [null, 1, 手机, 2018-06-22 12:06:31.874]
[12:06:31] Statement - {conn-10007, pstmt-20013} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:06:31] Statement - {conn-10007, pstmt-20013} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:06:31] Statement - {conn-10007, pstmt-20013} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:06:31] Connection - {conn-10006} pool-connect
[12:06:31] Connection - {conn-10006} pool-connect
[12:06:31] Connection - {conn-10006} pool-connect
[12:06:31] Statement - {conn-10007, pstmt-20013} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:06:31.874')
[12:06:31] Statement - {conn-10007, pstmt-20013} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:06:31.874')
[12:06:31] Statement - {conn-10007, pstmt-20013} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:06:31.874')
[12:06:31] Statement - {conn-10007, pstmt-20013} executed. 2.807385 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:06:31] Statement - {conn-10007, pstmt-20013} executed. 2.807385 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:06:31] Statement - {conn-10007, pstmt-20013} executed. 2.807385 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:06:31] Statement - {conn-10006, pstmt-20008} Parameters : [1, 1]
[12:06:31] Statement - {conn-10006, pstmt-20008} Parameters : [1, 1]
[12:06:31] Statement - {conn-10006, pstmt-20008} Parameters : [1, 1]
[12:06:31] ResultSet - {conn-10007, pstmt-20013, rs-50004} open
[12:06:31] ResultSet - {conn-10007, pstmt-20013, rs-50004} open
[12:06:31] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:31] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:31] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:31] ResultSet - {conn-10007, pstmt-20013, rs-50004} Header: [GENERATED_KEY]
[12:06:31] ResultSet - {conn-10007, pstmt-20013, rs-50004} Header: [GENERATED_KEY]
[12:06:31] ResultSet - {conn-10007, pstmt-20013, rs-50004} Result: [73]
[12:06:31] ResultSet - {conn-10007, pstmt-20013, rs-50004} Result: [73]
[12:06:31] ResultSet - {conn-10007, pstmt-20013, rs-50004} closed
[12:06:31] ResultSet - {conn-10007, pstmt-20013, rs-50004} closed
[12:06:31] Statement - {conn-10007, pstmt-20013} clearParameters. 
[12:06:31] Statement - {conn-10007, pstmt-20013} clearParameters. 
[12:06:31] Statement - {conn-10007, pstmt-20013} clearParameters. 
[12:06:31] PreparedStatementPool - {conn-10007, pstmt-20013} enter cache
[12:06:31] Connection - {conn-10007} pool-recycle
[12:06:31] Connection - {conn-10007} pool-recycle
[12:06:31] Connection - {conn-10007} pool-recycle
[12:06:31] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 41.468274 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 41.468274 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 41.468274 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:31] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:31] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:31] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:31] Connection - {conn-10006} pool-recycle
[12:06:31] Connection - {conn-10006} pool-recycle
[12:06:31] Connection - {conn-10006} pool-recycle
[12:06:31] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:06:31] Connection - {conn-10006} pool-connect
[12:06:31] Connection - {conn-10006} pool-connect
[12:06:31] Connection - {conn-10006} pool-connect
[12:06:31] Statement - {conn-10006, pstmt-20008} Parameters : [1, 1]
[12:06:31] Statement - {conn-10006, pstmt-20008} Parameters : [1, 1]
[12:06:31] Statement - {conn-10006, pstmt-20008} Parameters : [1, 1]
[12:06:31] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:31] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:31] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 0.831649 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 0.831649 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:31] Statement - {conn-10006, pstmt-20008} executed. 0.831649 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:31] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:31] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:31] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:31] Connection - {conn-10006} pool-recycle
[12:06:31] Connection - {conn-10006} pool-recycle
[12:06:31] Connection - {conn-10006} pool-recycle
[12:06:31] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:06:31] Connection - {conn-10006} pool-connect
[12:06:31] Connection - {conn-10006} pool-connect
[12:06:31] Connection - {conn-10006} pool-connect
[12:06:31] Statement - {conn-10006, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 12:06:31.945]
[12:06:31] Statement - {conn-10006, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 12:06:31.945]
[12:06:31] Statement - {conn-10006, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 12:06:31.945]
[12:06:31] Statement - {conn-10006, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:06:31] Statement - {conn-10006, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:06:31] Statement - {conn-10006, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:06:31] Connection - {conn-10007} pool-connect
[12:06:31] Connection - {conn-10007} pool-connect
[12:06:31] Connection - {conn-10007} pool-connect
[12:06:31] Statement - {conn-10007, pstmt-20004} Parameters : [1, 2]
[12:06:31] Statement - {conn-10007, pstmt-20004} Parameters : [1, 2]
[12:06:31] Statement - {conn-10007, pstmt-20004} Parameters : [1, 2]
[12:06:31] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:06:31] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:06:31] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:06:31] Statement - {conn-10006, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:06:31.945')
[12:06:31] Statement - {conn-10006, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:06:31.945')
[12:06:31] Statement - {conn-10006, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:06:31.945')
[12:06:31] Statement - {conn-10006, pstmt-20012} executed. 9.33231 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:06:31] Statement - {conn-10006, pstmt-20012} executed. 9.33231 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:06:31] Statement - {conn-10006, pstmt-20012} executed. 9.33231 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:06:31] ResultSet - {conn-10006, pstmt-20012, rs-50005} open
[12:06:31] ResultSet - {conn-10006, pstmt-20012, rs-50005} open
[12:06:31] ResultSet - {conn-10006, pstmt-20012, rs-50005} Header: [GENERATED_KEY]
[12:06:31] ResultSet - {conn-10006, pstmt-20012, rs-50005} Header: [GENERATED_KEY]
[12:06:31] ResultSet - {conn-10006, pstmt-20012, rs-50005} Result: [74]
[12:06:31] ResultSet - {conn-10006, pstmt-20012, rs-50005} Result: [74]
[12:06:31] ResultSet - {conn-10006, pstmt-20012, rs-50005} closed
[12:06:31] ResultSet - {conn-10006, pstmt-20012, rs-50005} closed
[12:06:31] Statement - {conn-10006, pstmt-20012} clearParameters. 
[12:06:31] Statement - {conn-10006, pstmt-20012} clearParameters. 
[12:06:31] Statement - {conn-10006, pstmt-20012} clearParameters. 
[12:06:31] Connection - {conn-10006} pool-recycle
[12:06:31] Connection - {conn-10006} pool-recycle
[12:06:31] Connection - {conn-10006} pool-recycle
[12:06:32] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:06:32] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:06:32] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:06:32] Statement - {conn-10007, pstmt-20004} executed. 52.753102 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:32] Statement - {conn-10007, pstmt-20004} executed. 52.753102 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:32] Statement - {conn-10007, pstmt-20004} executed. 52.753102 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:32] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:06:32] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:06:32] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:06:32] Connection - {conn-10007} pool-recycle
[12:06:32] Connection - {conn-10007} pool-recycle
[12:06:32] Connection - {conn-10007} pool-recycle
[12:06:32] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:06:32] Connection - {conn-10007} pool-connect
[12:06:32] Connection - {conn-10007} pool-connect
[12:06:32] Connection - {conn-10007} pool-connect
[12:06:32] Statement - {conn-10007, pstmt-20013} Parameters : [null, 1, 手机, 2018-06-22 12:06:32.008]
[12:06:32] Statement - {conn-10007, pstmt-20013} Parameters : [null, 1, 手机, 2018-06-22 12:06:32.008]
[12:06:32] Statement - {conn-10007, pstmt-20013} Parameters : [null, 1, 手机, 2018-06-22 12:06:32.008]
[12:06:32] Statement - {conn-10007, pstmt-20013} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:06:32] Statement - {conn-10007, pstmt-20013} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:06:32] Statement - {conn-10007, pstmt-20013} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:06:32] Connection - {conn-10006} pool-connect
[12:06:32] Connection - {conn-10006} pool-connect
[12:06:32] Connection - {conn-10006} pool-connect
[12:06:32] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:06:32] Statement - {conn-10007, pstmt-20013} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:06:32.008')
[12:06:32] Statement - {conn-10007, pstmt-20013} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:06:32.008')
[12:06:32] Statement - {conn-10007, pstmt-20013} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:06:32.008')
[12:06:32] Statement - {conn-10007, pstmt-20013} executed. 5.408218 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:06:32] Statement - {conn-10007, pstmt-20013} executed. 5.408218 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:06:32] Statement - {conn-10007, pstmt-20013} executed. 5.408218 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:06:32] ResultSet - {conn-10007, pstmt-20013, rs-50006} open
[12:06:32] ResultSet - {conn-10007, pstmt-20013, rs-50006} open
[12:06:32] ResultSet - {conn-10007, pstmt-20013, rs-50006} Header: [GENERATED_KEY]
[12:06:32] ResultSet - {conn-10007, pstmt-20013, rs-50006} Header: [GENERATED_KEY]
[12:06:32] ResultSet - {conn-10007, pstmt-20013, rs-50006} Result: [75]
[12:06:32] ResultSet - {conn-10007, pstmt-20013, rs-50006} Result: [75]
[12:06:32] ResultSet - {conn-10007, pstmt-20013, rs-50006} closed
[12:06:32] ResultSet - {conn-10007, pstmt-20013, rs-50006} closed
[12:06:32] Statement - {conn-10007, pstmt-20013} clearParameters. 
[12:06:32] Statement - {conn-10007, pstmt-20013} clearParameters. 
[12:06:32] Statement - {conn-10007, pstmt-20013} clearParameters. 
[12:06:32] Connection - {conn-10007} pool-recycle
[12:06:32] Connection - {conn-10007} pool-recycle
[12:06:32] Connection - {conn-10007} pool-recycle
[12:06:32] Connection - {conn-10004} pool-connect
[12:06:32] Connection - {conn-10004} pool-connect
[12:06:32] Connection - {conn-10004} pool-connect
[12:06:32] Statement - {conn-10006, pstmt-20008} Parameters : [1, 3]
[12:06:32] Statement - {conn-10006, pstmt-20008} Parameters : [1, 3]
[12:06:32] Statement - {conn-10006, pstmt-20008} Parameters : [1, 3]
[12:06:32] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:32] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:32] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:32] Statement - {conn-10004, pstmt-20007} Parameters : [1, 3]
[12:06:32] Statement - {conn-10004, pstmt-20007} Parameters : [1, 3]
[12:06:32] Statement - {conn-10004, pstmt-20007} Parameters : [1, 3]
[12:06:32] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:06:32] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:06:32] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 1.508194 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 1.508194 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 1.508194 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:32] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:32] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:32] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:32] Connection - {conn-10006} pool-recycle
[12:06:32] Connection - {conn-10006} pool-recycle
[12:06:32] Connection - {conn-10006} pool-recycle
[12:06:32] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:06:32] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:06:32] Connection - {conn-10006} pool-connect
[12:06:32] Connection - {conn-10006} pool-connect
[12:06:32] Connection - {conn-10006} pool-connect
[12:06:32] Statement - {conn-10006, pstmt-20008} Parameters : [1, 3]
[12:06:32] Statement - {conn-10006, pstmt-20008} Parameters : [1, 3]
[12:06:32] Statement - {conn-10006, pstmt-20008} Parameters : [1, 3]
[12:06:32] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:32] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:32] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 0.939945 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 0.939945 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 0.939945 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:32] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:32] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:32] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:32] Connection - {conn-10006} pool-recycle
[12:06:32] Connection - {conn-10006} pool-recycle
[12:06:32] Connection - {conn-10006} pool-recycle
[12:06:32] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:06:32] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:06:32] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:06:32] Connection - {conn-10006} pool-connect
[12:06:32] Connection - {conn-10006} pool-connect
[12:06:32] Connection - {conn-10006} pool-connect
[12:06:32] Statement - {conn-10006, pstmt-20008} Parameters : [1, 3]
[12:06:32] Statement - {conn-10006, pstmt-20008} Parameters : [1, 3]
[12:06:32] Statement - {conn-10006, pstmt-20008} Parameters : [1, 3]
[12:06:32] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:32] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:32] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 0.766197 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 0.766197 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 0.766197 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:32] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:32] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:32] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:32] Connection - {conn-10006} pool-recycle
[12:06:32] Connection - {conn-10006} pool-recycle
[12:06:32] Connection - {conn-10006} pool-recycle
[12:06:32] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:06:32] Connection - {conn-10006} pool-connect
[12:06:32] Connection - {conn-10006} pool-connect
[12:06:32] Connection - {conn-10006} pool-connect
[12:06:32] Statement - {conn-10006, pstmt-20008} Parameters : [1, 3]
[12:06:32] Statement - {conn-10006, pstmt-20008} Parameters : [1, 3]
[12:06:32] Statement - {conn-10006, pstmt-20008} Parameters : [1, 3]
[12:06:32] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:32] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:32] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 0.726017 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 0.726017 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:32] Statement - {conn-10006, pstmt-20008} executed. 0.726017 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:32] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:32] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:32] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:06:32] Connection - {conn-10006} pool-recycle
[12:06:32] Connection - {conn-10006} pool-recycle
[12:06:32] Connection - {conn-10006} pool-recycle
[12:06:32] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:06:32] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:06:32] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:06:32] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:06:32] Statement - {conn-10004, pstmt-20007} executed. 66.40597 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:32] Statement - {conn-10004, pstmt-20007} executed. 66.40597 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:32] Statement - {conn-10004, pstmt-20007} executed. 66.40597 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:06:32] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:06:32] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:06:32] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:06:32] Connection - {conn-10004} pool-recycle
[12:06:32] Connection - {conn-10004} pool-recycle
[12:06:32] Connection - {conn-10004} pool-recycle
[12:06:32] Connection - {conn-10004} pool-connect
[12:06:32] Connection - {conn-10004} pool-connect
[12:06:32] Connection - {conn-10004} pool-connect
[12:06:32] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 12:06:32.086]
[12:06:32] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 12:06:32.086]
[12:06:32] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 12:06:32.086]
[12:06:32] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:06:32] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:06:32] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:06:32] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:06:32.086')
[12:06:32] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:06:32.086')
[12:06:32] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:06:32.086')
[12:06:32] Statement - {conn-10004, pstmt-20011} executed. 1.866293 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:06:32] Statement - {conn-10004, pstmt-20011} executed. 1.866293 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:06:32] Statement - {conn-10004, pstmt-20011} executed. 1.866293 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:06:32] ResultSet - {conn-10004, pstmt-20011, rs-50007} open
[12:06:32] ResultSet - {conn-10004, pstmt-20011, rs-50007} open
[12:06:32] ResultSet - {conn-10004, pstmt-20011, rs-50007} Header: [GENERATED_KEY]
[12:06:32] ResultSet - {conn-10004, pstmt-20011, rs-50007} Header: [GENERATED_KEY]
[12:06:32] ResultSet - {conn-10004, pstmt-20011, rs-50007} Result: [76]
[12:06:32] ResultSet - {conn-10004, pstmt-20011, rs-50007} Result: [76]
[12:06:32] ResultSet - {conn-10004, pstmt-20011, rs-50007} closed
[12:06:32] ResultSet - {conn-10004, pstmt-20011, rs-50007} closed
[12:06:32] Statement - {conn-10004, pstmt-20011} clearParameters. 
[12:06:32] Statement - {conn-10004, pstmt-20011} clearParameters. 
[12:06:32] Statement - {conn-10004, pstmt-20011} clearParameters. 
[12:06:32] Connection - {conn-10004} pool-recycle
[12:06:32] Connection - {conn-10004} pool-recycle
[12:06:32] Connection - {conn-10004} pool-recycle
[12:07:25] Connection - {conn-10003} closed
[12:07:25] Connection - {conn-10003} closed
[12:07:25] Connection - {conn-10003} closed
[12:07:25] Connection - {conn-10009} closed
[12:07:25] Connection - {conn-10009} closed
[12:07:25] Connection - {conn-10009} closed
[12:07:25] Connection - {conn-10002} closed
[12:07:25] Connection - {conn-10002} closed
[12:07:25] Connection - {conn-10002} closed
[12:07:25] Connection - {conn-10001} closed
[12:07:25] Connection - {conn-10001} closed
[12:07:25] Connection - {conn-10001} closed
[12:07:25] Connection - {conn-10008} closed
[12:07:25] Connection - {conn-10008} closed
[12:07:25] Connection - {conn-10008} closed
[12:07:25] Connection - {conn-10010} closed
[12:07:25] Connection - {conn-10010} closed
[12:07:25] Connection - {conn-10010} closed
[12:07:25] Connection - {conn-10005} closed
[12:07:25] Connection - {conn-10005} closed
[12:07:25] Connection - {conn-10005} closed
[12:07:52] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:45888, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:08:52] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:45888, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:10:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45888, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:10:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[12:11:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45888, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:11:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[12:12:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:45888, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:12:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.0.1, current host: 192.168.116.168
[12:13:00] AbstractServer -  [DUBBO] All clients has discontected from /192.168.116.168:20880. You can graceful shutdown now., dubbo version: 2.0.1, current host: 192.168.116.168
[12:13:00] DubboProtocol -  [DUBBO] disconected from /192.168.116.168:45888,url:dubbo://192.168.116.168:20880/com.crossoverJie.seconds.kill.api.OrderServiceFacade?anyhost=true&application=stock-service&bind.ip=192.168.116.168&bind.port=20880&channel.readonly.sent=true&codec=dubbo&dubbo=2.0.1&generic=false&heartbeat=60000&interface=com.crossoverJie.seconds.kill.api.OrderServiceFacade&methods=createOptimisticOrderUseRedisAndKafka,createOptimisticOrderUseRedis,createWrongOrder,createOptimisticOrder&owner=crossoverJie&pid=4418&revision=2.2.0-SNAPSHOT&side=provider&timestamp=1529640026108, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:47] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:47] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 2.926545 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 2.926545 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 2.926545 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 29.605406 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 29.605406 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 29.605406 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 1.231251 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 1.231251 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 1.231251 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 2.44276 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 2.44276 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 2.44276 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 1.740326 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 1.740326 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 1.740326 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 2.282686 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 2.282686 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 2.282686 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 2.525196 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 2.525196 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 2.525196 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 2.880476 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 2.880476 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 2.880476 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 1]
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 1]
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 1]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 17.749434 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 17.749434 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 17.749434 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 4.65817 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 17.13233 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 17.13233 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 17.13233 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 4.65817 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 4.65817 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 0]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 1.043691 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 1.043691 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 1.043691 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 3.438171 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 3.438171 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 3.438171 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Statement - {conn-10006, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 12:21:48.076]
[12:21:48] Statement - {conn-10006, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 12:21:48.076]
[12:21:48] Statement - {conn-10006, pstmt-20012} Parameters : [null, 1, 手机, 2018-06-22 12:21:48.076]
[12:21:48] Statement - {conn-10006, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:48] Statement - {conn-10006, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:48] Statement - {conn-10006, pstmt-20012} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 1.103373 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 1.103373 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 1.103373 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Connection - {conn-10011} connected
[12:21:48] Connection - {conn-10011} connected
[12:21:48] Connection - {conn-10011} connected
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 19.199751 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 19.199751 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 19.199751 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 1]
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 1]
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 1]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 5.079752 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 5.079752 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 5.079752 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Statement - {conn-10006, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:48.076')
[12:21:48] Statement - {conn-10006, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:48.076')
[12:21:48] Statement - {conn-10006, pstmt-20012} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:48.076')
[12:21:48] Statement - {conn-10006, pstmt-20012} executed. 35.836432 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:48] Statement - {conn-10006, pstmt-20012} executed. 35.836432 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:48] Statement - {conn-10006, pstmt-20012} executed. 35.836432 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:48] ResultSet - {conn-10006, pstmt-20012, rs-50008} open
[12:21:48] ResultSet - {conn-10006, pstmt-20012, rs-50008} open
[12:21:48] ResultSet - {conn-10006, pstmt-20012, rs-50008} Header: [GENERATED_KEY]
[12:21:48] ResultSet - {conn-10006, pstmt-20012, rs-50008} Header: [GENERATED_KEY]
[12:21:48] ResultSet - {conn-10006, pstmt-20012, rs-50008} Result: [77]
[12:21:48] ResultSet - {conn-10006, pstmt-20012, rs-50008} Result: [77]
[12:21:48] ResultSet - {conn-10006, pstmt-20012, rs-50008} closed
[12:21:48] ResultSet - {conn-10006, pstmt-20012, rs-50008} closed
[12:21:48] Statement - {conn-10006, pstmt-20012} clearParameters. 
[12:21:48] Statement - {conn-10006, pstmt-20012} clearParameters. 
[12:21:48] Statement - {conn-10006, pstmt-20012} clearParameters. 
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 0]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 0.814378 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 0.814378 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 0.814378 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Connection - {conn-10011} pool-connect
[12:21:48] Connection - {conn-10011} pool-connect
[12:21:48] Connection - {conn-10011} pool-connect
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 2]
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 2]
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 2]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] Statement - {conn-10011, pstmt-20014} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10011, pstmt-20014} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10011, pstmt-20014} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10011, pstmt-20014} Parameters : [1, 2]
[12:21:48] Statement - {conn-10011, pstmt-20014} Parameters : [1, 2]
[12:21:48] Statement - {conn-10011, pstmt-20014} Parameters : [1, 2]
[12:21:48] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 1.429778 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 1.429778 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 1.429778 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:48] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:48] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:48] PreparedStatementPool - {conn-10011, pstmt-20014} enter cache
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 2]
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 2]
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 2]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Connection - {conn-10011} pool-recycle
[12:21:48] Connection - {conn-10011} pool-recycle
[12:21:48] Connection - {conn-10011} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Connection - {conn-10011} pool-connect
[12:21:48] Connection - {conn-10011} pool-connect
[12:21:48] Connection - {conn-10011} pool-connect
[12:21:48] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[12:21:48] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[12:21:48] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[12:21:48] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 0.680275 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 0.680275 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 0.680275 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:48] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:48] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:48] Connection - {conn-10011} pool-recycle
[12:21:48] Connection - {conn-10011} pool-recycle
[12:21:48] Connection - {conn-10011} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Connection - {conn-10011} pool-connect
[12:21:48] Connection - {conn-10011} pool-connect
[12:21:48] Connection - {conn-10011} pool-connect
[12:21:48] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[12:21:48] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[12:21:48] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[12:21:48] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 0.643698 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 0.643698 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 0.643698 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:48] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:48] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:48] Connection - {conn-10011} pool-recycle
[12:21:48] Connection - {conn-10011} pool-recycle
[12:21:48] Connection - {conn-10011} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Connection - {conn-10011} pool-connect
[12:21:48] Connection - {conn-10011} pool-connect
[12:21:48] Connection - {conn-10011} pool-connect
[12:21:48] Statement - {conn-10011, pstmt-20015} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:48] Statement - {conn-10011, pstmt-20015} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:48] Statement - {conn-10011, pstmt-20015} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:48] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 12:21:48.203]
[12:21:48] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 12:21:48.203]
[12:21:48] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 12:21:48.203]
[12:21:48] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:48] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:48] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 19.7802 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 19.7802 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 19.7802 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 2]
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 2]
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 2]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 13.463133 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 13.463133 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 13.463133 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 55.529078 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 55.529078 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 55.529078 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 44.718093 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 44.718093 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 44.718093 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:48.203')
[12:21:48] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:48.203')
[12:21:48] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:48.203')
[12:21:48] Statement - {conn-10011, pstmt-20015} executed. 40.838039 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:48] Statement - {conn-10011, pstmt-20015} executed. 40.838039 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:48] Statement - {conn-10011, pstmt-20015} executed. 40.838039 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:48] ResultSet - {conn-10011, pstmt-20015, rs-50009} open
[12:21:48] ResultSet - {conn-10011, pstmt-20015, rs-50009} open
[12:21:48] ResultSet - {conn-10011, pstmt-20015, rs-50009} Header: [GENERATED_KEY]
[12:21:48] ResultSet - {conn-10011, pstmt-20015, rs-50009} Header: [GENERATED_KEY]
[12:21:48] ResultSet - {conn-10011, pstmt-20015, rs-50009} Result: [78]
[12:21:48] ResultSet - {conn-10011, pstmt-20015, rs-50009} Result: [78]
[12:21:48] ResultSet - {conn-10011, pstmt-20015, rs-50009} closed
[12:21:48] ResultSet - {conn-10011, pstmt-20015, rs-50009} closed
[12:21:48] Statement - {conn-10011, pstmt-20015} clearParameters. 
[12:21:48] Statement - {conn-10011, pstmt-20015} clearParameters. 
[12:21:48] Statement - {conn-10011, pstmt-20015} clearParameters. 
[12:21:48] PreparedStatementPool - {conn-10011, pstmt-20015} enter cache
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10011} pool-recycle
[12:21:48] Connection - {conn-10011} pool-recycle
[12:21:48] Connection - {conn-10011} pool-recycle
[12:21:48] Statement - {conn-10007, pstmt-20013} Parameters : [null, 1, 手机, 2018-06-22 12:21:48.339]
[12:21:48] Statement - {conn-10007, pstmt-20013} Parameters : [null, 1, 手机, 2018-06-22 12:21:48.339]
[12:21:48] Statement - {conn-10007, pstmt-20013} Parameters : [null, 1, 手机, 2018-06-22 12:21:48.339]
[12:21:48] Statement - {conn-10007, pstmt-20013} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:48] Statement - {conn-10007, pstmt-20013} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:48] Statement - {conn-10007, pstmt-20013} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:48] Statement - {conn-10007, pstmt-20013} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:48.339')
[12:21:48] Statement - {conn-10007, pstmt-20013} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:48.339')
[12:21:48] Statement - {conn-10007, pstmt-20013} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:48.339')
[12:21:48] Statement - {conn-10007, pstmt-20013} executed. 1.606585 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:48] Statement - {conn-10007, pstmt-20013} executed. 1.606585 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:48] Statement - {conn-10007, pstmt-20013} executed. 1.606585 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:48] ResultSet - {conn-10007, pstmt-20013, rs-50010} open
[12:21:48] ResultSet - {conn-10007, pstmt-20013, rs-50010} open
[12:21:48] ResultSet - {conn-10007, pstmt-20013, rs-50010} Header: [GENERATED_KEY]
[12:21:48] ResultSet - {conn-10007, pstmt-20013, rs-50010} Header: [GENERATED_KEY]
[12:21:48] ResultSet - {conn-10007, pstmt-20013, rs-50010} Result: [79]
[12:21:48] ResultSet - {conn-10007, pstmt-20013, rs-50010} Result: [79]
[12:21:48] ResultSet - {conn-10007, pstmt-20013, rs-50010} closed
[12:21:48] ResultSet - {conn-10007, pstmt-20013, rs-50010} closed
[12:21:48] Statement - {conn-10007, pstmt-20013} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20013} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20013} clearParameters. 
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 2]
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 2]
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 2]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 31.97621 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 31.97621 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 31.97621 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Connection - {conn-10012} connected
[12:21:48] Connection - {conn-10012} connected
[12:21:48] Connection - {conn-10012} connected
[12:21:48] Connection - {conn-10012} pool-connect
[12:21:48] Connection - {conn-10012} pool-connect
[12:21:48] Connection - {conn-10012} pool-connect
[12:21:48] Statement - {conn-10012, pstmt-20016} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10012, pstmt-20016} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10012, pstmt-20016} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Connection - {conn-10007} pool-connect
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 3]
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 3]
[12:21:48] Statement - {conn-10007, pstmt-20004} Parameters : [1, 3]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10007, pstmt-20004} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10012, pstmt-20016} Parameters : [1, 3]
[12:21:48] Statement - {conn-10012, pstmt-20016} Parameters : [1, 3]
[12:21:48] Statement - {conn-10012, pstmt-20016} Parameters : [1, 3]
[12:21:48] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:48] Connection - {conn-10011} pool-connect
[12:21:48] Connection - {conn-10011} pool-connect
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Connection - {conn-10011} pool-connect
[12:21:48] Statement - {conn-10011, pstmt-20014} Parameters : [1, 3]
[12:21:48] Statement - {conn-10011, pstmt-20014} Parameters : [1, 3]
[12:21:48] Statement - {conn-10011, pstmt-20014} Parameters : [1, 3]
[12:21:48] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:48] Connection - {conn-10006} pool-connect
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 3]
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 3]
[12:21:48] Statement - {conn-10006, pstmt-20008} Parameters : [1, 3]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10006, pstmt-20008} Types : [INTEGER, INTEGER]
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Connection - {conn-10004} pool-connect
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 3]
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 3]
[12:21:48] Statement - {conn-10004, pstmt-20007} Parameters : [1, 3]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 3.774862 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 3.774862 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} executed. 3.774862 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Statement - {conn-10006, pstmt-20008} clearParameters. 
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] Connection - {conn-10006} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 12.534264 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 12.534264 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} executed. 12.534264 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Statement - {conn-10007, pstmt-20004} clearParameters. 
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] Connection - {conn-10007} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 7.363444 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 7.363444 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} executed. 7.363444 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] Connection - {conn-10004} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:21:48] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:21:48] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:21:48] Statement - {conn-10012, pstmt-20016} executed. 18.575692 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10012, pstmt-20016} executed. 18.575692 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10012, pstmt-20016} executed. 18.575692 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:48] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:48] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:48] PreparedStatementPool - {conn-10012, pstmt-20016} enter cache
[12:21:48] Connection - {conn-10012} pool-recycle
[12:21:48] Connection - {conn-10012} pool-recycle
[12:21:48] Connection - {conn-10012} pool-recycle
[12:21:48] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 37.580406 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 37.580406 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10011, pstmt-20014} executed. 37.580406 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:48] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:48] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:48] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:48] Connection - {conn-10011} pool-recycle
[12:21:48] Connection - {conn-10011} pool-recycle
[12:21:48] Connection - {conn-10011} pool-recycle
[12:21:48] Connection - {conn-10011} pool-connect
[12:21:48] Connection - {conn-10011} pool-connect
[12:21:48] Connection - {conn-10011} pool-connect
[12:21:48] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 12:21:48.565]
[12:21:48] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 12:21:48.565]
[12:21:48] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 12:21:48.565]
[12:21:48] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:48] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:48] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:48] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:48.565')
[12:21:48] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:48.565')
[12:21:48] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:48.565')
[12:21:48] Statement - {conn-10011, pstmt-20015} executed. 29.122261 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:48] Statement - {conn-10011, pstmt-20015} executed. 29.122261 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:48] Statement - {conn-10011, pstmt-20015} executed. 29.122261 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:48] ResultSet - {conn-10011, pstmt-20015, rs-50011} open
[12:21:48] ResultSet - {conn-10011, pstmt-20015, rs-50011} open
[12:21:48] ResultSet - {conn-10011, pstmt-20015, rs-50011} Header: [GENERATED_KEY]
[12:21:48] ResultSet - {conn-10011, pstmt-20015, rs-50011} Header: [GENERATED_KEY]
[12:21:48] ResultSet - {conn-10011, pstmt-20015, rs-50011} Result: [80]
[12:21:48] ResultSet - {conn-10011, pstmt-20015, rs-50011} Result: [80]
[12:21:48] ResultSet - {conn-10011, pstmt-20015, rs-50011} closed
[12:21:48] ResultSet - {conn-10011, pstmt-20015, rs-50011} closed
[12:21:48] Statement - {conn-10011, pstmt-20015} clearParameters. 
[12:21:48] Statement - {conn-10011, pstmt-20015} clearParameters. 
[12:21:48] Statement - {conn-10011, pstmt-20015} clearParameters. 
[12:21:48] Connection - {conn-10011} pool-recycle
[12:21:48] Connection - {conn-10011} pool-recycle
[12:21:48] Connection - {conn-10011} pool-recycle
[12:21:49] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Statement - {conn-10011, pstmt-20014} Parameters : [1, 4]
[12:21:49] Statement - {conn-10011, pstmt-20014} Parameters : [1, 4]
[12:21:49] Statement - {conn-10011, pstmt-20014} Parameters : [1, 4]
[12:21:49] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 2.36167 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 2.36167 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 2.36167 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:49] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:49] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 12:21:49.121]
[12:21:49] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 12:21:49.121]
[12:21:49] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 12:21:49.121]
[12:21:49] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:49] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:49] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:49] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:49.121')
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:49.121')
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:49.121')
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 11.180212 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 11.180212 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 11.180212 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50012} open
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50012} open
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50012} Header: [GENERATED_KEY]
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50012} Header: [GENERATED_KEY]
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50012} Result: [81]
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50012} Result: [81]
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50012} closed
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50012} closed
[12:21:49] Statement - {conn-10011, pstmt-20015} clearParameters. 
[12:21:49] Statement - {conn-10011, pstmt-20015} clearParameters. 
[12:21:49] Statement - {conn-10011, pstmt-20015} clearParameters. 
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Statement - {conn-10011, pstmt-20014} Parameters : [1, 5]
[12:21:49] Statement - {conn-10011, pstmt-20014} Parameters : [1, 5]
[12:21:49] Statement - {conn-10011, pstmt-20014} Parameters : [1, 5]
[12:21:49] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:49] Connection - {conn-10012} pool-connect
[12:21:49] Connection - {conn-10012} pool-connect
[12:21:49] Connection - {conn-10012} pool-connect
[12:21:49] Statement - {conn-10012, pstmt-20016} Parameters : [1, 5]
[12:21:49] Statement - {conn-10012, pstmt-20016} Parameters : [1, 5]
[12:21:49] Statement - {conn-10012, pstmt-20016} Parameters : [1, 5]
[12:21:49] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 1.118691 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 1.118691 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 1.118691 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:49] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:49] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:49] Connection - {conn-10012} pool-recycle
[12:21:49] Connection - {conn-10012} pool-recycle
[12:21:49] Connection - {conn-10012} pool-recycle
[12:21:49] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:49] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:49] Connection - {conn-10012} pool-connect
[12:21:49] Connection - {conn-10012} pool-connect
[12:21:49] Connection - {conn-10012} pool-connect
[12:21:49] Statement - {conn-10012, pstmt-20016} Parameters : [1, 5]
[12:21:49] Statement - {conn-10012, pstmt-20016} Parameters : [1, 5]
[12:21:49] Statement - {conn-10012, pstmt-20016} Parameters : [1, 5]
[12:21:49] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 0.890387 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 0.890387 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 0.890387 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:49] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:49] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:49] Connection - {conn-10012} pool-recycle
[12:21:49] Connection - {conn-10012} pool-recycle
[12:21:49] Connection - {conn-10012} pool-recycle
[12:21:49] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 10.227468 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 10.227468 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 10.227468 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:49] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:49] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 12:21:49.147]
[12:21:49] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 12:21:49.147]
[12:21:49] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 12:21:49.147]
[12:21:49] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:49] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:49] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:49.147')
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:49.147')
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:49.147')
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 23.043985 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 23.043985 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 23.043985 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50013} open
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50013} open
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50013} Header: [GENERATED_KEY]
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50013} Header: [GENERATED_KEY]
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50013} Result: [82]
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50013} Result: [82]
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50013} closed
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50013} closed
[12:21:49] Statement - {conn-10011, pstmt-20015} clearParameters. 
[12:21:49] Statement - {conn-10011, pstmt-20015} clearParameters. 
[12:21:49] Statement - {conn-10011, pstmt-20015} clearParameters. 
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Statement - {conn-10011, pstmt-20014} Parameters : [1, 6]
[12:21:49] Statement - {conn-10011, pstmt-20014} Parameters : [1, 6]
[12:21:49] Statement - {conn-10011, pstmt-20014} Parameters : [1, 6]
[12:21:49] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:49] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:49] Connection - {conn-10012} pool-connect
[12:21:49] Connection - {conn-10012} pool-connect
[12:21:49] Connection - {conn-10012} pool-connect
[12:21:49] Statement - {conn-10012, pstmt-20016} Parameters : [1, 6]
[12:21:49] Statement - {conn-10012, pstmt-20016} Parameters : [1, 6]
[12:21:49] Statement - {conn-10012, pstmt-20016} Parameters : [1, 6]
[12:21:49] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 2.800427 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 2.800427 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 2.800427 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:49] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:49] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:49] Connection - {conn-10012} pool-recycle
[12:21:49] Connection - {conn-10012} pool-recycle
[12:21:49] Connection - {conn-10012} pool-recycle
[12:21:49] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 33.038559 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 33.038559 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 33.038559 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:49] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:49] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 12:21:49.242]
[12:21:49] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 12:21:49.242]
[12:21:49] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 12:21:49.242]
[12:21:49] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:49] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:49] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:49] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:49] Connection - {conn-10012} pool-connect
[12:21:49] Connection - {conn-10012} pool-connect
[12:21:49] Connection - {conn-10012} pool-connect
[12:21:49] Statement - {conn-10012, pstmt-20016} Parameters : [1, 7]
[12:21:49] Statement - {conn-10012, pstmt-20016} Parameters : [1, 7]
[12:21:49] Statement - {conn-10012, pstmt-20016} Parameters : [1, 7]
[12:21:49] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:49] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:49.242')
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:49.242')
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:49.242')
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 32.453966 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 32.453966 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 32.453966 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50014} open
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50014} open
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50014} Header: [GENERATED_KEY]
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50014} Header: [GENERATED_KEY]
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50014} Result: [83]
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50014} Result: [83]
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50014} closed
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50014} closed
[12:21:49] Statement - {conn-10011, pstmt-20015} clearParameters. 
[12:21:49] Statement - {conn-10011, pstmt-20015} clearParameters. 
[12:21:49] Statement - {conn-10011, pstmt-20015} clearParameters. 
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Statement - {conn-10011, pstmt-20014} Parameters : [1, 7]
[12:21:49] Statement - {conn-10011, pstmt-20014} Parameters : [1, 7]
[12:21:49] Statement - {conn-10011, pstmt-20014} Parameters : [1, 7]
[12:21:49] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 30.700931 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 30.700931 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 30.700931 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:49] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:49] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:49] Connection - {conn-10012} pool-recycle
[12:21:49] Connection - {conn-10012} pool-recycle
[12:21:49] Connection - {conn-10012} pool-recycle
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 1.012177 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 1.012177 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10011, pstmt-20014} executed. 1.012177 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:49] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:49] Statement - {conn-10011, pstmt-20014} clearParameters. 
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:49] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] Connection - {conn-10011} pool-connect
[12:21:49] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:49] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 12:21:49.285]
[12:21:49] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 12:21:49.285]
[12:21:49] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 12:21:49.285]
[12:21:49] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:49] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:49] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:49] Connection - {conn-10012} pool-connect
[12:21:49] Connection - {conn-10012} pool-connect
[12:21:49] Connection - {conn-10012} pool-connect
[12:21:49] Statement - {conn-10012, pstmt-20016} Parameters : [1, 8]
[12:21:49] Statement - {conn-10012, pstmt-20016} Parameters : [1, 8]
[12:21:49] Statement - {conn-10012, pstmt-20016} Parameters : [1, 8]
[12:21:49] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:49] Connection - {conn-10004} pool-connect
[12:21:49] Connection - {conn-10004} pool-connect
[12:21:49] Connection - {conn-10004} pool-connect
[12:21:49] Statement - {conn-10004, pstmt-20007} Parameters : [1, 8]
[12:21:49] Statement - {conn-10004, pstmt-20007} Parameters : [1, 8]
[12:21:49] Statement - {conn-10004, pstmt-20007} Parameters : [1, 8]
[12:21:49] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[12:21:49] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[12:21:49] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[12:21:49] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[12:21:49] Statement - {conn-10004, pstmt-20007} executed. 11.838217 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10004, pstmt-20007} executed. 11.838217 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10004, pstmt-20007} executed. 11.838217 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:49] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:49] Statement - {conn-10004, pstmt-20007} clearParameters. 
[12:21:49] Connection - {conn-10004} pool-recycle
[12:21:49] Connection - {conn-10004} pool-recycle
[12:21:49] Connection - {conn-10004} pool-recycle
[12:21:49] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 22.467116 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 22.467116 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10012, pstmt-20016} executed. 22.467116 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:49] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:49] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:49] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:49] Connection - {conn-10012} pool-recycle
[12:21:49] Connection - {conn-10012} pool-recycle
[12:21:49] Connection - {conn-10012} pool-recycle
[12:21:49] Connection - {conn-10012} pool-connect
[12:21:49] Connection - {conn-10012} pool-connect
[12:21:49] Connection - {conn-10012} pool-connect
[12:21:49] Statement - {conn-10012, pstmt-20017} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:49] Statement - {conn-10012, pstmt-20017} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:49] Statement - {conn-10012, pstmt-20017} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:49] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 12:21:49.427]
[12:21:49] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 12:21:49.427]
[12:21:49] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 12:21:49.427]
[12:21:49] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:49] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:49] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:49.285')
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:49.285')
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:49.285')
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 42.382571 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 42.382571 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:49] Statement - {conn-10011, pstmt-20015} executed. 42.382571 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50015} open
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50015} open
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50015} Header: [GENERATED_KEY]
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50015} Header: [GENERATED_KEY]
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50015} Result: [84]
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50015} Result: [84]
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50015} closed
[12:21:49] ResultSet - {conn-10011, pstmt-20015, rs-50015} closed
[12:21:49] Statement - {conn-10011, pstmt-20015} clearParameters. 
[12:21:49] Statement - {conn-10011, pstmt-20015} clearParameters. 
[12:21:49] Statement - {conn-10011, pstmt-20015} clearParameters. 
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Connection - {conn-10011} pool-recycle
[12:21:49] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:49.427')
[12:21:49] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:49.427')
[12:21:49] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:49.427')
[12:21:49] Statement - {conn-10012, pstmt-20017} executed. 14.466604 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:49] Statement - {conn-10012, pstmt-20017} executed. 14.466604 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:49] Statement - {conn-10012, pstmt-20017} executed. 14.466604 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:49] ResultSet - {conn-10012, pstmt-20017, rs-50016} open
[12:21:49] ResultSet - {conn-10012, pstmt-20017, rs-50016} open
[12:21:49] ResultSet - {conn-10012, pstmt-20017, rs-50016} Header: [GENERATED_KEY]
[12:21:49] ResultSet - {conn-10012, pstmt-20017, rs-50016} Header: [GENERATED_KEY]
[12:21:49] ResultSet - {conn-10012, pstmt-20017, rs-50016} Result: [85]
[12:21:49] ResultSet - {conn-10012, pstmt-20017, rs-50016} Result: [85]
[12:21:49] ResultSet - {conn-10012, pstmt-20017, rs-50016} closed
[12:21:49] ResultSet - {conn-10012, pstmt-20017, rs-50016} closed
[12:21:49] Statement - {conn-10012, pstmt-20017} clearParameters. 
[12:21:49] Statement - {conn-10012, pstmt-20017} clearParameters. 
[12:21:49] Statement - {conn-10012, pstmt-20017} clearParameters. 
[12:21:49] PreparedStatementPool - {conn-10012, pstmt-20017} enter cache
[12:21:49] Connection - {conn-10012} pool-recycle
[12:21:49] Connection - {conn-10012} pool-recycle
[12:21:49] Connection - {conn-10012} pool-recycle
[12:21:50] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[12:21:50] Connection - {conn-10012} pool-connect
[12:21:50] Connection - {conn-10012} pool-connect
[12:21:50] Connection - {conn-10012} pool-connect
[12:21:50] Statement - {conn-10012, pstmt-20016} Parameters : [1, 9]
[12:21:50] Statement - {conn-10012, pstmt-20016} Parameters : [1, 9]
[12:21:50] Statement - {conn-10012, pstmt-20016} Parameters : [1, 9]
[12:21:50] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:50] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:50] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[12:21:50] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[12:21:50] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[12:21:50] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[12:21:50] Statement - {conn-10012, pstmt-20016} executed. 3.952921 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:50] Statement - {conn-10012, pstmt-20016} executed. 3.952921 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:50] Statement - {conn-10012, pstmt-20016} executed. 3.952921 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[12:21:50] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:50] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:50] Statement - {conn-10012, pstmt-20016} clearParameters. 
[12:21:50] Connection - {conn-10012} pool-recycle
[12:21:50] Connection - {conn-10012} pool-recycle
[12:21:50] Connection - {conn-10012} pool-recycle
[12:21:50] Connection - {conn-10012} pool-connect
[12:21:50] Connection - {conn-10012} pool-connect
[12:21:50] Connection - {conn-10012} pool-connect
[12:21:50] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 12:21:50.117]
[12:21:50] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 12:21:50.117]
[12:21:50] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 12:21:50.117]
[12:21:50] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:50] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:50] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[12:21:50] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:50.117')
[12:21:50] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:50.117')
[12:21:50] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 12:21:50.117')
[12:21:50] Statement - {conn-10012, pstmt-20017} executed. 34.27348 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:50] Statement - {conn-10012, pstmt-20017} executed. 34.27348 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:50] Statement - {conn-10012, pstmt-20017} executed. 34.27348 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[12:21:50] ResultSet - {conn-10012, pstmt-20017, rs-50017} open
[12:21:50] ResultSet - {conn-10012, pstmt-20017, rs-50017} open
[12:21:50] ResultSet - {conn-10012, pstmt-20017, rs-50017} Header: [GENERATED_KEY]
[12:21:50] ResultSet - {conn-10012, pstmt-20017, rs-50017} Header: [GENERATED_KEY]
[12:21:50] ResultSet - {conn-10012, pstmt-20017, rs-50017} Result: [86]
[12:21:50] ResultSet - {conn-10012, pstmt-20017, rs-50017} Result: [86]
[12:21:50] ResultSet - {conn-10012, pstmt-20017, rs-50017} closed
[12:21:50] ResultSet - {conn-10012, pstmt-20017, rs-50017} closed
[12:21:50] Statement - {conn-10012, pstmt-20017} clearParameters. 
[12:21:50] Statement - {conn-10012, pstmt-20017} clearParameters. 
[12:21:50] Statement - {conn-10012, pstmt-20017} clearParameters. 
[12:21:50] Connection - {conn-10012} pool-recycle
[12:21:50] Connection - {conn-10012} pool-recycle
[12:21:50] Connection - {conn-10012} pool-recycle
[12:23:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:24:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:25:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:25:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:26:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:26:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:27:25] Connection - {conn-10006} closed
[12:27:25] Connection - {conn-10006} closed
[12:27:25] Connection - {conn-10006} closed
[12:27:25] Connection - {conn-10007} closed
[12:27:25] Connection - {conn-10007} closed
[12:27:25] Connection - {conn-10007} closed
[12:27:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:27:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:28:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:28:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:29:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:29:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:30:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:30:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:31:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:31:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:32:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:32:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:33:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:33:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:34:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:34:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:35:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:35:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:36:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:36:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:37:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:37:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:38:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:38:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:39:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:39:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:40:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:40:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:41:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:41:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:42:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:42:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:43:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:43:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:44:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:44:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:45:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:45:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:46:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:46:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:47:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:47:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:49:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:50:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:51:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:52:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:53:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:54:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:55:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:56:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:56:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:57:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:57:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:58:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:58:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[12:59:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[12:59:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[13:00:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:00:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[13:01:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:01:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[13:02:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:02:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[13:04:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:05:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:06:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:07:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:08:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:09:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:09:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[13:10:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:10:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[13:11:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:11:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[13:12:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:12:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[13:13:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:13:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[13:14:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:14:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[13:15:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:15:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[13:16:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:16:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[13:17:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:17:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[13:18:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:18:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[13:20:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:21:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:22:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:23:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:24:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:25:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:26:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:27:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:28:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:29:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:30:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:31:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:32:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:33:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:34:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:35:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:36:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:37:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:38:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:39:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:40:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:41:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:42:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:43:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:44:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:45:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:46:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:47:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:48:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:49:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:50:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:51:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:52:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:52:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[13:53:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:53:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[13:54:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:54:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[13:56:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:57:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:58:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[13:59:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:00:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:01:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:02:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:03:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:04:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:04:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[14:05:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:05:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[14:06:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:06:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[14:07:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:07:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[14:08:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:08:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[14:09:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:09:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[14:10:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:10:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[14:11:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:11:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[14:12:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:12:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[14:13:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:13:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[14:14:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:14:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[14:15:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:15:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[14:17:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:18:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:18:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[14:19:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:19:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:50] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:50] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:50] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:50] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:50] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:50] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:50] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:50] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:50] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:50] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:50] Connection - {conn-10012} pool-connect
[14:20:50] Connection - {conn-10012} pool-connect
[14:20:50] Connection - {conn-10012} pool-connect
[14:20:50] Connection - {conn-10011} pool-connect
[14:20:50] Connection - {conn-10011} pool-connect
[14:20:50] Connection - {conn-10011} pool-connect
[14:20:50] Statement - {conn-10011, pstmt-20014} Parameters : [1, 0]
[14:20:50] Statement - {conn-10011, pstmt-20014} Parameters : [1, 0]
[14:20:50] Statement - {conn-10012, pstmt-20016} Parameters : [1, 0]
[14:20:50] Statement - {conn-10012, pstmt-20016} Parameters : [1, 0]
[14:20:50] Statement - {conn-10011, pstmt-20014} Parameters : [1, 0]
[14:20:50] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:50] Connection - {conn-10004} pool-connect
[14:20:50] Connection - {conn-10004} pool-connect
[14:20:50] Connection - {conn-10004} pool-connect
[14:20:50] Statement - {conn-10012, pstmt-20016} Parameters : [1, 0]
[14:20:50] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[14:20:50] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[14:20:50] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[14:20:50] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10012, pstmt-20016} executed. 56.622541 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10012, pstmt-20016} executed. 56.622541 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10012, pstmt-20016} executed. 56.622541 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:50] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:50] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 57.182892 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 57.182892 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 57.182892 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:50] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:50] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:50] Connection - {conn-10012} pool-recycle
[14:20:50] Connection - {conn-10012} pool-recycle
[14:20:50] Connection - {conn-10012} pool-recycle
[14:20:50] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:50] Connection - {conn-10012} pool-connect
[14:20:50] Connection - {conn-10012} pool-connect
[14:20:50] Connection - {conn-10011} pool-connect
[14:20:50] Connection - {conn-10011} pool-connect
[14:20:50] Connection - {conn-10011} pool-recycle
[14:20:50] Connection - {conn-10011} pool-recycle
[14:20:50] Connection - {conn-10011} pool-recycle
[14:20:50] Connection - {conn-10011} pool-connect
[14:20:50] Statement - {conn-10011, pstmt-20014} Parameters : [1, 0]
[14:20:50] Statement - {conn-10011, pstmt-20014} Parameters : [1, 0]
[14:20:50] Statement - {conn-10011, pstmt-20014} Parameters : [1, 0]
[14:20:50] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10004, pstmt-20007} executed. 5.965567 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10004, pstmt-20007} executed. 5.965567 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10004, pstmt-20007} executed. 5.965567 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:50] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:50] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:50] Connection - {conn-10004} pool-recycle
[14:20:50] Connection - {conn-10004} pool-recycle
[14:20:50] Connection - {conn-10004} pool-recycle
[14:20:50] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 18.987687 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 18.987687 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 18.987687 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Connection - {conn-10004} pool-connect
[14:20:50] Connection - {conn-10004} pool-connect
[14:20:50] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:50] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:50] Connection - {conn-10012} pool-connect
[14:20:50] Statement - {conn-10012, pstmt-20016} Parameters : [1, 0]
[14:20:50] Statement - {conn-10012, pstmt-20016} Parameters : [1, 0]
[14:20:50] Statement - {conn-10012, pstmt-20016} Parameters : [1, 0]
[14:20:50] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:50] Connection - {conn-10004} pool-connect
[14:20:50] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[14:20:50] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[14:20:50] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[14:20:50] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10012, pstmt-20016} executed. 0.771275 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10012, pstmt-20016} executed. 0.771275 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10012, pstmt-20016} executed. 0.771275 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10004, pstmt-20007} executed. 0.695079 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10004, pstmt-20007} executed. 0.695079 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10004, pstmt-20007} executed. 0.695079 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:50] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:50] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:50] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:50] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:50] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:50] Connection - {conn-10011} pool-recycle
[14:20:50] Connection - {conn-10011} pool-recycle
[14:20:50] Connection - {conn-10011} pool-recycle
[14:20:50] Connection - {conn-10012} pool-connect
[14:20:50] Connection - {conn-10012} pool-connect
[14:20:50] Connection - {conn-10012} pool-connect
[14:20:50] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:50] Connection - {conn-10012} pool-recycle
[14:20:50] Connection - {conn-10012} pool-recycle
[14:20:50] Connection - {conn-10012} pool-recycle
[14:20:50] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:50] Statement - {conn-10012, pstmt-20016} Parameters : [1, 0]
[14:20:50] Statement - {conn-10012, pstmt-20016} Parameters : [1, 0]
[14:20:50] Connection - {conn-10004} pool-connect
[14:20:50] Connection - {conn-10004} pool-connect
[14:20:50] Connection - {conn-10004} pool-recycle
[14:20:50] Connection - {conn-10004} pool-recycle
[14:20:50] Connection - {conn-10011} pool-connect
[14:20:50] Connection - {conn-10011} pool-connect
[14:20:50] Connection - {conn-10011} pool-connect
[14:20:50] Statement - {conn-10011, pstmt-20014} Parameters : [1, 0]
[14:20:50] Statement - {conn-10011, pstmt-20014} Parameters : [1, 0]
[14:20:50] Statement - {conn-10011, pstmt-20014} Parameters : [1, 0]
[14:20:50] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:50] Connection - {conn-10004} pool-recycle
[14:20:50] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:50] Connection - {conn-10004} pool-connect
[14:20:50] Statement - {conn-10012, pstmt-20016} Parameters : [1, 0]
[14:20:50] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:50] Connection - {conn-10013} connected
[14:20:50] Connection - {conn-10013} connected
[14:20:50] Connection - {conn-10013} connected
[14:20:50] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[14:20:50] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[14:20:50] Statement - {conn-10004, pstmt-20007} Parameters : [1, 0]
[14:20:50] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 2.997895 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 2.997895 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 2.997895 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:50] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:50] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:50] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Connection - {conn-10011} pool-recycle
[14:20:50] Connection - {conn-10011} pool-recycle
[14:20:50] Connection - {conn-10011} pool-recycle
[14:20:50] Statement - {conn-10012, pstmt-20016} executed. 18.096554 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10012, pstmt-20016} executed. 18.096554 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10012, pstmt-20016} executed. 18.096554 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:50] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:50] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:50] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10004, pstmt-20007} executed. 12.338779 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10004, pstmt-20007} executed. 12.338779 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10004, pstmt-20007} executed. 12.338779 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:50] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:50] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:50] Connection - {conn-10011} pool-connect
[14:20:50] Connection - {conn-10011} pool-connect
[14:20:50] Connection - {conn-10011} pool-connect
[14:20:50] Statement - {conn-10011, pstmt-20014} Parameters : [1, 0]
[14:20:50] Statement - {conn-10011, pstmt-20014} Parameters : [1, 0]
[14:20:50] Statement - {conn-10011, pstmt-20014} Parameters : [1, 0]
[14:20:50] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:50] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:50] Connection - {conn-10012} pool-recycle
[14:20:50] Connection - {conn-10012} pool-recycle
[14:20:50] Connection - {conn-10012} pool-recycle
[14:20:50] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:50] Connection - {conn-10004} pool-connect
[14:20:50] Connection - {conn-10004} pool-connect
[14:20:50] Connection - {conn-10004} pool-connect
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 0
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 1.837236 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 1.837236 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Statement - {conn-10011, pstmt-20014} executed. 1.837236 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:50] Connection - {conn-10004} pool-recycle
[14:20:50] Connection - {conn-10004} pool-recycle
[14:20:50] Connection - {conn-10004} pool-recycle
[14:20:50] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 14:20:50.586]
[14:20:50] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 14:20:50.586]
[14:20:50] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 14:20:50.586]
[14:20:50] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:50] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:50] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:50] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:50] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:50] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:50] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:50] Connection - {conn-10011} pool-recycle
[14:20:50] Connection - {conn-10011} pool-recycle
[14:20:50] Connection - {conn-10011} pool-recycle
[14:20:50] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:50] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:50.586')
[14:20:50] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:50.586')
[14:20:50] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:50.586')
[14:20:50] Statement - {conn-10004, pstmt-20011} executed. 89.699972 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:50] Statement - {conn-10004, pstmt-20011} executed. 89.699972 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:50] Statement - {conn-10004, pstmt-20011} executed. 89.699972 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:50] ResultSet - {conn-10004, pstmt-20011, rs-50018} open
[14:20:50] ResultSet - {conn-10004, pstmt-20011, rs-50018} open
[14:20:50] ResultSet - {conn-10004, pstmt-20011, rs-50018} Header: [GENERATED_KEY]
[14:20:50] ResultSet - {conn-10004, pstmt-20011, rs-50018} Header: [GENERATED_KEY]
[14:20:50] ResultSet - {conn-10004, pstmt-20011, rs-50018} Result: [87]
[14:20:50] ResultSet - {conn-10004, pstmt-20011, rs-50018} Result: [87]
[14:20:50] ResultSet - {conn-10004, pstmt-20011, rs-50018} closed
[14:20:50] ResultSet - {conn-10004, pstmt-20011, rs-50018} closed
[14:20:50] Statement - {conn-10004, pstmt-20011} clearParameters. 
[14:20:50] Statement - {conn-10004, pstmt-20011} clearParameters. 
[14:20:50] Statement - {conn-10004, pstmt-20011} clearParameters. 
[14:20:50] Connection - {conn-10004} pool-recycle
[14:20:50] Connection - {conn-10004} pool-recycle
[14:20:50] Connection - {conn-10004} pool-recycle
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] Connection - {conn-10004} pool-connect
[14:20:51] Connection - {conn-10004} pool-connect
[14:20:51] Connection - {conn-10004} pool-connect
[14:20:51] Statement - {conn-10004, pstmt-20007} Parameters : [1, 1]
[14:20:51] Statement - {conn-10004, pstmt-20007} Parameters : [1, 1]
[14:20:51] Statement - {conn-10004, pstmt-20007} Parameters : [1, 1]
[14:20:51] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:51] Connection - {conn-10011} pool-connect
[14:20:51] Connection - {conn-10011} pool-connect
[14:20:51] Connection - {conn-10011} pool-connect
[14:20:51] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[14:20:51] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[14:20:51] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[14:20:51] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 1.830748 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 1.830748 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 1.830748 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:51] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:51] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:51] Connection - {conn-10011} pool-recycle
[14:20:51] Connection - {conn-10011} pool-recycle
[14:20:51] Connection - {conn-10011} pool-recycle
[14:20:51] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] Connection - {conn-10011} pool-connect
[14:20:51] Connection - {conn-10011} pool-connect
[14:20:51] Connection - {conn-10011} pool-connect
[14:20:51] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[14:20:51] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[14:20:51] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[14:20:51] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 1.028559 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 1.028559 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 1.028559 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:51] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:51] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:51] Connection - {conn-10011} pool-recycle
[14:20:51] Connection - {conn-10011} pool-recycle
[14:20:51] Connection - {conn-10011} pool-recycle
[14:20:51] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] Connection - {conn-10011} pool-connect
[14:20:51] Connection - {conn-10011} pool-connect
[14:20:51] Connection - {conn-10011} pool-connect
[14:20:51] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[14:20:51] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[14:20:51] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[14:20:51] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 0.616928 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 0.616928 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 0.616928 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:51] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:51] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:51] Connection - {conn-10011} pool-recycle
[14:20:51] Connection - {conn-10011} pool-recycle
[14:20:51] Connection - {conn-10011} pool-recycle
[14:20:51] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] Connection - {conn-10011} pool-connect
[14:20:51] Connection - {conn-10011} pool-connect
[14:20:51] Connection - {conn-10011} pool-connect
[14:20:51] Connection - {conn-10012} pool-connect
[14:20:51] Connection - {conn-10012} pool-connect
[14:20:51] Connection - {conn-10012} pool-connect
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] Statement - {conn-10012, pstmt-20016} Parameters : [1, 1]
[14:20:51] Statement - {conn-10012, pstmt-20016} Parameters : [1, 1]
[14:20:51] Statement - {conn-10012, pstmt-20016} Parameters : [1, 1]
[14:20:51] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[14:20:51] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[14:20:51] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[14:20:51] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 15.265656 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 15.265656 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 15.265656 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Connection - {conn-10013} pool-connect
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] Connection - {conn-10013} pool-connect
[14:20:51] Connection - {conn-10013} pool-connect
[14:20:51] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:51] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:51] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:51] Connection - {conn-10011} pool-recycle
[14:20:51] Connection - {conn-10011} pool-recycle
[14:20:51] Connection - {conn-10011} pool-recycle
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:51] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10004, pstmt-20007} executed. 87.255912 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10004, pstmt-20007} executed. 87.255912 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10004, pstmt-20007} executed. 87.255912 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:51] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:51] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:51] Connection - {conn-10004} pool-recycle
[14:20:51] Connection - {conn-10004} pool-recycle
[14:20:51] Connection - {conn-10004} pool-recycle
[14:20:51] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10012, pstmt-20016} executed. 39.886149 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10012, pstmt-20016} executed. 39.886149 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10012, pstmt-20016} executed. 39.886149 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:51] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:51] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:51] Connection - {conn-10012} pool-recycle
[14:20:51] Connection - {conn-10012} pool-recycle
[14:20:51] Connection - {conn-10012} pool-recycle
[14:20:51] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:51] Connection - {conn-10012} pool-connect
[14:20:51] Connection - {conn-10012} pool-connect
[14:20:51] Connection - {conn-10012} pool-connect
[14:20:51] Statement - {conn-10012, pstmt-20016} Parameters : [1, 1]
[14:20:51] Statement - {conn-10012, pstmt-20016} Parameters : [1, 1]
[14:20:51] Statement - {conn-10012, pstmt-20016} Parameters : [1, 1]
[14:20:51] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] Connection - {conn-10004} pool-connect
[14:20:51] Connection - {conn-10004} pool-connect
[14:20:51] Connection - {conn-10004} pool-connect
[14:20:51] Connection - {conn-10011} pool-connect
[14:20:51] Connection - {conn-10011} pool-connect
[14:20:51] Connection - {conn-10011} pool-connect
[14:20:51] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10012, pstmt-20016} executed. 1.266466 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10012, pstmt-20016} executed. 1.266466 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10012, pstmt-20016} executed. 1.266466 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 14:20:51.796]
[14:20:51] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 14:20:51.796]
[14:20:51] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 14:20:51.796]
[14:20:51] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:51] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:51] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:51] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:51] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:51] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[14:20:51] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[14:20:51] Statement - {conn-10011, pstmt-20014} Parameters : [1, 1]
[14:20:51] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 1.191902 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 1.191902 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10011, pstmt-20014} executed. 1.191902 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:51] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:51] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:51] Connection - {conn-10012} pool-recycle
[14:20:51] Connection - {conn-10012} pool-recycle
[14:20:51] Connection - {conn-10012} pool-recycle
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:51] Connection - {conn-10012} pool-connect
[14:20:51] Connection - {conn-10012} pool-connect
[14:20:51] Connection - {conn-10012} pool-connect
[14:20:51] Connection - {conn-10011} pool-recycle
[14:20:51] Connection - {conn-10011} pool-recycle
[14:20:51] Connection - {conn-10011} pool-recycle
[14:20:51] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:51] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:51] Connection - {conn-10011} pool-connect
[14:20:51] Connection - {conn-10011} pool-connect
[14:20:51] Connection - {conn-10011} pool-connect
[14:20:51] Statement - {conn-10012, pstmt-20016} Parameters : [1, 1]
[14:20:51] Statement - {conn-10012, pstmt-20016} Parameters : [1, 1]
[14:20:51] Statement - {conn-10012, pstmt-20016} Parameters : [1, 1]
[14:20:51] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10011, pstmt-20014} Parameters : [1, 2]
[14:20:51] Statement - {conn-10011, pstmt-20014} Parameters : [1, 2]
[14:20:51] Statement - {conn-10011, pstmt-20014} Parameters : [1, 2]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:51] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:51.796')
[14:20:51] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:51.796')
[14:20:51] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:51.796')
[14:20:52] Statement - {conn-10004, pstmt-20011} executed. 219.852909 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:52] Statement - {conn-10004, pstmt-20011} executed. 219.852909 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:52] Statement - {conn-10004, pstmt-20011} executed. 219.852909 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:52] StatFilter - slow sql 219 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[null,1,"手机","2018-06-22 14:20:51"]
[14:20:52] Statement - {conn-10013, pstmt-20018} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10013, pstmt-20018} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10013, pstmt-20018} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] ResultSet - {conn-10004, pstmt-20011, rs-50019} open
[14:20:52] ResultSet - {conn-10004, pstmt-20011, rs-50019} open
[14:20:52] ResultSet - {conn-10004, pstmt-20011, rs-50019} Header: [GENERATED_KEY]
[14:20:52] ResultSet - {conn-10004, pstmt-20011, rs-50019} Header: [GENERATED_KEY]
[14:20:52] Statement - {conn-10013, pstmt-20018} Parameters : [1, 1]
[14:20:52] ResultSet - {conn-10004, pstmt-20011, rs-50019} Result: [88]
[14:20:52] ResultSet - {conn-10004, pstmt-20011, rs-50019} Result: [88]
[14:20:52] Statement - {conn-10013, pstmt-20018} Parameters : [1, 1]
[14:20:52] Statement - {conn-10013, pstmt-20018} Parameters : [1, 1]
[14:20:52] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] ResultSet - {conn-10004, pstmt-20011, rs-50019} closed
[14:20:52] ResultSet - {conn-10004, pstmt-20011, rs-50019} closed
[14:20:52] Statement - {conn-10004, pstmt-20011} clearParameters. 
[14:20:52] Statement - {conn-10004, pstmt-20011} clearParameters. 
[14:20:52] Statement - {conn-10004, pstmt-20011} clearParameters. 
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] Connection - {conn-10004} pool-connect
[14:20:52] Connection - {conn-10004} pool-connect
[14:20:52] Connection - {conn-10004} pool-connect
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10004, pstmt-20007} Parameters : [1, 1]
[14:20:52] Statement - {conn-10004, pstmt-20007} Parameters : [1, 1]
[14:20:52] Statement - {conn-10004, pstmt-20007} Parameters : [1, 1]
[14:20:52] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 326.578066 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 326.578066 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 326.578066 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] StatFilter - slow sql 327 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[1,2]
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 330.355045 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 330.355045 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] Connection - {conn-10011} pool-connect
[14:20:52] Connection - {conn-10011} pool-connect
[14:20:52] Connection - {conn-10011} pool-connect
[14:20:52] Statement - {conn-10011, pstmt-20014} Parameters : [1, 2]
[14:20:52] Statement - {conn-10011, pstmt-20014} Parameters : [1, 2]
[14:20:52] Statement - {conn-10011, pstmt-20014} Parameters : [1, 2]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 330.355045 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] StatFilter - slow sql 334 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[1,1]
[14:20:52] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Statement - {conn-10012, pstmt-20016} Parameters : [1, 2]
[14:20:52] Statement - {conn-10012, pstmt-20016} Parameters : [1, 2]
[14:20:52] Statement - {conn-10012, pstmt-20016} Parameters : [1, 2]
[14:20:52] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 2.267207 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 2.267207 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 2.267207 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} Parameters : [1, 2]
[14:20:52] Statement - {conn-10012, pstmt-20016} Parameters : [1, 2]
[14:20:52] Statement - {conn-10012, pstmt-20016} Parameters : [1, 2]
[14:20:52] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 0.97417 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 0.97417 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 0.97417 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Statement - {conn-10012, pstmt-20016} Parameters : [1, 2]
[14:20:52] Statement - {conn-10012, pstmt-20016} Parameters : [1, 2]
[14:20:52] Connection - {conn-10014} connected
[14:20:52] Connection - {conn-10014} connected
[14:20:52] Connection - {conn-10014} connected
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 53.607871 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 53.607871 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 53.607871 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:52] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:52] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 54.900016 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 54.900016 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 54.900016 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20016} Parameters : [1, 2]
[14:20:52] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:52] Connection - {conn-10004} pool-connect
[14:20:52] Connection - {conn-10004} pool-connect
[14:20:52] Connection - {conn-10004} pool-connect
[14:20:52] Statement - {conn-10004, pstmt-20007} Parameters : [1, 2]
[14:20:52] Statement - {conn-10004, pstmt-20007} Parameters : [1, 2]
[14:20:52] Statement - {conn-10004, pstmt-20007} Parameters : [1, 2]
[14:20:52] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 29.178802 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 29.178802 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 29.178802 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 8.175605 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 8.175605 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 8.175605 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:52] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:52] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:52] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:52] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:52] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:52] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:52] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:52] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Connection - {conn-10011} pool-connect
[14:20:52] Connection - {conn-10011} pool-connect
[14:20:52] Connection - {conn-10011} pool-connect
[14:20:52] Connection - {conn-10004} pool-connect
[14:20:52] Connection - {conn-10004} pool-connect
[14:20:52] Connection - {conn-10004} pool-connect
[14:20:52] Connection - {conn-10014} pool-connect
[14:20:52] Connection - {conn-10014} pool-connect
[14:20:52] Connection - {conn-10014} pool-connect
[14:20:52] Statement - {conn-10012, pstmt-20016} Parameters : [1, 2]
[14:20:52] Statement - {conn-10012, pstmt-20016} Parameters : [1, 2]
[14:20:52] Statement - {conn-10012, pstmt-20016} Parameters : [1, 2]
[14:20:52] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10004, pstmt-20007} Parameters : [1, 2]
[14:20:52] Statement - {conn-10004, pstmt-20007} Parameters : [1, 2]
[14:20:52] Statement - {conn-10004, pstmt-20007} Parameters : [1, 2]
[14:20:52] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} Parameters : [1, 3]
[14:20:52] Statement - {conn-10011, pstmt-20014} Parameters : [1, 3]
[14:20:52] Statement - {conn-10011, pstmt-20014} Parameters : [1, 3]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 3.731513 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 3.731513 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 3.731513 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 1.530529 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 1.530529 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 1.530529 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:52] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:52] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Connection - {conn-10004} pool-connect
[14:20:52] Connection - {conn-10004} pool-connect
[14:20:52] Connection - {conn-10004} pool-connect
[14:20:52] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Connection - {conn-10015} connected
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 10.318055 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} Parameters : [1, 2]
[14:20:52] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:20:52.223]
[14:20:52] Connection - {conn-10015} connected
[14:20:52] Connection - {conn-10015} connected
[14:20:52] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:20:52.223]
[14:20:52] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:20:52.223]
[14:20:52] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:52] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:52] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:52] Statement - {conn-10004, pstmt-20007} Parameters : [1, 2]
[14:20:52] Statement - {conn-10004, pstmt-20007} Parameters : [1, 2]
[14:20:52] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 2
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 18.45884 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 18.45884 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 18.45884 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:52] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:52] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 10.318055 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 10.318055 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Connection - {conn-10011} pool-connect
[14:20:52] Connection - {conn-10011} pool-connect
[14:20:52] Connection - {conn-10011} pool-connect
[14:20:52] Statement - {conn-10011, pstmt-20014} Parameters : [1, 3]
[14:20:52] Statement - {conn-10011, pstmt-20014} Parameters : [1, 3]
[14:20:52] Statement - {conn-10011, pstmt-20014} Parameters : [1, 3]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 0.814437 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 0.814437 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 0.814437 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Connection - {conn-10011} pool-connect
[14:20:52] Connection - {conn-10011} pool-connect
[14:20:52] Connection - {conn-10011} pool-connect
[14:20:52] Connection - {conn-10015} pool-connect
[14:20:52] Connection - {conn-10015} pool-connect
[14:20:52] Connection - {conn-10015} pool-connect
[14:20:52] Connection - {conn-10004} pool-connect
[14:20:52] Connection - {conn-10004} pool-connect
[14:20:52] Connection - {conn-10004} pool-connect
[14:20:52] Statement - {conn-10004, pstmt-20007} Parameters : [1, 3]
[14:20:52] Statement - {conn-10004, pstmt-20007} Parameters : [1, 3]
[14:20:52] Statement - {conn-10004, pstmt-20007} Parameters : [1, 3]
[14:20:52] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:52] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:52] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:52.223')
[14:20:52] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:52.223')
[14:20:52] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:52.223')
[14:20:52] Statement - {conn-10012, pstmt-20017} executed. 45.550309 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:52] Statement - {conn-10012, pstmt-20017} executed. 45.550309 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:52] Statement - {conn-10012, pstmt-20017} executed. 45.550309 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:52] ResultSet - {conn-10012, pstmt-20017, rs-50020} open
[14:20:52] ResultSet - {conn-10012, pstmt-20017, rs-50020} open
[14:20:52] ResultSet - {conn-10012, pstmt-20017, rs-50020} Header: [GENERATED_KEY]
[14:20:52] ResultSet - {conn-10012, pstmt-20017, rs-50020} Header: [GENERATED_KEY]
[14:20:52] ResultSet - {conn-10012, pstmt-20017, rs-50020} Result: [89]
[14:20:52] ResultSet - {conn-10012, pstmt-20017, rs-50020} Result: [89]
[14:20:52] ResultSet - {conn-10012, pstmt-20017, rs-50020} closed
[14:20:52] ResultSet - {conn-10012, pstmt-20017, rs-50020} closed
[14:20:52] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 16.51593 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 16.51593 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 16.51593 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:52] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:52] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:52] Statement - {conn-10011, pstmt-20014} Parameters : [1, 3]
[14:20:52] Statement - {conn-10011, pstmt-20014} Parameters : [1, 3]
[14:20:52] Statement - {conn-10011, pstmt-20014} Parameters : [1, 3]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 21.982781 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 21.982781 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 21.982781 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:52] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:52] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:52] Statement - {conn-10014, pstmt-20019} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10014, pstmt-20019} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10014, pstmt-20019} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10014, pstmt-20019} Parameters : [1, 3]
[14:20:52] Statement - {conn-10014, pstmt-20019} Parameters : [1, 3]
[14:20:52] Statement - {conn-10014, pstmt-20019} Parameters : [1, 3]
[14:20:52] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10015, pstmt-20020} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10015, pstmt-20020} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10015, pstmt-20020} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10015, pstmt-20020} Parameters : [1, 3]
[14:20:52] Statement - {conn-10015, pstmt-20020} Parameters : [1, 3]
[14:20:52] Statement - {conn-10015, pstmt-20020} Parameters : [1, 3]
[14:20:52] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Statement - {conn-10012, pstmt-20016} Parameters : [1, 3]
[14:20:52] Statement - {conn-10012, pstmt-20016} Parameters : [1, 3]
[14:20:52] Statement - {conn-10012, pstmt-20016} Parameters : [1, 3]
[14:20:52] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:52] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:52] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 1
[14:20:52] Statement - {conn-10013, pstmt-20018} executed. 280.820622 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10013, pstmt-20018} executed. 280.820622 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10013, pstmt-20018} executed. 280.820622 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] StatFilter - slow sql 280 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[1,1]
[14:20:52] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:52] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:52] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:52] PreparedStatementPool - {conn-10013, pstmt-20018} enter cache
[14:20:52] Connection - {conn-10011} pool-connect
[14:20:52] Connection - {conn-10011} pool-connect
[14:20:52] Connection - {conn-10011} pool-connect
[14:20:52] Statement - {conn-10011, pstmt-20014} Parameters : [1, 3]
[14:20:52] Statement - {conn-10011, pstmt-20014} Parameters : [1, 3]
[14:20:52] Statement - {conn-10011, pstmt-20014} Parameters : [1, 3]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Connection - {conn-10004} pool-connect
[14:20:52] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Connection - {conn-10004} pool-connect
[14:20:52] Connection - {conn-10004} pool-connect
[14:20:52] Statement - {conn-10004, pstmt-20007} Parameters : [1, 3]
[14:20:52] Statement - {conn-10004, pstmt-20007} Parameters : [1, 3]
[14:20:52] Statement - {conn-10004, pstmt-20007} Parameters : [1, 3]
[14:20:52] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Connection - {conn-10013} pool-recycle
[14:20:52] Connection - {conn-10013} pool-recycle
[14:20:52] Connection - {conn-10013} pool-recycle
[14:20:52] Connection - {conn-10013} pool-connect
[14:20:52] Connection - {conn-10013} pool-connect
[14:20:52] Connection - {conn-10013} pool-connect
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 2.722171 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 2.722171 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 2.722171 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10015, pstmt-20020} executed. 17.739612 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10015, pstmt-20020} executed. 17.739612 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10015, pstmt-20020} executed. 17.739612 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Connection - {conn-10011} pool-connect
[14:20:52] Connection - {conn-10011} pool-connect
[14:20:52] Connection - {conn-10011} pool-connect
[14:20:52] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:52] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:52] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:52] PreparedStatementPool - {conn-10015, pstmt-20020} enter cache
[14:20:52] Connection - {conn-10015} pool-recycle
[14:20:52] Connection - {conn-10015} pool-recycle
[14:20:52] Connection - {conn-10015} pool-recycle
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Connection - {conn-10015} pool-connect
[14:20:52] Connection - {conn-10015} pool-connect
[14:20:52] Connection - {conn-10015} pool-connect
[14:20:52] Statement - {conn-10015, pstmt-20021} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:52] Statement - {conn-10015, pstmt-20021} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:52] Statement - {conn-10015, pstmt-20021} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:52] Statement - {conn-10015, pstmt-20021} Parameters : [null, 1, 手机, 2018-06-22 14:20:52.478]
[14:20:52] Statement - {conn-10015, pstmt-20021} Parameters : [null, 1, 手机, 2018-06-22 14:20:52.478]
[14:20:52] Statement - {conn-10015, pstmt-20021} Parameters : [null, 1, 手机, 2018-06-22 14:20:52.478]
[14:20:52] Statement - {conn-10015, pstmt-20021} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:52] Statement - {conn-10015, pstmt-20021} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:52] Statement - {conn-10015, pstmt-20021} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:52] Statement - {conn-10013, pstmt-20018} Parameters : [1, 3]
[14:20:52] Statement - {conn-10013, pstmt-20018} Parameters : [1, 3]
[14:20:52] Statement - {conn-10013, pstmt-20018} Parameters : [1, 3]
[14:20:52] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 21.635831 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 21.635831 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 21.635831 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Connection - {conn-10016} connected
[14:20:52] Connection - {conn-10016} connected
[14:20:52] Connection - {conn-10016} connected
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 22.854323 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 22.854323 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} executed. 22.854323 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:52] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:52] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:52] Statement - {conn-10015, pstmt-20021} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:52.478')
[14:20:52] Statement - {conn-10015, pstmt-20021} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:52.478')
[14:20:52] Statement - {conn-10015, pstmt-20021} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:52.478')
[14:20:52] Statement - {conn-10015, pstmt-20021} executed. 15.718648 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:52] Statement - {conn-10015, pstmt-20021} executed. 15.718648 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:52] Statement - {conn-10015, pstmt-20021} executed. 15.718648 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:52] ResultSet - {conn-10015, pstmt-20021, rs-50021} open
[14:20:52] ResultSet - {conn-10015, pstmt-20021, rs-50021} open
[14:20:52] ResultSet - {conn-10015, pstmt-20021, rs-50021} Header: [GENERATED_KEY]
[14:20:52] ResultSet - {conn-10015, pstmt-20021, rs-50021} Header: [GENERATED_KEY]
[14:20:52] ResultSet - {conn-10015, pstmt-20021, rs-50021} Result: [90]
[14:20:52] ResultSet - {conn-10015, pstmt-20021, rs-50021} Result: [90]
[14:20:52] ResultSet - {conn-10015, pstmt-20021, rs-50021} closed
[14:20:52] ResultSet - {conn-10015, pstmt-20021, rs-50021} closed
[14:20:52] Statement - {conn-10015, pstmt-20021} clearParameters. 
[14:20:52] Statement - {conn-10015, pstmt-20021} clearParameters. 
[14:20:52] Statement - {conn-10015, pstmt-20021} clearParameters. 
[14:20:52] PreparedStatementPool - {conn-10015, pstmt-20021} enter cache
[14:20:52] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10013, pstmt-20018} executed. 22.626484 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10013, pstmt-20018} executed. 22.626484 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10013, pstmt-20018} executed. 22.626484 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:52] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:52] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:52] Statement - {conn-10011, pstmt-20014} Parameters : [1, 3]
[14:20:52] Statement - {conn-10011, pstmt-20014} Parameters : [1, 3]
[14:20:52] Statement - {conn-10011, pstmt-20014} Parameters : [1, 3]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10014, pstmt-20019} executed. 41.924342 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10014, pstmt-20019} executed. 41.924342 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10014, pstmt-20019} executed. 41.924342 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:52] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:52] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:52] PreparedStatementPool - {conn-10014, pstmt-20019} enter cache
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 3
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 21.874199 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 21.874199 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} executed. 21.874199 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] Connection - {conn-10004} pool-recycle
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Statement - {conn-10012, pstmt-20016} Parameters : [1, 4]
[14:20:52] Statement - {conn-10012, pstmt-20016} Parameters : [1, 4]
[14:20:52] Connection - {conn-10015} pool-recycle
[14:20:52] Connection - {conn-10015} pool-recycle
[14:20:52] Connection - {conn-10015} pool-recycle
[14:20:52] Statement - {conn-10012, pstmt-20016} Parameters : [1, 4]
[14:20:52] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:52] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:52] Connection - {conn-10013} pool-recycle
[14:20:52] Connection - {conn-10013} pool-recycle
[14:20:52] Connection - {conn-10013} pool-recycle
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Connection - {conn-10014} pool-recycle
[14:20:52] Connection - {conn-10014} pool-recycle
[14:20:52] Connection - {conn-10014} pool-recycle
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] Connection - {conn-10011} pool-recycle
[14:20:52] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 4
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 18.939826 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 18.939826 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10012, pstmt-20016} executed. 18.939826 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Connection - {conn-10012} pool-connect
[14:20:52] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:20:52.594]
[14:20:52] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:20:52.594]
[14:20:52] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:20:52.594]
[14:20:52] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:52] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:52] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:52] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:52.594')
[14:20:52] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:52.594')
[14:20:52] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:52.594')
[14:20:52] Statement - {conn-10012, pstmt-20017} executed. 200.610058 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:52] Statement - {conn-10012, pstmt-20017} executed. 200.610058 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:52] Statement - {conn-10012, pstmt-20017} executed. 200.610058 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:52] StatFilter - slow sql 201 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[null,1,"手机","2018-06-22 14:20:52"]
[14:20:52] ResultSet - {conn-10012, pstmt-20017, rs-50022} open
[14:20:52] ResultSet - {conn-10012, pstmt-20017, rs-50022} open
[14:20:52] ResultSet - {conn-10012, pstmt-20017, rs-50022} Header: [GENERATED_KEY]
[14:20:52] ResultSet - {conn-10012, pstmt-20017, rs-50022} Header: [GENERATED_KEY]
[14:20:52] ResultSet - {conn-10012, pstmt-20017, rs-50022} Result: [91]
[14:20:52] ResultSet - {conn-10012, pstmt-20017, rs-50022} Result: [91]
[14:20:52] ResultSet - {conn-10012, pstmt-20017, rs-50022} closed
[14:20:52] ResultSet - {conn-10012, pstmt-20017, rs-50022} closed
[14:20:52] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:20:52] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:52] Connection - {conn-10012} pool-recycle
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] Connection - {conn-10012} pool-connect
[14:20:53] Connection - {conn-10012} pool-connect
[14:20:53] Connection - {conn-10012} pool-connect
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] Statement - {conn-10012, pstmt-20016} Parameters : [1, 5]
[14:20:53] Statement - {conn-10012, pstmt-20016} Parameters : [1, 5]
[14:20:53] Statement - {conn-10012, pstmt-20016} Parameters : [1, 5]
[14:20:53] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] Connection - {conn-10016} pool-connect
[14:20:53] Connection - {conn-10016} pool-connect
[14:20:53] Connection - {conn-10016} pool-connect
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 31.059472 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 31.059472 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 31.059472 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:53] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:53] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:53] Connection - {conn-10012} pool-recycle
[14:20:53] Connection - {conn-10012} pool-recycle
[14:20:53] Connection - {conn-10012} pool-recycle
[14:20:53] Connection - {conn-10012} pool-connect
[14:20:53] Connection - {conn-10012} pool-connect
[14:20:53] Connection - {conn-10012} pool-connect
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] Statement - {conn-10012, pstmt-20016} Parameters : [1, 5]
[14:20:53] Statement - {conn-10012, pstmt-20016} Parameters : [1, 5]
[14:20:53] Statement - {conn-10012, pstmt-20016} Parameters : [1, 5]
[14:20:53] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 0.841507 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 0.841507 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 0.841507 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:53] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:53] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:53] Connection - {conn-10012} pool-recycle
[14:20:53] Connection - {conn-10012} pool-recycle
[14:20:53] Connection - {conn-10012} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] Connection - {conn-10012} pool-connect
[14:20:53] Connection - {conn-10012} pool-connect
[14:20:53] Connection - {conn-10012} pool-connect
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] Statement - {conn-10012, pstmt-20016} Parameters : [1, 5]
[14:20:53] Statement - {conn-10012, pstmt-20016} Parameters : [1, 5]
[14:20:53] Statement - {conn-10012, pstmt-20016} Parameters : [1, 5]
[14:20:53] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:53] Connection - {conn-10011} pool-connect
[14:20:53] Connection - {conn-10011} pool-connect
[14:20:53] Connection - {conn-10011} pool-connect
[14:20:53] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 14:20:53.202]
[14:20:53] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 14:20:53.202]
[14:20:53] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 14:20:53.202]
[14:20:53] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:53] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:53] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:53] Connection - {conn-10014} pool-connect
[14:20:53] Connection - {conn-10014} pool-connect
[14:20:53] Connection - {conn-10014} pool-connect
[14:20:53] Statement - {conn-10014, pstmt-20019} Parameters : [1, 6]
[14:20:53] Statement - {conn-10014, pstmt-20019} Parameters : [1, 6]
[14:20:53] Statement - {conn-10014, pstmt-20019} Parameters : [1, 6]
[14:20:53] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 4.871101 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 4.871101 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 4.871101 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:53] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:53] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:53] Connection - {conn-10012} pool-recycle
[14:20:53] Connection - {conn-10012} pool-recycle
[14:20:53] Connection - {conn-10012} pool-recycle
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 1.375209 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 1.375209 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 1.375209 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Connection - {conn-10012} pool-connect
[14:20:53] Connection - {conn-10012} pool-connect
[14:20:53] Connection - {conn-10012} pool-connect
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:53.202')
[14:20:53] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:53.202')
[14:20:53] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:53.202')
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] Statement - {conn-10011, pstmt-20015} executed. 5.998356 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:53] Statement - {conn-10011, pstmt-20015} executed. 5.998356 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:53] Statement - {conn-10011, pstmt-20015} executed. 5.998356 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Connection - {conn-10015} pool-connect
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] Statement - {conn-10012, pstmt-20016} Parameters : [1, 6]
[14:20:53] ResultSet - {conn-10011, pstmt-20015, rs-50023} open
[14:20:53] ResultSet - {conn-10011, pstmt-20015, rs-50023} open
[14:20:53] ResultSet - {conn-10011, pstmt-20015, rs-50023} Header: [GENERATED_KEY]
[14:20:53] ResultSet - {conn-10011, pstmt-20015, rs-50023} Header: [GENERATED_KEY]
[14:20:53] ResultSet - {conn-10011, pstmt-20015, rs-50023} Result: [92]
[14:20:53] ResultSet - {conn-10011, pstmt-20015, rs-50023} Result: [92]
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] ResultSet - {conn-10011, pstmt-20015, rs-50023} closed
[14:20:53] ResultSet - {conn-10011, pstmt-20015, rs-50023} closed
[14:20:53] Statement - {conn-10011, pstmt-20015} clearParameters. 
[14:20:53] Statement - {conn-10011, pstmt-20015} clearParameters. 
[14:20:53] Statement - {conn-10011, pstmt-20015} clearParameters. 
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Connection - {conn-10011} pool-recycle
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 31.415961 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Connection - {conn-10011} pool-recycle
[14:20:53] Connection - {conn-10011} pool-recycle
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10012, pstmt-20016} Parameters : [1, 6]
[14:20:53] Statement - {conn-10012, pstmt-20016} Parameters : [1, 6]
[14:20:53] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] Connection - {conn-10015} pool-connect
[14:20:53] Connection - {conn-10015} pool-connect
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 31.415961 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 31.415961 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 0.999166 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 0.999166 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 0.999166 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10015, pstmt-20020} Parameters : [1, 6]
[14:20:53] Statement - {conn-10015, pstmt-20020} Parameters : [1, 6]
[14:20:53] Statement - {conn-10015, pstmt-20020} Parameters : [1, 6]
[14:20:53] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 0.839794 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 0.839794 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 0.839794 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:53] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:53] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:53] Connection - {conn-10015} pool-recycle
[14:20:53] Connection - {conn-10015} pool-recycle
[14:20:53] Connection - {conn-10015} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 28.503113 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 28.503113 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Connection - {conn-10015} pool-connect
[14:20:53] Connection - {conn-10015} pool-connect
[14:20:53] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:53] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:53] Connection - {conn-10011} pool-connect
[14:20:53] Connection - {conn-10011} pool-connect
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] Statement - {conn-10016, pstmt-20022} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10016, pstmt-20022} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10016, pstmt-20022} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10016, pstmt-20022} Parameters : [1, 5]
[14:20:53] Statement - {conn-10016, pstmt-20022} Parameters : [1, 5]
[14:20:53] Statement - {conn-10016, pstmt-20022} Parameters : [1, 5]
[14:20:53] Statement - {conn-10016, pstmt-20022} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10016, pstmt-20022} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10016, pstmt-20022} Types : [INTEGER, INTEGER]
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Connection - {conn-10011} pool-connect
[14:20:53] Statement - {conn-10011, pstmt-20014} Parameters : [1, 6]
[14:20:53] Statement - {conn-10011, pstmt-20014} Parameters : [1, 6]
[14:20:53] Statement - {conn-10011, pstmt-20014} Parameters : [1, 6]
[14:20:53] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:53] Connection - {conn-10004} pool-connect
[14:20:53] Connection - {conn-10004} pool-connect
[14:20:53] Connection - {conn-10004} pool-connect
[14:20:53] Statement - {conn-10004, pstmt-20007} Parameters : [1, 6]
[14:20:53] Statement - {conn-10004, pstmt-20007} Parameters : [1, 6]
[14:20:53] Statement - {conn-10004, pstmt-20007} Parameters : [1, 6]
[14:20:53] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 6.754444 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 6.754444 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 6.754444 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:53] Connection - {conn-10015} pool-connect
[14:20:53] Statement - {conn-10015, pstmt-20020} Parameters : [1, 6]
[14:20:53] Statement - {conn-10015, pstmt-20020} Parameters : [1, 6]
[14:20:53] Statement - {conn-10015, pstmt-20020} Parameters : [1, 6]
[14:20:53] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 28.503113 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:53] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:53] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 0.912407 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 0.912407 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 0.912407 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:53] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:53] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Connection - {conn-10014} pool-recycle
[14:20:53] Connection - {conn-10014} pool-recycle
[14:20:53] Connection - {conn-10014} pool-recycle
[14:20:53] Connection - {conn-10012} pool-recycle
[14:20:53] Connection - {conn-10012} pool-recycle
[14:20:53] Connection - {conn-10012} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Connection - {conn-10015} pool-recycle
[14:20:53] Connection - {conn-10015} pool-recycle
[14:20:53] Connection - {conn-10015} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Connection - {conn-10015} pool-connect
[14:20:53] Connection - {conn-10015} pool-connect
[14:20:53] Connection - {conn-10015} pool-connect
[14:20:53] Statement - {conn-10015, pstmt-20020} Parameters : [1, 6]
[14:20:53] Statement - {conn-10015, pstmt-20020} Parameters : [1, 6]
[14:20:53] Statement - {conn-10015, pstmt-20020} Parameters : [1, 6]
[14:20:53] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:53] Connection - {conn-10012} pool-connect
[14:20:53] Connection - {conn-10012} pool-connect
[14:20:53] Connection - {conn-10012} pool-connect
[14:20:53] Statement - {conn-10012, pstmt-20016} Parameters : [1, 6]
[14:20:53] Statement - {conn-10012, pstmt-20016} Parameters : [1, 6]
[14:20:53] Statement - {conn-10012, pstmt-20016} Parameters : [1, 6]
[14:20:53] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:53] Connection - {conn-10014} pool-connect
[14:20:53] Connection - {conn-10014} pool-connect
[14:20:53] Connection - {conn-10014} pool-connect
[14:20:53] Statement - {conn-10014, pstmt-20019} Parameters : [1, 6]
[14:20:53] Statement - {conn-10014, pstmt-20019} Parameters : [1, 6]
[14:20:53] Statement - {conn-10014, pstmt-20019} Parameters : [1, 6]
[14:20:53] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 0.958039 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 0.958039 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 0.958039 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 0.490207 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 0.490207 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 0.490207 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 0.522745 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 0.522745 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 0.522745 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 6]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 5.880266 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 5.880266 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 5.880266 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:53] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:53] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:53] Connection - {conn-10014} pool-recycle
[14:20:53] Connection - {conn-10014} pool-recycle
[14:20:53] Connection - {conn-10014} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Connection - {conn-10014} pool-connect
[14:20:53] Connection - {conn-10014} pool-connect
[14:20:53] Connection - {conn-10014} pool-connect
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10014, pstmt-20019} Parameters : [1, 6]
[14:20:53] Statement - {conn-10014, pstmt-20019} Parameters : [1, 6]
[14:20:53] Statement - {conn-10014, pstmt-20019} Parameters : [1, 6]
[14:20:53] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 20.082647 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 20.082647 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 20.082647 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:53] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:53] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:53] Connection - {conn-10004} pool-recycle
[14:20:53] Connection - {conn-10004} pool-recycle
[14:20:53] Connection - {conn-10004} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 2.889023 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 2.889023 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 2.889023 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 8.824062 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 8.824062 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10012, pstmt-20016} executed. 8.824062 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 9.435909 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 9.435909 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 9.435909 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:53] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:53] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 1.733826 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 1.733826 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 1.733826 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:53] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:53] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:53] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:53] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:53] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:53] Connection - {conn-10004} pool-connect
[14:20:53] Connection - {conn-10004} pool-connect
[14:20:53] Connection - {conn-10004} pool-connect
[14:20:53] Statement - {conn-10004, pstmt-20007} Parameters : [1, 6]
[14:20:53] Statement - {conn-10004, pstmt-20007} Parameters : [1, 6]
[14:20:53] Statement - {conn-10004, pstmt-20007} Parameters : [1, 6]
[14:20:53] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 2.176321 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 2.176321 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 2.176321 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:53] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:53] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10011, pstmt-20014} executed. 62.360381 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10011, pstmt-20014} executed. 62.360381 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10011, pstmt-20014} executed. 62.360381 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:53] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:53] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:53] Connection - {conn-10017} connected
[14:20:53] Connection - {conn-10017} connected
[14:20:53] Connection - {conn-10017} connected
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Connection - {conn-10015} pool-recycle
[14:20:53] Connection - {conn-10015} pool-recycle
[14:20:53] Connection - {conn-10015} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Connection - {conn-10014} pool-recycle
[14:20:53] Connection - {conn-10014} pool-recycle
[14:20:53] Connection - {conn-10014} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Connection - {conn-10012} pool-recycle
[14:20:53] Connection - {conn-10012} pool-recycle
[14:20:53] Connection - {conn-10012} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Connection - {conn-10004} pool-recycle
[14:20:53] Connection - {conn-10004} pool-recycle
[14:20:53] Connection - {conn-10004} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Connection - {conn-10011} pool-recycle
[14:20:53] Connection - {conn-10011} pool-recycle
[14:20:53] Connection - {conn-10011} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Connection - {conn-10011} pool-connect
[14:20:53] Connection - {conn-10011} pool-connect
[14:20:53] Connection - {conn-10011} pool-connect
[14:20:53] Connection - {conn-10004} pool-connect
[14:20:53] Connection - {conn-10004} pool-connect
[14:20:53] Connection - {conn-10004} pool-connect
[14:20:53] Statement - {conn-10004, pstmt-20007} Parameters : [1, 6]
[14:20:53] Statement - {conn-10004, pstmt-20007} Parameters : [1, 6]
[14:20:53] Statement - {conn-10011, pstmt-20014} Parameters : [1, 6]
[14:20:53] Statement - {conn-10011, pstmt-20014} Parameters : [1, 6]
[14:20:53] Statement - {conn-10016, pstmt-20022} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[14:20:53] Statement - {conn-10016, pstmt-20022} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[14:20:53] Statement - {conn-10004, pstmt-20007} Parameters : [1, 6]
[14:20:53] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10016, pstmt-20022} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 5
[14:20:53] Statement - {conn-10016, pstmt-20022} executed. 91.785081 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10016, pstmt-20022} executed. 91.785081 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10016, pstmt-20022} executed. 91.785081 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:53] Statement - {conn-10016, pstmt-20022} clearParameters. 
[14:20:53] Statement - {conn-10016, pstmt-20022} clearParameters. 
[14:20:53] Statement - {conn-10016, pstmt-20022} clearParameters. 
[14:20:53] PreparedStatementPool - {conn-10016, pstmt-20022} enter cache
[14:20:53] Statement - {conn-10011, pstmt-20014} Parameters : [1, 6]
[14:20:53] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:53] Connection - {conn-10012} pool-connect
[14:20:53] Connection - {conn-10012} pool-connect
[14:20:53] Connection - {conn-10012} pool-connect
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 2.10492 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 2.10492 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 2.10492 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:53] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:53] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:53] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:20:53.445]
[14:20:53] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:20:53.445]
[14:20:53] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:20:53.445]
[14:20:53] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:53] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:53] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:53] Connection - {conn-10014} pool-connect
[14:20:53] Connection - {conn-10014} pool-connect
[14:20:53] Connection - {conn-10014} pool-connect
[14:20:53] Statement - {conn-10014, pstmt-20019} Parameters : [1, 6]
[14:20:53] Statement - {conn-10014, pstmt-20019} Parameters : [1, 6]
[14:20:53] Statement - {conn-10014, pstmt-20019} Parameters : [1, 6]
[14:20:53] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:53] Connection - {conn-10015} pool-connect
[14:20:53] Connection - {conn-10015} pool-connect
[14:20:53] Connection - {conn-10015} pool-connect
[14:20:53] Statement - {conn-10015, pstmt-20020} Parameters : [1, 7]
[14:20:53] Statement - {conn-10015, pstmt-20020} Parameters : [1, 7]
[14:20:53] Statement - {conn-10015, pstmt-20020} Parameters : [1, 7]
[14:20:53] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Connection - {conn-10013} pool-connect
[14:20:53] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10011, pstmt-20014} executed. 3.720034 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10011, pstmt-20014} executed. 3.720034 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10011, pstmt-20014} executed. 3.720034 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 7]
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 7]
[14:20:53] Statement - {conn-10013, pstmt-20018} Parameters : [1, 7]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:53] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:53] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:53] Connection - {conn-10017} pool-connect
[14:20:53] Connection - {conn-10017} pool-connect
[14:20:53] Connection - {conn-10017} pool-connect
[14:20:53] Connection - {conn-10016} pool-recycle
[14:20:53] Connection - {conn-10016} pool-recycle
[14:20:53] Connection - {conn-10016} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Connection - {conn-10004} pool-recycle
[14:20:53] Connection - {conn-10004} pool-recycle
[14:20:53] Connection - {conn-10004} pool-recycle
[14:20:53] Connection - {conn-10004} pool-connect
[14:20:53] Connection - {conn-10004} pool-connect
[14:20:53] Connection - {conn-10004} pool-connect
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Statement - {conn-10004, pstmt-20007} Parameters : [1, 7]
[14:20:53] Statement - {conn-10004, pstmt-20007} Parameters : [1, 7]
[14:20:53] Statement - {conn-10004, pstmt-20007} Parameters : [1, 7]
[14:20:53] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:53] Connection - {conn-10011} pool-recycle
[14:20:53] Connection - {conn-10011} pool-recycle
[14:20:53] Connection - {conn-10011} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Connection - {conn-10011} pool-connect
[14:20:53] Connection - {conn-10011} pool-connect
[14:20:53] Connection - {conn-10011} pool-connect
[14:20:53] Statement - {conn-10011, pstmt-20014} Parameters : [1, 7]
[14:20:53] Statement - {conn-10011, pstmt-20014} Parameters : [1, 7]
[14:20:53] Statement - {conn-10011, pstmt-20014} Parameters : [1, 7]
[14:20:53] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10017, pstmt-20023} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10017, pstmt-20023} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10017, pstmt-20023} created. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10017, pstmt-20023} Parameters : [1, 7]
[14:20:53] Statement - {conn-10017, pstmt-20023} Parameters : [1, 7]
[14:20:53] Statement - {conn-10017, pstmt-20023} Parameters : [1, 7]
[14:20:53] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 35.854346 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 35.854346 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} executed. 35.854346 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Statement - {conn-10013, pstmt-20018} clearParameters. 
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] Connection - {conn-10013} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 34.855421 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 34.855421 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10004, pstmt-20007} executed. 34.855421 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:53] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:53] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:53] Connection - {conn-10004} pool-recycle
[14:20:53] Connection - {conn-10004} pool-recycle
[14:20:53] Connection - {conn-10004} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[14:20:53] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[14:20:53] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[14:20:53] Statement - {conn-10011, pstmt-20014} executed. 34.24489 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10011, pstmt-20014} executed. 34.24489 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10011, pstmt-20014} executed. 34.24489 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:53] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:53] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:53] Connection - {conn-10011} pool-recycle
[14:20:53] Connection - {conn-10011} pool-recycle
[14:20:53] Connection - {conn-10011} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[14:20:53] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[14:20:53] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[14:20:53] Statement - {conn-10017, pstmt-20023} executed. 19.242956 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10017, pstmt-20023} executed. 19.242956 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10017, pstmt-20023} executed. 19.242956 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:53] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:53] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:53] PreparedStatementPool - {conn-10017, pstmt-20023} enter cache
[14:20:53] Connection - {conn-10017} pool-recycle
[14:20:53] Connection - {conn-10017} pool-recycle
[14:20:53] Connection - {conn-10017} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 6
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 44.265043 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 44.265043 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10014, pstmt-20019} executed. 44.265043 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:53] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:53] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:53] Connection - {conn-10014} pool-recycle
[14:20:53] Connection - {conn-10014} pool-recycle
[14:20:53] Connection - {conn-10014} pool-recycle
[14:20:53] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:53] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:53.445')
[14:20:53] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:53.445')
[14:20:53] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:53.445')
[14:20:53] Statement - {conn-10012, pstmt-20017} executed. 96.818449 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:53] Statement - {conn-10012, pstmt-20017} executed. 96.818449 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:53] Statement - {conn-10012, pstmt-20017} executed. 96.818449 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:53] ResultSet - {conn-10012, pstmt-20017, rs-50024} open
[14:20:53] ResultSet - {conn-10012, pstmt-20017, rs-50024} open
[14:20:53] ResultSet - {conn-10012, pstmt-20017, rs-50024} Header: [GENERATED_KEY]
[14:20:53] ResultSet - {conn-10012, pstmt-20017, rs-50024} Header: [GENERATED_KEY]
[14:20:53] ResultSet - {conn-10012, pstmt-20017, rs-50024} Result: [93]
[14:20:53] ResultSet - {conn-10012, pstmt-20017, rs-50024} Result: [93]
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 7
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 117.626453 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] ResultSet - {conn-10012, pstmt-20017, rs-50024} closed
[14:20:53] ResultSet - {conn-10012, pstmt-20017, rs-50024} closed
[14:20:53] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:20:53] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:20:53] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:20:53] Connection - {conn-10012} pool-recycle
[14:20:53] Connection - {conn-10012} pool-recycle
[14:20:53] Connection - {conn-10012} pool-recycle
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 117.626453 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10015, pstmt-20020} executed. 117.626453 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:53] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:53] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:53] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:53] Connection - {conn-10015} pool-recycle
[14:20:53] Connection - {conn-10015} pool-recycle
[14:20:53] Connection - {conn-10015} pool-recycle
[14:20:53] Connection - {conn-10015} pool-connect
[14:20:53] Connection - {conn-10015} pool-connect
[14:20:53] Connection - {conn-10015} pool-connect
[14:20:53] Statement - {conn-10015, pstmt-20021} Parameters : [null, 1, 手机, 2018-06-22 14:20:53.635]
[14:20:53] Statement - {conn-10015, pstmt-20021} Parameters : [null, 1, 手机, 2018-06-22 14:20:53.635]
[14:20:53] Statement - {conn-10015, pstmt-20021} Parameters : [null, 1, 手机, 2018-06-22 14:20:53.635]
[14:20:53] Statement - {conn-10015, pstmt-20021} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:53] Statement - {conn-10015, pstmt-20021} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:53] Statement - {conn-10015, pstmt-20021} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:53] Statement - {conn-10015, pstmt-20021} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:53.635')
[14:20:53] Statement - {conn-10015, pstmt-20021} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:53.635')
[14:20:53] Statement - {conn-10015, pstmt-20021} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:53.635')
[14:20:53] Statement - {conn-10015, pstmt-20021} executed. 149.149543 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:53] Statement - {conn-10015, pstmt-20021} executed. 149.149543 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:53] Statement - {conn-10015, pstmt-20021} executed. 149.149543 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:53] ResultSet - {conn-10015, pstmt-20021, rs-50025} open
[14:20:53] ResultSet - {conn-10015, pstmt-20021, rs-50025} open
[14:20:53] ResultSet - {conn-10015, pstmt-20021, rs-50025} Header: [GENERATED_KEY]
[14:20:53] ResultSet - {conn-10015, pstmt-20021, rs-50025} Header: [GENERATED_KEY]
[14:20:53] ResultSet - {conn-10015, pstmt-20021, rs-50025} Result: [94]
[14:20:53] ResultSet - {conn-10015, pstmt-20021, rs-50025} Result: [94]
[14:20:53] ResultSet - {conn-10015, pstmt-20021, rs-50025} closed
[14:20:53] ResultSet - {conn-10015, pstmt-20021, rs-50025} closed
[14:20:53] Statement - {conn-10015, pstmt-20021} clearParameters. 
[14:20:53] Statement - {conn-10015, pstmt-20021} clearParameters. 
[14:20:53] Statement - {conn-10015, pstmt-20021} clearParameters. 
[14:20:53] Connection - {conn-10015} pool-recycle
[14:20:53] Connection - {conn-10015} pool-recycle
[14:20:53] Connection - {conn-10015} pool-recycle
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] Connection - {conn-10015} pool-connect
[14:20:54] Connection - {conn-10015} pool-connect
[14:20:54] Connection - {conn-10015} pool-connect
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] Statement - {conn-10015, pstmt-20020} Parameters : [1, 8]
[14:20:54] Statement - {conn-10015, pstmt-20020} Parameters : [1, 8]
[14:20:54] Statement - {conn-10015, pstmt-20020} Parameters : [1, 8]
[14:20:54] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:54] Connection - {conn-10012} pool-connect
[14:20:54] Connection - {conn-10012} pool-connect
[14:20:54] Connection - {conn-10012} pool-connect
[14:20:54] Statement - {conn-10012, pstmt-20016} Parameters : [1, 8]
[14:20:54] Statement - {conn-10012, pstmt-20016} Parameters : [1, 8]
[14:20:54] Statement - {conn-10012, pstmt-20016} Parameters : [1, 8]
[14:20:54] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:54] Connection - {conn-10014} pool-connect
[14:20:54] Connection - {conn-10014} pool-connect
[14:20:54] Connection - {conn-10014} pool-connect
[14:20:54] Statement - {conn-10014, pstmt-20019} Parameters : [1, 8]
[14:20:54] Statement - {conn-10014, pstmt-20019} Parameters : [1, 8]
[14:20:54] Statement - {conn-10014, pstmt-20019} Parameters : [1, 8]
[14:20:54] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[14:20:54] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[14:20:54] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[14:20:54] Statement - {conn-10012, pstmt-20016} executed. 1.731352 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10012, pstmt-20016} executed. 1.731352 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10012, pstmt-20016} executed. 1.731352 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:54] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:54] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:54] Connection - {conn-10012} pool-recycle
[14:20:54] Connection - {conn-10012} pool-recycle
[14:20:54] Connection - {conn-10012} pool-recycle
[14:20:54] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[14:20:54] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[14:20:54] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[14:20:54] Statement - {conn-10015, pstmt-20020} executed. 35.908829 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10015, pstmt-20020} executed. 35.908829 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10015, pstmt-20020} executed. 35.908829 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:54] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:54] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:54] Connection - {conn-10015} pool-recycle
[14:20:54] Connection - {conn-10015} pool-recycle
[14:20:54] Connection - {conn-10015} pool-recycle
[14:20:54] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[14:20:54] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[14:20:54] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 8
[14:20:54] Statement - {conn-10014, pstmt-20019} executed. 16.774256 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10014, pstmt-20019} executed. 16.774256 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10014, pstmt-20019} executed. 16.774256 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:54] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:54] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:54] Connection - {conn-10014} pool-recycle
[14:20:54] Connection - {conn-10014} pool-recycle
[14:20:54] Connection - {conn-10014} pool-recycle
[14:20:54] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] Connection - {conn-10014} pool-connect
[14:20:54] Connection - {conn-10014} pool-connect
[14:20:54] Connection - {conn-10014} pool-connect
[14:20:54] Statement - {conn-10014, pstmt-20024} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:54] Statement - {conn-10014, pstmt-20024} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:54] Statement - {conn-10014, pstmt-20024} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:54] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:54.247]
[14:20:54] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:54.247]
[14:20:54] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:54.247]
[14:20:54] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:54] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:54] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] Connection - {conn-10015} pool-connect
[14:20:54] Connection - {conn-10015} pool-connect
[14:20:54] Connection - {conn-10015} pool-connect
[14:20:54] Statement - {conn-10015, pstmt-20020} Parameters : [1, 9]
[14:20:54] Statement - {conn-10015, pstmt-20020} Parameters : [1, 9]
[14:20:54] Statement - {conn-10015, pstmt-20020} Parameters : [1, 9]
[14:20:54] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] Connection - {conn-10012} pool-connect
[14:20:54] Connection - {conn-10012} pool-connect
[14:20:54] Connection - {conn-10012} pool-connect
[14:20:54] Statement - {conn-10012, pstmt-20016} Parameters : [1, 9]
[14:20:54] Statement - {conn-10012, pstmt-20016} Parameters : [1, 9]
[14:20:54] Statement - {conn-10012, pstmt-20016} Parameters : [1, 9]
[14:20:54] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Statement - {conn-10017, pstmt-20023} Parameters : [1, 9]
[14:20:54] Statement - {conn-10017, pstmt-20023} Parameters : [1, 9]
[14:20:54] Statement - {conn-10017, pstmt-20023} Parameters : [1, 9]
[14:20:54] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:54] Connection - {conn-10011} pool-connect
[14:20:54] Connection - {conn-10011} pool-connect
[14:20:54] Connection - {conn-10011} pool-connect
[14:20:54] Statement - {conn-10011, pstmt-20014} Parameters : [1, 9]
[14:20:54] Statement - {conn-10011, pstmt-20014} Parameters : [1, 9]
[14:20:54] Statement - {conn-10011, pstmt-20014} Parameters : [1, 9]
[14:20:54] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10012, pstmt-20016} executed. 1.485766 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10012, pstmt-20016} executed. 1.485766 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10012, pstmt-20016} executed. 1.485766 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:54] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:54] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:54] Connection - {conn-10012} pool-recycle
[14:20:54] Connection - {conn-10012} pool-recycle
[14:20:54] Connection - {conn-10012} pool-recycle
[14:20:54] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:54] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10011, pstmt-20014} executed. 1.420559 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10011, pstmt-20014} executed. 1.420559 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10011, pstmt-20014} executed. 1.420559 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:54] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:54] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:54] Connection - {conn-10011} pool-recycle
[14:20:54] Connection - {conn-10011} pool-recycle
[14:20:54] Connection - {conn-10011} pool-recycle
[14:20:54] Connection - {conn-10011} pool-connect
[14:20:54] Connection - {conn-10011} pool-connect
[14:20:54] Connection - {conn-10011} pool-connect
[14:20:54] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:54] Statement - {conn-10011, pstmt-20014} Parameters : [1, 9]
[14:20:54] Statement - {conn-10011, pstmt-20014} Parameters : [1, 9]
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:54.247')
[14:20:54] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:54.247')
[14:20:54] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:54.247')
[14:20:54] Statement - {conn-10014, pstmt-20024} executed. 73.558479 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:54] Statement - {conn-10014, pstmt-20024} executed. 73.558479 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:54] Statement - {conn-10014, pstmt-20024} executed. 73.558479 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:54] Statement - {conn-10011, pstmt-20014} Parameters : [1, 9]
[14:20:54] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:54] ResultSet - {conn-10014, pstmt-20024, rs-50026} open
[14:20:54] ResultSet - {conn-10014, pstmt-20024, rs-50026} open
[14:20:54] ResultSet - {conn-10014, pstmt-20024, rs-50026} Header: [GENERATED_KEY]
[14:20:54] ResultSet - {conn-10014, pstmt-20024, rs-50026} Header: [GENERATED_KEY]
[14:20:54] ResultSet - {conn-10014, pstmt-20024, rs-50026} Result: [95]
[14:20:54] ResultSet - {conn-10014, pstmt-20024, rs-50026} Result: [95]
[14:20:54] ResultSet - {conn-10014, pstmt-20024, rs-50026} closed
[14:20:54] ResultSet - {conn-10014, pstmt-20024, rs-50026} closed
[14:20:54] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:54] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:54] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:54] PreparedStatementPool - {conn-10014, pstmt-20024} enter cache
[14:20:54] Connection - {conn-10014} pool-recycle
[14:20:54] Connection - {conn-10014} pool-recycle
[14:20:54] Connection - {conn-10014} pool-recycle
[14:20:54] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10011, pstmt-20014} executed. 67.574314 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10011, pstmt-20014} executed. 67.574314 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10011, pstmt-20014} executed. 67.574314 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:54] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:54] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:54] Connection - {conn-10011} pool-recycle
[14:20:54] Connection - {conn-10011} pool-recycle
[14:20:54] Connection - {conn-10011} pool-recycle
[14:20:54] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 5.41598 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 5.41598 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 5.41598 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] StatFilter - slow sql 376 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[1,9]
[14:20:54] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:54] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:54] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:54] Connection - {conn-10017} pool-recycle
[14:20:54] Connection - {conn-10017} pool-recycle
[14:20:54] Connection - {conn-10017} pool-recycle
[14:20:54] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] Statement - {conn-10017, pstmt-20023} Parameters : [1, 9]
[14:20:54] Statement - {conn-10017, pstmt-20023} Parameters : [1, 9]
[14:20:54] Statement - {conn-10017, pstmt-20023} Parameters : [1, 9]
[14:20:54] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 1.369893 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 1.369893 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 1.369893 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:54] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:54] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:54] Connection - {conn-10017} pool-recycle
[14:20:54] Connection - {conn-10017} pool-recycle
[14:20:54] Connection - {conn-10017} pool-recycle
[14:20:54] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Statement - {conn-10017, pstmt-20023} Parameters : [1, 9]
[14:20:54] Statement - {conn-10017, pstmt-20023} Parameters : [1, 9]
[14:20:54] Statement - {conn-10017, pstmt-20023} Parameters : [1, 9]
[14:20:54] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:54] Connection - {conn-10011} pool-connect
[14:20:54] Connection - {conn-10011} pool-connect
[14:20:54] Connection - {conn-10011} pool-connect
[14:20:54] Statement - {conn-10011, pstmt-20014} Parameters : [1, 9]
[14:20:54] Statement - {conn-10011, pstmt-20014} Parameters : [1, 9]
[14:20:54] Statement - {conn-10011, pstmt-20014} Parameters : [1, 9]
[14:20:54] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10011, pstmt-20014} executed. 0.816443 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10011, pstmt-20014} executed. 0.816443 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10011, pstmt-20014} executed. 0.816443 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:54] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:54] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:54] Connection - {conn-10011} pool-recycle
[14:20:54] Connection - {conn-10011} pool-recycle
[14:20:54] Connection - {conn-10011} pool-recycle
[14:20:54] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 8.272896 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 8.272896 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 8.272896 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:54] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:54] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:54] Connection - {conn-10017} pool-recycle
[14:20:54] Connection - {conn-10017} pool-recycle
[14:20:54] Connection - {conn-10017} pool-recycle
[14:20:54] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Statement - {conn-10017, pstmt-20023} Parameters : [1, 9]
[14:20:54] Statement - {conn-10017, pstmt-20023} Parameters : [1, 9]
[14:20:54] Statement - {conn-10017, pstmt-20023} Parameters : [1, 9]
[14:20:54] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 22.802271 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 22.802271 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 22.802271 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:54] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:54] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:54] Connection - {conn-10017} pool-recycle
[14:20:54] Connection - {conn-10017} pool-recycle
[14:20:54] Connection - {conn-10017} pool-recycle
[14:20:54] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Statement - {conn-10017, pstmt-20023} Parameters : [1, 9]
[14:20:54] Statement - {conn-10017, pstmt-20023} Parameters : [1, 9]
[14:20:54] Statement - {conn-10017, pstmt-20023} Parameters : [1, 9]
[14:20:54] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 1.012701 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 1.012701 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 1.012701 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:54] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:54] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:54] Connection - {conn-10017} pool-recycle
[14:20:54] Connection - {conn-10017} pool-recycle
[14:20:54] Connection - {conn-10017} pool-recycle
[14:20:54] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Statement - {conn-10017, pstmt-20023} Parameters : [1, 9]
[14:20:54] Statement - {conn-10017, pstmt-20023} Parameters : [1, 9]
[14:20:54] Statement - {conn-10017, pstmt-20023} Parameters : [1, 9]
[14:20:54] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 2.222712 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 2.222712 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10017, pstmt-20023} executed. 2.222712 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:54] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:54] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:54] Connection - {conn-10017} pool-recycle
[14:20:54] Connection - {conn-10017} pool-recycle
[14:20:54] Connection - {conn-10017} pool-recycle
[14:20:54] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10015, pstmt-20020} executed. 719.351294 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10015, pstmt-20020} executed. 719.351294 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10015, pstmt-20020} executed. 719.351294 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] StatFilter - slow sql 719 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[1,9]
[14:20:54] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:54] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:54] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:54] Connection - {conn-10015} pool-recycle
[14:20:54] Connection - {conn-10015} pool-recycle
[14:20:54] Connection - {conn-10015} pool-recycle
[14:20:54] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:54] Connection - {conn-10015} pool-connect
[14:20:54] Connection - {conn-10015} pool-connect
[14:20:54] Connection - {conn-10015} pool-connect
[14:20:54] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 库存不足 Redis currentCount=10, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 库存不足 Redis currentCount=10
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.checkStockByRedis(OrderServiceImpl.java:137)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:91)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:54] Statement - {conn-10015, pstmt-20020} Parameters : [1, 9]
[14:20:54] Statement - {conn-10015, pstmt-20020} Parameters : [1, 9]
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Statement - {conn-10015, pstmt-20020} Parameters : [1, 9]
[14:20:54] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:54] Connection - {conn-10011} pool-connect
[14:20:54] Connection - {conn-10011} pool-connect
[14:20:54] Connection - {conn-10011} pool-connect
[14:20:54] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 库存不足 Redis currentCount=10, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 库存不足 Redis currentCount=10
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.checkStockByRedis(OrderServiceImpl.java:137)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:91)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:54] Connection - {conn-10014} pool-connect
[14:20:54] Connection - {conn-10014} pool-connect
[14:20:54] Connection - {conn-10014} pool-connect
[14:20:54] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 库存不足 Redis currentCount=10, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 库存不足 Redis currentCount=10
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.checkStockByRedis(OrderServiceImpl.java:137)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:91)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:54] Connection - {conn-10012} pool-connect
[14:20:54] Connection - {conn-10012} pool-connect
[14:20:54] Connection - {conn-10012} pool-connect
[14:20:54] Connection - {conn-10017} pool-connect
[14:20:54] Statement - {conn-10011, pstmt-20014} Parameters : [1, 9]
[14:20:54] Statement - {conn-10011, pstmt-20014} Parameters : [1, 9]
[14:20:54] Statement - {conn-10011, pstmt-20014} Parameters : [1, 9]
[14:20:54] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:54] Connection - {conn-10004} pool-connect
[14:20:54] Connection - {conn-10004} pool-connect
[14:20:54] Connection - {conn-10004} pool-connect
[14:20:54] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10015, pstmt-20020} executed. 9.381845 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10015, pstmt-20020} executed. 9.381845 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10015, pstmt-20020} executed. 9.381845 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:54] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:54] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:54] Statement - {conn-10004, pstmt-20007} Parameters : [1, 9]
[14:20:54] Statement - {conn-10004, pstmt-20007} Parameters : [1, 9]
[14:20:54] Statement - {conn-10004, pstmt-20007} Parameters : [1, 9]
[14:20:54] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:54] Connection - {conn-10015} pool-recycle
[14:20:54] Connection - {conn-10015} pool-recycle
[14:20:54] Connection - {conn-10015} pool-recycle
[14:20:54] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:54] Statement - {conn-10012, pstmt-20016} Parameters : [1, 9]
[14:20:54] Statement - {conn-10012, pstmt-20016} Parameters : [1, 9]
[14:20:54] Statement - {conn-10012, pstmt-20016} Parameters : [1, 9]
[14:20:54] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10014, pstmt-20019} Parameters : [1, 9]
[14:20:54] Statement - {conn-10014, pstmt-20019} Parameters : [1, 9]
[14:20:54] Statement - {conn-10014, pstmt-20019} Parameters : [1, 9]
[14:20:54] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:54] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:54] Statement - {conn-10012, pstmt-20016} executed. 7.001415 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10012, pstmt-20016} executed. 7.001415 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10012, pstmt-20016} executed. 7.001415 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:54] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:54] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:54] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:54] Connection - {conn-10012} pool-recycle
[14:20:54] Connection - {conn-10012} pool-recycle
[14:20:54] Connection - {conn-10012} pool-recycle
[14:20:54] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:55] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 库存不足 Redis currentCount=10, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 库存不足 Redis currentCount=10
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.checkStockByRedis(OrderServiceImpl.java:137)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:91)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 9.96308 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 9.96308 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 9.96308 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:55] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:55] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:55] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:55] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:55] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:55] Statement - {conn-10011, pstmt-20014} executed. 14.491908 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10011, pstmt-20014} executed. 14.491908 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10011, pstmt-20014} executed. 14.491908 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Connection - {conn-10004} pool-recycle
[14:20:55] Connection - {conn-10004} pool-recycle
[14:20:55] Connection - {conn-10004} pool-recycle
[14:20:55] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:55] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:55] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:55] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:55] Connection - {conn-10011} pool-recycle
[14:20:55] Connection - {conn-10011} pool-recycle
[14:20:55] Connection - {conn-10011} pool-recycle
[14:20:55] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:55] Connection - {conn-10011} pool-connect
[14:20:55] Connection - {conn-10011} pool-connect
[14:20:55] Connection - {conn-10011} pool-connect
[14:20:55] Statement - {conn-10011, pstmt-20014} Parameters : [1, 10]
[14:20:55] Statement - {conn-10011, pstmt-20014} Parameters : [1, 10]
[14:20:55] Statement - {conn-10011, pstmt-20014} Parameters : [1, 10]
[14:20:55] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10017, pstmt-20025} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:55] Statement - {conn-10017, pstmt-20025} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:55] Statement - {conn-10017, pstmt-20025} created. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:55] Statement - {conn-10017, pstmt-20025} Parameters : [null, 1, 手机, 2018-06-22 14:20:54.987]
[14:20:55] Statement - {conn-10017, pstmt-20025} Parameters : [null, 1, 手机, 2018-06-22 14:20:54.987]
[14:20:55] Statement - {conn-10017, pstmt-20025} Parameters : [null, 1, 手机, 2018-06-22 14:20:54.987]
[14:20:55] Statement - {conn-10017, pstmt-20025} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:55] Statement - {conn-10017, pstmt-20025} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:55] Statement - {conn-10017, pstmt-20025} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 9
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 23.2874 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 23.2874 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 23.2874 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:55] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:55] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:55] Connection - {conn-10014} pool-recycle
[14:20:55] Connection - {conn-10014} pool-recycle
[14:20:55] Connection - {conn-10014} pool-recycle
[14:20:55] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:55] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 10
[14:20:55] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 10
[14:20:55] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 10
[14:20:55] Statement - {conn-10011, pstmt-20014} executed. 73.499118 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10011, pstmt-20014} executed. 73.499118 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10011, pstmt-20014} executed. 73.499118 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:55] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:55] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:55] Connection - {conn-10011} pool-recycle
[14:20:55] Connection - {conn-10011} pool-recycle
[14:20:55] Connection - {conn-10011} pool-recycle
[14:20:55] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:55] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:55] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:55] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:55] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:55] Statement - {conn-10017, pstmt-20025} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:54.987')
[14:20:55] Statement - {conn-10017, pstmt-20025} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:54.987')
[14:20:55] Statement - {conn-10017, pstmt-20025} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:54.987')
[14:20:55] Statement - {conn-10017, pstmt-20025} executed. 140.371831 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:55] Statement - {conn-10017, pstmt-20025} executed. 140.371831 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:55] Statement - {conn-10017, pstmt-20025} executed. 140.371831 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:55] ResultSet - {conn-10017, pstmt-20025, rs-50027} open
[14:20:55] ResultSet - {conn-10017, pstmt-20025, rs-50027} open
[14:20:55] ResultSet - {conn-10017, pstmt-20025, rs-50027} Header: [GENERATED_KEY]
[14:20:55] ResultSet - {conn-10017, pstmt-20025, rs-50027} Header: [GENERATED_KEY]
[14:20:55] ResultSet - {conn-10017, pstmt-20025, rs-50027} Result: [96]
[14:20:55] ResultSet - {conn-10017, pstmt-20025, rs-50027} Result: [96]
[14:20:55] ResultSet - {conn-10017, pstmt-20025, rs-50027} closed
[14:20:55] ResultSet - {conn-10017, pstmt-20025, rs-50027} closed
[14:20:55] Statement - {conn-10017, pstmt-20025} clearParameters. 
[14:20:55] Statement - {conn-10017, pstmt-20025} clearParameters. 
[14:20:55] Statement - {conn-10017, pstmt-20025} clearParameters. 
[14:20:55] PreparedStatementPool - {conn-10017, pstmt-20025} enter cache
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] Connection - {conn-10017} pool-connect
[14:20:55] Connection - {conn-10017} pool-connect
[14:20:55] Connection - {conn-10017} pool-connect
[14:20:55] Connection - {conn-10011} pool-connect
[14:20:55] Connection - {conn-10011} pool-connect
[14:20:55] Connection - {conn-10011} pool-connect
[14:20:55] Statement - {conn-10017, pstmt-20023} Parameters : [1, 10]
[14:20:55] Statement - {conn-10017, pstmt-20023} Parameters : [1, 10]
[14:20:55] Statement - {conn-10017, pstmt-20023} Parameters : [1, 10]
[14:20:55] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 14:20:55.151]
[14:20:55] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 14:20:55.151]
[14:20:55] Statement - {conn-10011, pstmt-20015} Parameters : [null, 1, 手机, 2018-06-22 14:20:55.151]
[14:20:55] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:55] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:55] Statement - {conn-10011, pstmt-20015} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 10
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 10
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 10
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 1.422586 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 1.422586 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 1.422586 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:55] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:55] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:55] Connection - {conn-10017} pool-connect
[14:20:55] Connection - {conn-10017} pool-connect
[14:20:55] Connection - {conn-10017} pool-connect
[14:20:55] Statement - {conn-10017, pstmt-20023} Parameters : [1, 11]
[14:20:55] Statement - {conn-10017, pstmt-20023} Parameters : [1, 11]
[14:20:55] Statement - {conn-10017, pstmt-20023} Parameters : [1, 11]
[14:20:55] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:55] Connection - {conn-10014} pool-connect
[14:20:55] Connection - {conn-10014} pool-connect
[14:20:55] Connection - {conn-10014} pool-connect
[14:20:55] Statement - {conn-10014, pstmt-20019} Parameters : [1, 11]
[14:20:55] Statement - {conn-10014, pstmt-20019} Parameters : [1, 11]
[14:20:55] Statement - {conn-10014, pstmt-20019} Parameters : [1, 11]
[14:20:55] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:55] Connection - {conn-10004} pool-connect
[14:20:55] Connection - {conn-10004} pool-connect
[14:20:55] Connection - {conn-10004} pool-connect
[14:20:55] Statement - {conn-10004, pstmt-20007} Parameters : [1, 11]
[14:20:55] Statement - {conn-10004, pstmt-20007} Parameters : [1, 11]
[14:20:55] Statement - {conn-10004, pstmt-20007} Parameters : [1, 11]
[14:20:55] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:55] Connection - {conn-10012} pool-connect
[14:20:55] Connection - {conn-10012} pool-connect
[14:20:55] Connection - {conn-10012} pool-connect
[14:20:55] Statement - {conn-10012, pstmt-20016} Parameters : [1, 11]
[14:20:55] Statement - {conn-10012, pstmt-20016} Parameters : [1, 11]
[14:20:55] Statement - {conn-10012, pstmt-20016} Parameters : [1, 11]
[14:20:55] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:55.151')
[14:20:55] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:55.151')
[14:20:55] Statement - {conn-10011, pstmt-20015} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:55.151')
[14:20:55] Statement - {conn-10011, pstmt-20015} executed. 78.120958 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:55] Statement - {conn-10011, pstmt-20015} executed. 78.120958 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:55] Statement - {conn-10011, pstmt-20015} executed. 78.120958 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:55] ResultSet - {conn-10011, pstmt-20015, rs-50028} open
[14:20:55] ResultSet - {conn-10011, pstmt-20015, rs-50028} open
[14:20:55] ResultSet - {conn-10011, pstmt-20015, rs-50028} Header: [GENERATED_KEY]
[14:20:55] ResultSet - {conn-10011, pstmt-20015, rs-50028} Header: [GENERATED_KEY]
[14:20:55] ResultSet - {conn-10011, pstmt-20015, rs-50028} Result: [97]
[14:20:55] ResultSet - {conn-10011, pstmt-20015, rs-50028} Result: [97]
[14:20:55] ResultSet - {conn-10011, pstmt-20015, rs-50028} closed
[14:20:55] ResultSet - {conn-10011, pstmt-20015, rs-50028} closed
[14:20:55] Statement - {conn-10011, pstmt-20015} clearParameters. 
[14:20:55] Statement - {conn-10011, pstmt-20015} clearParameters. 
[14:20:55] Statement - {conn-10011, pstmt-20015} clearParameters. 
[14:20:55] Connection - {conn-10011} pool-recycle
[14:20:55] Connection - {conn-10011} pool-recycle
[14:20:55] Connection - {conn-10011} pool-recycle
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 47.419801 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 47.419801 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 47.419801 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10012, pstmt-20016} executed. 27.470106 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10012, pstmt-20016} executed. 27.470106 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10012, pstmt-20016} executed. 27.470106 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:55] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:55] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:55] Connection - {conn-10012} pool-recycle
[14:20:55] Connection - {conn-10012} pool-recycle
[14:20:55] Connection - {conn-10012} pool-recycle
[14:20:55] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:55] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:55] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 49.044233 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 49.044233 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 49.044233 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:55] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:55] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:55] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:55] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:55] Connection - {conn-10004} pool-recycle
[14:20:55] Connection - {conn-10004} pool-recycle
[14:20:55] Connection - {conn-10004} pool-recycle
[14:20:55] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:55] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:55] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:55] Connection - {conn-10004} pool-connect
[14:20:55] Connection - {conn-10004} pool-connect
[14:20:55] Connection - {conn-10004} pool-connect
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 60.053604 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 60.053604 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 60.053604 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10004, pstmt-20007} Parameters : [1, 11]
[14:20:55] Statement - {conn-10004, pstmt-20007} Parameters : [1, 11]
[14:20:55] Statement - {conn-10004, pstmt-20007} Parameters : [1, 11]
[14:20:55] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 3.259253 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 3.259253 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 3.259253 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:55] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:55] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:55] Connection - {conn-10004} pool-recycle
[14:20:55] Connection - {conn-10004} pool-recycle
[14:20:55] Connection - {conn-10004} pool-recycle
[14:20:55] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:55] Connection - {conn-10004} pool-connect
[14:20:55] Connection - {conn-10004} pool-connect
[14:20:55] Connection - {conn-10004} pool-connect
[14:20:55] Statement - {conn-10004, pstmt-20007} Parameters : [1, 11]
[14:20:55] Statement - {conn-10004, pstmt-20007} Parameters : [1, 11]
[14:20:55] Statement - {conn-10004, pstmt-20007} Parameters : [1, 11]
[14:20:55] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 0.780628 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 0.780628 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10004, pstmt-20007} executed. 0.780628 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:55] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:55] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:55] Connection - {conn-10014} pool-recycle
[14:20:55] Connection - {conn-10014} pool-recycle
[14:20:55] Connection - {conn-10014} pool-recycle
[14:20:55] Connection - {conn-10014} pool-connect
[14:20:55] Connection - {conn-10014} pool-connect
[14:20:55] Connection - {conn-10014} pool-connect
[14:20:55] Connection - {conn-10017} pool-connect
[14:20:55] Connection - {conn-10017} pool-connect
[14:20:55] Connection - {conn-10017} pool-connect
[14:20:55] Statement - {conn-10017, pstmt-20023} Parameters : [1, 11]
[14:20:55] Statement - {conn-10017, pstmt-20023} Parameters : [1, 11]
[14:20:55] Statement - {conn-10017, pstmt-20023} Parameters : [1, 11]
[14:20:55] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:55] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:55] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:55] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:55.281]
[14:20:55] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:55.281]
[14:20:55] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:55.281]
[14:20:55] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:55] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:55] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:55] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:55] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:55] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:55] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:55] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:55.281')
[14:20:55] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:55.281')
[14:20:55] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:55.281')
[14:20:55] Connection - {conn-10004} pool-recycle
[14:20:55] Connection - {conn-10004} pool-recycle
[14:20:55] Connection - {conn-10004} pool-recycle
[14:20:55] Statement - {conn-10014, pstmt-20024} executed. 19.023489 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:55] Statement - {conn-10014, pstmt-20024} executed. 19.023489 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:55] Statement - {conn-10014, pstmt-20024} executed. 19.023489 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:55] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:55] ResultSet - {conn-10014, pstmt-20024, rs-50029} open
[14:20:55] ResultSet - {conn-10014, pstmt-20024, rs-50029} open
[14:20:55] ResultSet - {conn-10014, pstmt-20024, rs-50029} Header: [GENERATED_KEY]
[14:20:55] ResultSet - {conn-10014, pstmt-20024, rs-50029} Header: [GENERATED_KEY]
[14:20:55] ResultSet - {conn-10014, pstmt-20024, rs-50029} Result: [98]
[14:20:55] ResultSet - {conn-10014, pstmt-20024, rs-50029} Result: [98]
[14:20:55] ResultSet - {conn-10014, pstmt-20024, rs-50029} closed
[14:20:55] ResultSet - {conn-10014, pstmt-20024, rs-50029} closed
[14:20:55] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:55] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:55] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:55] Connection - {conn-10014} pool-recycle
[14:20:55] Connection - {conn-10014} pool-recycle
[14:20:55] Connection - {conn-10014} pool-recycle
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 11
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 53.750739 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 53.750739 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 53.750739 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:55] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:55] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:55] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:55] Connection - {conn-10017} pool-connect
[14:20:55] Connection - {conn-10017} pool-connect
[14:20:55] Connection - {conn-10017} pool-connect
[14:20:55] Statement - {conn-10017, pstmt-20023} Parameters : [1, 12]
[14:20:55] Statement - {conn-10017, pstmt-20023} Parameters : [1, 12]
[14:20:55] Statement - {conn-10017, pstmt-20023} Parameters : [1, 12]
[14:20:55] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:55] Connection - {conn-10014} pool-connect
[14:20:55] Connection - {conn-10014} pool-connect
[14:20:55] Connection - {conn-10014} pool-connect
[14:20:55] Statement - {conn-10014, pstmt-20019} Parameters : [1, 12]
[14:20:55] Statement - {conn-10014, pstmt-20019} Parameters : [1, 12]
[14:20:55] Statement - {conn-10014, pstmt-20019} Parameters : [1, 12]
[14:20:55] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 12
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 12
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 12
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 0.75375 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 0.75375 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 0.75375 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:55] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:55] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:55] Connection - {conn-10014} pool-recycle
[14:20:55] Connection - {conn-10014} pool-recycle
[14:20:55] Connection - {conn-10014} pool-recycle
[14:20:55] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 12
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 12
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 12
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 4.407199 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 4.407199 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 4.407199 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:55] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:55] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] Connection - {conn-10017} pool-connect
[14:20:55] Connection - {conn-10017} pool-connect
[14:20:55] Connection - {conn-10017} pool-connect
[14:20:55] Statement - {conn-10017, pstmt-20025} Parameters : [null, 1, 手机, 2018-06-22 14:20:55.363]
[14:20:55] Statement - {conn-10017, pstmt-20025} Parameters : [null, 1, 手机, 2018-06-22 14:20:55.363]
[14:20:55] Statement - {conn-10017, pstmt-20025} Parameters : [null, 1, 手机, 2018-06-22 14:20:55.363]
[14:20:55] Statement - {conn-10017, pstmt-20025} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:55] Statement - {conn-10017, pstmt-20025} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:55] Statement - {conn-10017, pstmt-20025} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:55] Statement - {conn-10017, pstmt-20025} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:55.363')
[14:20:55] Statement - {conn-10017, pstmt-20025} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:55.363')
[14:20:55] Statement - {conn-10017, pstmt-20025} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:55.363')
[14:20:55] Statement - {conn-10017, pstmt-20025} executed. 4.849945 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:55] Statement - {conn-10017, pstmt-20025} executed. 4.849945 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:55] Statement - {conn-10017, pstmt-20025} executed. 4.849945 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:55] ResultSet - {conn-10017, pstmt-20025, rs-50030} open
[14:20:55] ResultSet - {conn-10017, pstmt-20025, rs-50030} open
[14:20:55] ResultSet - {conn-10017, pstmt-20025, rs-50030} Header: [GENERATED_KEY]
[14:20:55] ResultSet - {conn-10017, pstmt-20025, rs-50030} Header: [GENERATED_KEY]
[14:20:55] ResultSet - {conn-10017, pstmt-20025, rs-50030} Result: [99]
[14:20:55] ResultSet - {conn-10017, pstmt-20025, rs-50030} Result: [99]
[14:20:55] ResultSet - {conn-10017, pstmt-20025, rs-50030} closed
[14:20:55] ResultSet - {conn-10017, pstmt-20025, rs-50030} closed
[14:20:55] Connection - {conn-10014} pool-connect
[14:20:55] Connection - {conn-10014} pool-connect
[14:20:55] Connection - {conn-10014} pool-connect
[14:20:55] Statement - {conn-10017, pstmt-20025} clearParameters. 
[14:20:55] Statement - {conn-10017, pstmt-20025} clearParameters. 
[14:20:55] Statement - {conn-10017, pstmt-20025} clearParameters. 
[14:20:55] Statement - {conn-10014, pstmt-20019} Parameters : [1, 13]
[14:20:55] Statement - {conn-10014, pstmt-20019} Parameters : [1, 13]
[14:20:55] Statement - {conn-10014, pstmt-20019} Parameters : [1, 13]
[14:20:55] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 13
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 13
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 13
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 1.597162 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 1.597162 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10014, pstmt-20019} executed. 1.597162 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:55] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:55] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:55] Connection - {conn-10014} pool-recycle
[14:20:55] Connection - {conn-10014} pool-recycle
[14:20:55] Connection - {conn-10014} pool-recycle
[14:20:55] Connection - {conn-10014} pool-connect
[14:20:55] Connection - {conn-10014} pool-connect
[14:20:55] Connection - {conn-10014} pool-connect
[14:20:55] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:55.378]
[14:20:55] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:55.378]
[14:20:55] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:55.378]
[14:20:55] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:55] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:55] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:55] Connection - {conn-10017} pool-connect
[14:20:55] Connection - {conn-10017} pool-connect
[14:20:55] Connection - {conn-10017} pool-connect
[14:20:55] Statement - {conn-10017, pstmt-20023} Parameters : [1, 13]
[14:20:55] Statement - {conn-10017, pstmt-20023} Parameters : [1, 13]
[14:20:55] Statement - {conn-10017, pstmt-20023} Parameters : [1, 13]
[14:20:55] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 13
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 13
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 13
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 13.500875 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 13.500875 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10017, pstmt-20023} executed. 13.500875 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:55] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:55] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:55] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] Connection - {conn-10017} pool-recycle
[14:20:55] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:55] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:55.378')
[14:20:55] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:55.378')
[14:20:55] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:55.378')
[14:20:55] Statement - {conn-10014, pstmt-20024} executed. 18.992485 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:55] Statement - {conn-10014, pstmt-20024} executed. 18.992485 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:55] Statement - {conn-10014, pstmt-20024} executed. 18.992485 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:55] ResultSet - {conn-10014, pstmt-20024, rs-50031} open
[14:20:55] ResultSet - {conn-10014, pstmt-20024, rs-50031} open
[14:20:55] ResultSet - {conn-10014, pstmt-20024, rs-50031} Header: [GENERATED_KEY]
[14:20:55] ResultSet - {conn-10014, pstmt-20024, rs-50031} Header: [GENERATED_KEY]
[14:20:55] ResultSet - {conn-10014, pstmt-20024, rs-50031} Result: [100]
[14:20:55] ResultSet - {conn-10014, pstmt-20024, rs-50031} Result: [100]
[14:20:55] ResultSet - {conn-10014, pstmt-20024, rs-50031} closed
[14:20:55] ResultSet - {conn-10014, pstmt-20024, rs-50031} closed
[14:20:55] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:55] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:55] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:55] Connection - {conn-10014} pool-recycle
[14:20:55] Connection - {conn-10014} pool-recycle
[14:20:55] Connection - {conn-10014} pool-recycle
[14:20:56] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:56] Connection - {conn-10014} pool-connect
[14:20:56] Connection - {conn-10014} pool-connect
[14:20:56] Connection - {conn-10014} pool-connect
[14:20:56] Statement - {conn-10014, pstmt-20019} Parameters : [1, 14]
[14:20:56] Statement - {conn-10014, pstmt-20019} Parameters : [1, 14]
[14:20:56] Statement - {conn-10014, pstmt-20019} Parameters : [1, 14]
[14:20:56] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:56] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:56] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:56] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 14
[14:20:56] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 14
[14:20:56] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 14
[14:20:56] Statement - {conn-10014, pstmt-20019} executed. 29.803566 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10014, pstmt-20019} executed. 29.803566 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10014, pstmt-20019} executed. 29.803566 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:56] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:56] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:56] Connection - {conn-10014} pool-recycle
[14:20:56] Connection - {conn-10014} pool-recycle
[14:20:56] Connection - {conn-10014} pool-recycle
[14:20:56] Connection - {conn-10014} pool-connect
[14:20:56] Connection - {conn-10014} pool-connect
[14:20:56] Connection - {conn-10014} pool-connect
[14:20:56] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:56.053]
[14:20:56] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:56.053]
[14:20:56] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:56.053]
[14:20:56] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:56] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:56] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:56] Connection - {conn-10017} pool-connect
[14:20:56] Connection - {conn-10017} pool-connect
[14:20:56] Connection - {conn-10017} pool-connect
[14:20:56] Statement - {conn-10017, pstmt-20023} Parameters : [1, 15]
[14:20:56] Statement - {conn-10017, pstmt-20023} Parameters : [1, 15]
[14:20:56] Statement - {conn-10017, pstmt-20023} Parameters : [1, 15]
[14:20:56] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:56] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:56] Connection - {conn-10004} pool-connect
[14:20:56] Connection - {conn-10004} pool-connect
[14:20:56] Connection - {conn-10004} pool-connect
[14:20:56] Statement - {conn-10004, pstmt-20007} Parameters : [1, 15]
[14:20:56] Statement - {conn-10004, pstmt-20007} Parameters : [1, 15]
[14:20:56] Statement - {conn-10004, pstmt-20007} Parameters : [1, 15]
[14:20:56] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 15
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 15
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 15
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 4.631074 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 4.631074 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 4.631074 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:56] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:56] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:56] Connection - {conn-10004} pool-recycle
[14:20:56] Connection - {conn-10004} pool-recycle
[14:20:56] Connection - {conn-10004} pool-recycle
[14:20:56] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:56] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 15
[14:20:56] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 15
[14:20:56] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 15
[14:20:56] Statement - {conn-10017, pstmt-20023} executed. 40.060204 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10017, pstmt-20023} executed. 40.060204 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10017, pstmt-20023} executed. 40.060204 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:56] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:56] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:56] Connection - {conn-10017} pool-recycle
[14:20:56] Connection - {conn-10017} pool-recycle
[14:20:56] Connection - {conn-10017} pool-recycle
[14:20:56] Connection - {conn-10017} pool-connect
[14:20:56] Connection - {conn-10017} pool-connect
[14:20:56] Connection - {conn-10017} pool-connect
[14:20:56] Statement - {conn-10017, pstmt-20023} Parameters : [1, 15]
[14:20:56] Statement - {conn-10017, pstmt-20023} Parameters : [1, 15]
[14:20:56] Statement - {conn-10017, pstmt-20023} Parameters : [1, 15]
[14:20:56] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:56] Connection - {conn-10004} pool-connect
[14:20:56] Connection - {conn-10004} pool-connect
[14:20:56] Connection - {conn-10004} pool-connect
[14:20:56] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 14:20:56.097]
[14:20:56] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 14:20:56.097]
[14:20:56] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 14:20:56.097]
[14:20:56] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:56] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:56] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:56] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 15
[14:20:56] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 15
[14:20:56] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 15
[14:20:56] Statement - {conn-10017, pstmt-20023} executed. 2.784082 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10017, pstmt-20023} executed. 2.784082 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10017, pstmt-20023} executed. 2.784082 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:56] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:56] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:56] Connection - {conn-10017} pool-recycle
[14:20:56] Connection - {conn-10017} pool-recycle
[14:20:56] Connection - {conn-10017} pool-recycle
[14:20:56] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:56] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:56.053')
[14:20:56] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:56.053')
[14:20:56] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:56.053')
[14:20:56] Statement - {conn-10014, pstmt-20024} executed. 54.825644 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:56] Statement - {conn-10014, pstmt-20024} executed. 54.825644 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:56] Statement - {conn-10014, pstmt-20024} executed. 54.825644 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50032} open
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50032} open
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50032} Header: [GENERATED_KEY]
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50032} Header: [GENERATED_KEY]
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50032} Result: [101]
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50032} Result: [101]
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50032} closed
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50032} closed
[14:20:56] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:56] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:56] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:56] Connection - {conn-10014} pool-recycle
[14:20:56] Connection - {conn-10014} pool-recycle
[14:20:56] Connection - {conn-10014} pool-recycle
[14:20:56] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:56.097')
[14:20:56] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:56.097')
[14:20:56] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:56.097')
[14:20:56] Statement - {conn-10004, pstmt-20011} executed. 27.508346 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:56] Statement - {conn-10004, pstmt-20011} executed. 27.508346 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:56] Statement - {conn-10004, pstmt-20011} executed. 27.508346 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:56] ResultSet - {conn-10004, pstmt-20011, rs-50033} open
[14:20:56] ResultSet - {conn-10004, pstmt-20011, rs-50033} open
[14:20:56] ResultSet - {conn-10004, pstmt-20011, rs-50033} Header: [GENERATED_KEY]
[14:20:56] ResultSet - {conn-10004, pstmt-20011, rs-50033} Header: [GENERATED_KEY]
[14:20:56] ResultSet - {conn-10004, pstmt-20011, rs-50033} Result: [102]
[14:20:56] ResultSet - {conn-10004, pstmt-20011, rs-50033} Result: [102]
[14:20:56] ResultSet - {conn-10004, pstmt-20011, rs-50033} closed
[14:20:56] ResultSet - {conn-10004, pstmt-20011, rs-50033} closed
[14:20:56] Statement - {conn-10004, pstmt-20011} clearParameters. 
[14:20:56] Statement - {conn-10004, pstmt-20011} clearParameters. 
[14:20:56] Statement - {conn-10004, pstmt-20011} clearParameters. 
[14:20:56] Connection - {conn-10004} pool-recycle
[14:20:56] Connection - {conn-10004} pool-recycle
[14:20:56] Connection - {conn-10004} pool-recycle
[14:20:56] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:56] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:56] Connection - {conn-10004} pool-connect
[14:20:56] Connection - {conn-10004} pool-connect
[14:20:56] Connection - {conn-10004} pool-connect
[14:20:56] Statement - {conn-10004, pstmt-20007} Parameters : [1, 16]
[14:20:56] Statement - {conn-10004, pstmt-20007} Parameters : [1, 16]
[14:20:56] Statement - {conn-10004, pstmt-20007} Parameters : [1, 16]
[14:20:56] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:56] Connection - {conn-10014} pool-connect
[14:20:56] Connection - {conn-10014} pool-connect
[14:20:56] Connection - {conn-10014} pool-connect
[14:20:56] Statement - {conn-10014, pstmt-20019} Parameters : [1, 16]
[14:20:56] Statement - {conn-10014, pstmt-20019} Parameters : [1, 16]
[14:20:56] Statement - {conn-10014, pstmt-20019} Parameters : [1, 16]
[14:20:56] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 16
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 16
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 16
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 16.148307 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 16.148307 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 16.148307 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:56] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:56] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:56] Connection - {conn-10004} pool-recycle
[14:20:56] Connection - {conn-10004} pool-recycle
[14:20:56] Connection - {conn-10004} pool-recycle
[14:20:56] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 16
[14:20:56] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 16
[14:20:56] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 16
[14:20:56] Statement - {conn-10014, pstmt-20019} executed. 2.647326 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10014, pstmt-20019} executed. 2.647326 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10014, pstmt-20019} executed. 2.647326 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:56] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:56] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:56] Connection - {conn-10014} pool-recycle
[14:20:56] Connection - {conn-10014} pool-recycle
[14:20:56] Connection - {conn-10014} pool-recycle
[14:20:56] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:56] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:56] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:56] Connection - {conn-10014} pool-connect
[14:20:56] Connection - {conn-10014} pool-connect
[14:20:56] Connection - {conn-10014} pool-connect
[14:20:56] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:56.272]
[14:20:56] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:56.272]
[14:20:56] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:56.272]
[14:20:56] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:56] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:56] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:56] Connection - {conn-10004} pool-connect
[14:20:56] Connection - {conn-10004} pool-connect
[14:20:56] Connection - {conn-10004} pool-connect
[14:20:56] Statement - {conn-10004, pstmt-20007} Parameters : [1, 17]
[14:20:56] Statement - {conn-10004, pstmt-20007} Parameters : [1, 17]
[14:20:56] Statement - {conn-10004, pstmt-20007} Parameters : [1, 17]
[14:20:56] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:56] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:56] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:56.272')
[14:20:56] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:56.272')
[14:20:56] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:56.272')
[14:20:56] Statement - {conn-10014, pstmt-20024} executed. 6.181797 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:56] Statement - {conn-10014, pstmt-20024} executed. 6.181797 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:56] Statement - {conn-10014, pstmt-20024} executed. 6.181797 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50034} open
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50034} open
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50034} Header: [GENERATED_KEY]
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50034} Header: [GENERATED_KEY]
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50034} Result: [103]
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50034} Result: [103]
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50034} closed
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50034} closed
[14:20:56] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:56] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:56] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:56] Connection - {conn-10014} pool-recycle
[14:20:56] Connection - {conn-10014} pool-recycle
[14:20:56] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 17
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 17
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 17
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 15.580694 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 15.580694 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 15.580694 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:56] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:56] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:56] Connection - {conn-10014} pool-recycle
[14:20:56] Connection - {conn-10004} pool-recycle
[14:20:56] Connection - {conn-10004} pool-recycle
[14:20:56] Connection - {conn-10004} pool-recycle
[14:20:56] Connection - {conn-10004} pool-connect
[14:20:56] Connection - {conn-10004} pool-connect
[14:20:56] Connection - {conn-10004} pool-connect
[14:20:56] Statement - {conn-10004, pstmt-20007} Parameters : [1, 17]
[14:20:56] Statement - {conn-10004, pstmt-20007} Parameters : [1, 17]
[14:20:56] Statement - {conn-10004, pstmt-20007} Parameters : [1, 17]
[14:20:56] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 17
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 17
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 17
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 1.867633 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 1.867633 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10004, pstmt-20007} executed. 1.867633 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:56] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:56] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:56] Connection - {conn-10004} pool-recycle
[14:20:56] Connection - {conn-10004} pool-recycle
[14:20:56] Connection - {conn-10004} pool-recycle
[14:20:56] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:56] Connection - {conn-10004} pool-connect
[14:20:56] Connection - {conn-10004} pool-connect
[14:20:56] Connection - {conn-10004} pool-connect
[14:20:56] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 14:20:56.3]
[14:20:56] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 14:20:56.3]
[14:20:56] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 14:20:56.3]
[14:20:56] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:56] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:56] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:56] Connection - {conn-10014} pool-connect
[14:20:56] Connection - {conn-10014} pool-connect
[14:20:56] Connection - {conn-10014} pool-connect
[14:20:56] Statement - {conn-10014, pstmt-20019} Parameters : [1, 18]
[14:20:56] Statement - {conn-10014, pstmt-20019} Parameters : [1, 18]
[14:20:56] Statement - {conn-10014, pstmt-20019} Parameters : [1, 18]
[14:20:56] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:56] Connection - {conn-10017} pool-connect
[14:20:56] Connection - {conn-10017} pool-connect
[14:20:56] Connection - {conn-10017} pool-connect
[14:20:56] Statement - {conn-10017, pstmt-20023} Parameters : [1, 17]
[14:20:56] Statement - {conn-10017, pstmt-20023} Parameters : [1, 17]
[14:20:56] Statement - {conn-10017, pstmt-20023} Parameters : [1, 17]
[14:20:56] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:56] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:56.300')
[14:20:56] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:56.300')
[14:20:56] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:56.300')
[14:20:56] Statement - {conn-10004, pstmt-20011} executed. 19.73447 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:56] Statement - {conn-10004, pstmt-20011} executed. 19.73447 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:56] Statement - {conn-10004, pstmt-20011} executed. 19.73447 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:56] ResultSet - {conn-10004, pstmt-20011, rs-50035} open
[14:20:56] ResultSet - {conn-10004, pstmt-20011, rs-50035} open
[14:20:56] ResultSet - {conn-10004, pstmt-20011, rs-50035} Header: [GENERATED_KEY]
[14:20:56] ResultSet - {conn-10004, pstmt-20011, rs-50035} Header: [GENERATED_KEY]
[14:20:56] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 17
[14:20:56] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 17
[14:20:56] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 17
[14:20:56] ResultSet - {conn-10004, pstmt-20011, rs-50035} Result: [104]
[14:20:56] ResultSet - {conn-10004, pstmt-20011, rs-50035} Result: [104]
[14:20:56] Statement - {conn-10017, pstmt-20023} executed. 5.278868 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10017, pstmt-20023} executed. 5.278868 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10017, pstmt-20023} executed. 5.278868 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] ResultSet - {conn-10004, pstmt-20011, rs-50035} closed
[14:20:56] ResultSet - {conn-10004, pstmt-20011, rs-50035} closed
[14:20:56] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:56] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:56] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:56] Connection - {conn-10017} pool-recycle
[14:20:56] Connection - {conn-10017} pool-recycle
[14:20:56] Connection - {conn-10017} pool-recycle
[14:20:56] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:56] Statement - {conn-10004, pstmt-20011} clearParameters. 
[14:20:56] Statement - {conn-10004, pstmt-20011} clearParameters. 
[14:20:56] Statement - {conn-10004, pstmt-20011} clearParameters. 
[14:20:56] Connection - {conn-10004} pool-recycle
[14:20:56] Connection - {conn-10004} pool-recycle
[14:20:56] Connection - {conn-10004} pool-recycle
[14:20:56] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 18
[14:20:56] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 18
[14:20:56] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 18
[14:20:56] Statement - {conn-10014, pstmt-20019} executed. 12.953951 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10014, pstmt-20019} executed. 12.953951 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10014, pstmt-20019} executed. 12.953951 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:56] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:56] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:56] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:56] Connection - {conn-10014} pool-recycle
[14:20:56] Connection - {conn-10014} pool-recycle
[14:20:56] Connection - {conn-10014} pool-recycle
[14:20:56] Connection - {conn-10014} pool-connect
[14:20:56] Connection - {conn-10014} pool-connect
[14:20:56] Connection - {conn-10014} pool-connect
[14:20:56] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:56.34]
[14:20:56] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:56.34]
[14:20:56] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:56.34]
[14:20:56] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:56] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:56] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:56] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:56.340')
[14:20:56] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:56.340')
[14:20:56] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:56.340')
[14:20:56] Statement - {conn-10014, pstmt-20024} executed. 18.970344 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:56] Statement - {conn-10014, pstmt-20024} executed. 18.970344 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:56] Statement - {conn-10014, pstmt-20024} executed. 18.970344 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50036} open
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50036} open
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50036} Header: [GENERATED_KEY]
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50036} Header: [GENERATED_KEY]
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50036} Result: [105]
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50036} Result: [105]
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50036} closed
[14:20:56] ResultSet - {conn-10014, pstmt-20024, rs-50036} closed
[14:20:56] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:56] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:56] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:56] Connection - {conn-10014} pool-recycle
[14:20:56] Connection - {conn-10014} pool-recycle
[14:20:56] Connection - {conn-10014} pool-recycle
[14:20:57] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Statement - {conn-10014, pstmt-20019} Parameters : [1, 19]
[14:20:57] Statement - {conn-10014, pstmt-20019} Parameters : [1, 19]
[14:20:57] Statement - {conn-10014, pstmt-20019} Parameters : [1, 19]
[14:20:57] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 19
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 19
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 19
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 2.368286 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 2.368286 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 2.368286 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:57] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:57] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:57.021]
[14:20:57] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:57.021]
[14:20:57] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:57.021]
[14:20:57] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:57] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:57] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:57] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:57.021')
[14:20:57] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:57.021')
[14:20:57] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:57.021')
[14:20:57] Statement - {conn-10014, pstmt-20024} executed. 1.938163 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:57] Statement - {conn-10014, pstmt-20024} executed. 1.938163 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:57] Statement - {conn-10014, pstmt-20024} executed. 1.938163 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50037} open
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50037} open
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50037} Header: [GENERATED_KEY]
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50037} Header: [GENERATED_KEY]
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50037} Result: [106]
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50037} Result: [106]
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50037} closed
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50037} closed
[14:20:57] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:57] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:57] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:57] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:57] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:57] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:57] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:57] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:57] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Statement - {conn-10014, pstmt-20019} Parameters : [1, 20]
[14:20:57] Statement - {conn-10014, pstmt-20019} Parameters : [1, 20]
[14:20:57] Statement - {conn-10014, pstmt-20019} Parameters : [1, 20]
[14:20:57] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:57] Connection - {conn-10004} pool-connect
[14:20:57] Connection - {conn-10004} pool-connect
[14:20:57] Connection - {conn-10004} pool-connect
[14:20:57] Statement - {conn-10004, pstmt-20007} Parameters : [1, 20]
[14:20:57] Statement - {conn-10004, pstmt-20007} Parameters : [1, 20]
[14:20:57] Statement - {conn-10004, pstmt-20007} Parameters : [1, 20]
[14:20:57] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:57] Connection - {conn-10017} pool-connect
[14:20:57] Connection - {conn-10017} pool-connect
[14:20:57] Connection - {conn-10017} pool-connect
[14:20:57] Statement - {conn-10017, pstmt-20023} Parameters : [1, 20]
[14:20:57] Statement - {conn-10017, pstmt-20023} Parameters : [1, 20]
[14:20:57] Statement - {conn-10017, pstmt-20023} Parameters : [1, 20]
[14:20:57] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10017, pstmt-20023} Types : [INTEGER, INTEGER]
[14:20:57] Connection - {conn-10012} pool-connect
[14:20:57] Connection - {conn-10012} pool-connect
[14:20:57] Connection - {conn-10012} pool-connect
[14:20:57] Statement - {conn-10012, pstmt-20016} Parameters : [1, 20]
[14:20:57] Statement - {conn-10012, pstmt-20016} Parameters : [1, 20]
[14:20:57] Statement - {conn-10012, pstmt-20016} Parameters : [1, 20]
[14:20:57] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:57] Connection - {conn-10011} pool-connect
[14:20:57] Connection - {conn-10011} pool-connect
[14:20:57] Connection - {conn-10011} pool-connect
[14:20:57] Statement - {conn-10011, pstmt-20014} Parameters : [1, 20]
[14:20:57] Statement - {conn-10011, pstmt-20014} Parameters : [1, 20]
[14:20:57] Statement - {conn-10011, pstmt-20014} Parameters : [1, 20]
[14:20:57] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10011, pstmt-20014} Types : [INTEGER, INTEGER]
[14:20:57] Connection - {conn-10015} pool-connect
[14:20:57] Connection - {conn-10015} pool-connect
[14:20:57] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Connection - {conn-10015} pool-connect
[14:20:57] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10011, pstmt-20014} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10011, pstmt-20014} executed. 1.917883 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10011, pstmt-20014} executed. 1.917883 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10015, pstmt-20020} Parameters : [1, 20]
[14:20:57] Statement - {conn-10015, pstmt-20020} Parameters : [1, 20]
[14:20:57] Statement - {conn-10015, pstmt-20020} Parameters : [1, 20]
[14:20:57] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10011, pstmt-20014} executed. 1.917883 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:57] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10017, pstmt-20023} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10017, pstmt-20023} executed. 14.562834 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10017, pstmt-20023} executed. 14.562834 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10017, pstmt-20023} executed. 14.562834 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:57] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:57] Statement - {conn-10017, pstmt-20023} clearParameters. 
[14:20:57] Connection - {conn-10017} pool-recycle
[14:20:57] Connection - {conn-10017} pool-recycle
[14:20:57] Connection - {conn-10017} pool-recycle
[14:20:57] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:57] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:57] Statement - {conn-10011, pstmt-20014} clearParameters. 
[14:20:57] Connection - {conn-10011} pool-recycle
[14:20:57] Connection - {conn-10011} pool-recycle
[14:20:57] Connection - {conn-10011} pool-recycle
[14:20:57] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:57] Statement - {conn-10004, pstmt-20007} executed. 20.51508 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10004, pstmt-20007} executed. 20.51508 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10004, pstmt-20007} executed. 20.51508 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:57] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:57] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:57] Connection - {conn-10004} pool-recycle
[14:20:57] Connection - {conn-10004} pool-recycle
[14:20:57] Connection - {conn-10004} pool-recycle
[14:20:57] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:57] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:20:57] Connection - {conn-10004} pool-connect
[14:20:57] Connection - {conn-10004} pool-connect
[14:20:57] Connection - {conn-10004} pool-connect
[14:20:57] Statement - {conn-10004, pstmt-20007} Parameters : [1, 20]
[14:20:57] Statement - {conn-10004, pstmt-20007} Parameters : [1, 20]
[14:20:57] Statement - {conn-10004, pstmt-20007} Parameters : [1, 20]
[14:20:57] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10015, pstmt-20020} executed. 5.746851 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10015, pstmt-20020} executed. 5.746851 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10015, pstmt-20020} executed. 5.746851 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:57] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:57] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:20:57] Connection - {conn-10015} pool-recycle
[14:20:57] Connection - {conn-10015} pool-recycle
[14:20:57] Connection - {conn-10015} pool-recycle
[14:20:57] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:57] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10004, pstmt-20007} executed. 1.46531 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10004, pstmt-20007} executed. 1.46531 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10004, pstmt-20007} executed. 1.46531 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:57] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:57] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:57] Connection - {conn-10004} pool-recycle
[14:20:57] Connection - {conn-10004} pool-recycle
[14:20:57] Connection - {conn-10004} pool-recycle
[14:20:57] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:57] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10012, pstmt-20016} executed. 22.626489 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10012, pstmt-20016} executed. 22.626489 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10012, pstmt-20016} executed. 22.626489 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:57] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:57] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:57] Connection - {conn-10012} pool-recycle
[14:20:57] Connection - {conn-10012} pool-recycle
[14:20:57] Connection - {conn-10012} pool-recycle
[14:20:57] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 20
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 106.687055 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 106.687055 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 106.687055 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:57] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:57] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:57.417]
[14:20:57] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:57.417]
[14:20:57] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:57.417]
[14:20:57] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:57] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:57] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:57] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:57.417')
[14:20:57] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:57.417')
[14:20:57] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:57.417')
[14:20:57] Statement - {conn-10014, pstmt-20024} executed. 28.324037 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:57] Statement - {conn-10014, pstmt-20024} executed. 28.324037 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:57] Statement - {conn-10014, pstmt-20024} executed. 28.324037 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50038} open
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50038} open
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50038} Header: [GENERATED_KEY]
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50038} Header: [GENERATED_KEY]
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50038} Result: [107]
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50038} Result: [107]
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50038} closed
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50038} closed
[14:20:57] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:57] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:57] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:57] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Statement - {conn-10014, pstmt-20019} Parameters : [1, 21]
[14:20:57] Statement - {conn-10014, pstmt-20019} Parameters : [1, 21]
[14:20:57] Statement - {conn-10014, pstmt-20019} Parameters : [1, 21]
[14:20:57] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 21
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 21
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 21
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 54.199643 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 54.199643 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 54.199643 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:57] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:57] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Statement - {conn-10014, pstmt-20019} Parameters : [1, 21]
[14:20:57] Statement - {conn-10014, pstmt-20019} Parameters : [1, 21]
[14:20:57] Statement - {conn-10014, pstmt-20019} Parameters : [1, 21]
[14:20:57] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 21
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 21
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 21
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 8.281515 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 8.281515 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10014, pstmt-20019} executed. 8.281515 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:57] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:57] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:57] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Connection - {conn-10014} pool-connect
[14:20:57] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:57.815]
[14:20:57] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:57.815]
[14:20:57] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:57.815]
[14:20:57] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:57] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:57] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:57] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:57.815')
[14:20:57] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:57.815')
[14:20:57] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:57.815')
[14:20:57] Statement - {conn-10014, pstmt-20024} executed. 1.677007 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:57] Statement - {conn-10014, pstmt-20024} executed. 1.677007 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:57] Statement - {conn-10014, pstmt-20024} executed. 1.677007 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50039} open
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50039} open
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50039} Header: [GENERATED_KEY]
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50039} Header: [GENERATED_KEY]
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50039} Result: [108]
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50039} Result: [108]
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50039} closed
[14:20:57] ResultSet - {conn-10014, pstmt-20024, rs-50039} closed
[14:20:57] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:57] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:57] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:57] Connection - {conn-10014} pool-recycle
[14:20:58] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:58] Connection - {conn-10014} pool-connect
[14:20:58] Connection - {conn-10014} pool-connect
[14:20:58] Connection - {conn-10014} pool-connect
[14:20:58] Statement - {conn-10014, pstmt-20019} Parameters : [1, 22]
[14:20:58] Statement - {conn-10014, pstmt-20019} Parameters : [1, 22]
[14:20:58] Statement - {conn-10014, pstmt-20019} Parameters : [1, 22]
[14:20:58] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 22
[14:20:58] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 22
[14:20:58] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 22
[14:20:58] Statement - {conn-10014, pstmt-20019} executed. 5.915321 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10014, pstmt-20019} executed. 5.915321 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10014, pstmt-20019} executed. 5.915321 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:58] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:58] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:58] Connection - {conn-10014} pool-recycle
[14:20:58] Connection - {conn-10014} pool-recycle
[14:20:58] Connection - {conn-10014} pool-recycle
[14:20:58] Connection - {conn-10014} pool-connect
[14:20:58] Connection - {conn-10014} pool-connect
[14:20:58] Connection - {conn-10014} pool-connect
[14:20:58] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:58.528]
[14:20:58] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:58.528]
[14:20:58] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:58.528]
[14:20:58] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:58] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:58] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:58] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:58.528')
[14:20:58] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:58.528')
[14:20:58] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:58.528')
[14:20:58] Statement - {conn-10014, pstmt-20024} executed. 9.924433 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:58] Statement - {conn-10014, pstmt-20024} executed. 9.924433 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:58] Statement - {conn-10014, pstmt-20024} executed. 9.924433 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:58] ResultSet - {conn-10014, pstmt-20024, rs-50040} open
[14:20:58] ResultSet - {conn-10014, pstmt-20024, rs-50040} open
[14:20:58] ResultSet - {conn-10014, pstmt-20024, rs-50040} Header: [GENERATED_KEY]
[14:20:58] ResultSet - {conn-10014, pstmt-20024, rs-50040} Header: [GENERATED_KEY]
[14:20:58] ResultSet - {conn-10014, pstmt-20024, rs-50040} Result: [109]
[14:20:58] ResultSet - {conn-10014, pstmt-20024, rs-50040} Result: [109]
[14:20:58] ResultSet - {conn-10014, pstmt-20024, rs-50040} closed
[14:20:58] ResultSet - {conn-10014, pstmt-20024, rs-50040} closed
[14:20:58] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:58] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:58] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:58] Connection - {conn-10014} pool-recycle
[14:20:58] Connection - {conn-10014} pool-recycle
[14:20:58] Connection - {conn-10014} pool-recycle
[14:20:58] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:58] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:58] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:58] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:58] Connection - {conn-10014} pool-connect
[14:20:58] Connection - {conn-10014} pool-connect
[14:20:58] Connection - {conn-10014} pool-connect
[14:20:58] Statement - {conn-10014, pstmt-20019} Parameters : [1, 23]
[14:20:58] Statement - {conn-10014, pstmt-20019} Parameters : [1, 23]
[14:20:58] Statement - {conn-10014, pstmt-20019} Parameters : [1, 23]
[14:20:58] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Statement - {conn-10012, pstmt-20016} Parameters : [1, 23]
[14:20:58] Statement - {conn-10012, pstmt-20016} Parameters : [1, 23]
[14:20:58] Statement - {conn-10012, pstmt-20016} Parameters : [1, 23]
[14:20:58] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 23
[14:20:58] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 23
[14:20:58] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 23
[14:20:58] Statement - {conn-10014, pstmt-20019} executed. 1.280887 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10014, pstmt-20019} executed. 1.280887 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10014, pstmt-20019} executed. 1.280887 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:58] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:58] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:58] Connection - {conn-10004} pool-connect
[14:20:58] Connection - {conn-10004} pool-connect
[14:20:58] Connection - {conn-10004} pool-connect
[14:20:58] Connection - {conn-10014} pool-recycle
[14:20:58] Connection - {conn-10014} pool-recycle
[14:20:58] Connection - {conn-10014} pool-recycle
[14:20:58] Statement - {conn-10004, pstmt-20007} Parameters : [1, 23]
[14:20:58] Statement - {conn-10004, pstmt-20007} Parameters : [1, 23]
[14:20:58] Statement - {conn-10004, pstmt-20007} Parameters : [1, 23]
[14:20:58] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 23
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 23
[14:20:58] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 23
[14:20:58] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 23
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 23
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 1.159562 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 1.159562 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 23
[14:20:58] Statement - {conn-10004, pstmt-20007} executed. 0.690037 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10004, pstmt-20007} executed. 0.690037 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10004, pstmt-20007} executed. 0.690037 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 1.159562 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:58] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:58] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:58] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:58] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:58] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:58] Connection - {conn-10004} pool-recycle
[14:20:58] Connection - {conn-10004} pool-recycle
[14:20:58] Connection - {conn-10004} pool-recycle
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:58] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Statement - {conn-10012, pstmt-20016} Parameters : [1, 23]
[14:20:58] Statement - {conn-10012, pstmt-20016} Parameters : [1, 23]
[14:20:58] Statement - {conn-10012, pstmt-20016} Parameters : [1, 23]
[14:20:58] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:58] Connection - {conn-10004} pool-connect
[14:20:58] Connection - {conn-10004} pool-connect
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 23
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 23
[14:20:58] Connection - {conn-10004} pool-connect
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 23
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 1.370052 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 1.370052 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 1.370052 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:58] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:58] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 14:20:58.641]
[14:20:58] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 14:20:58.641]
[14:20:58] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 14:20:58.641]
[14:20:58] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:58] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:58] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:58] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:58] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:58.641')
[14:20:58] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:58.641')
[14:20:58] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:58.641')
[14:20:58] Statement - {conn-10004, pstmt-20011} executed. 3.084694 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:58] Statement - {conn-10004, pstmt-20011} executed. 3.084694 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:58] Statement - {conn-10004, pstmt-20011} executed. 3.084694 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:58] ResultSet - {conn-10004, pstmt-20011, rs-50041} open
[14:20:58] ResultSet - {conn-10004, pstmt-20011, rs-50041} open
[14:20:58] ResultSet - {conn-10004, pstmt-20011, rs-50041} Header: [GENERATED_KEY]
[14:20:58] ResultSet - {conn-10004, pstmt-20011, rs-50041} Header: [GENERATED_KEY]
[14:20:58] ResultSet - {conn-10004, pstmt-20011, rs-50041} Result: [110]
[14:20:58] ResultSet - {conn-10004, pstmt-20011, rs-50041} Result: [110]
[14:20:58] ResultSet - {conn-10004, pstmt-20011, rs-50041} closed
[14:20:58] ResultSet - {conn-10004, pstmt-20011, rs-50041} closed
[14:20:58] Statement - {conn-10004, pstmt-20011} clearParameters. 
[14:20:58] Statement - {conn-10004, pstmt-20011} clearParameters. 
[14:20:58] Statement - {conn-10004, pstmt-20011} clearParameters. 
[14:20:58] Connection - {conn-10004} pool-recycle
[14:20:58] Connection - {conn-10004} pool-recycle
[14:20:58] Connection - {conn-10004} pool-recycle
[14:20:58] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:58] Connection - {conn-10004} pool-connect
[14:20:58] Connection - {conn-10004} pool-connect
[14:20:58] Connection - {conn-10004} pool-connect
[14:20:58] Statement - {conn-10004, pstmt-20007} Parameters : [1, 24]
[14:20:58] Statement - {conn-10004, pstmt-20007} Parameters : [1, 24]
[14:20:58] Statement - {conn-10004, pstmt-20007} Parameters : [1, 24]
[14:20:58] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:58] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Statement - {conn-10012, pstmt-20016} Parameters : [1, 24]
[14:20:58] Statement - {conn-10012, pstmt-20016} Parameters : [1, 24]
[14:20:58] Statement - {conn-10012, pstmt-20016} Parameters : [1, 24]
[14:20:58] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 24
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 24
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 24
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 0.810761 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 0.810761 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 0.810761 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:58] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:58] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:58] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 24
[14:20:58] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 24
[14:20:58] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 24
[14:20:58] Statement - {conn-10004, pstmt-20007} executed. 10.652961 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10004, pstmt-20007} executed. 10.652961 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10004, pstmt-20007} executed. 10.652961 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:58] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:58] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:58] Connection - {conn-10004} pool-recycle
[14:20:58] Connection - {conn-10004} pool-recycle
[14:20:58] Connection - {conn-10004} pool-recycle
[14:20:58] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:58] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:58] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:58] Connection - {conn-10004} pool-connect
[14:20:58] Connection - {conn-10004} pool-connect
[14:20:58] Connection - {conn-10004} pool-connect
[14:20:58] Statement - {conn-10004, pstmt-20007} Parameters : [1, 24]
[14:20:58] Statement - {conn-10004, pstmt-20007} Parameters : [1, 24]
[14:20:58] Statement - {conn-10004, pstmt-20007} Parameters : [1, 24]
[14:20:58] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Statement - {conn-10012, pstmt-20016} Parameters : [1, 24]
[14:20:58] Statement - {conn-10012, pstmt-20016} Parameters : [1, 24]
[14:20:58] Statement - {conn-10012, pstmt-20016} Parameters : [1, 24]
[14:20:58] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 24
[14:20:58] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 24
[14:20:58] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 24
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 24
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 24
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 24
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 0.81135 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 0.81135 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 0.81135 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:58] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:58] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:58] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:20:58.677]
[14:20:58] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:20:58.677]
[14:20:58] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:20:58.677]
[14:20:58] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:58] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:58] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:58] Statement - {conn-10004, pstmt-20007} executed. 2.460069 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10004, pstmt-20007} executed. 2.460069 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10004, pstmt-20007} executed. 2.460069 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:58] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:58] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:58] Connection - {conn-10004} pool-recycle
[14:20:58] Connection - {conn-10004} pool-recycle
[14:20:58] Connection - {conn-10004} pool-recycle
[14:20:58] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:58] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:58.677')
[14:20:58] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:58.677')
[14:20:58] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:58.677')
[14:20:58] Statement - {conn-10012, pstmt-20017} executed. 4.006379 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:58] Statement - {conn-10012, pstmt-20017} executed. 4.006379 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:58] Statement - {conn-10012, pstmt-20017} executed. 4.006379 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:58] ResultSet - {conn-10012, pstmt-20017, rs-50042} open
[14:20:58] ResultSet - {conn-10012, pstmt-20017, rs-50042} open
[14:20:58] ResultSet - {conn-10012, pstmt-20017, rs-50042} Header: [GENERATED_KEY]
[14:20:58] ResultSet - {conn-10012, pstmt-20017, rs-50042} Header: [GENERATED_KEY]
[14:20:58] ResultSet - {conn-10012, pstmt-20017, rs-50042} Result: [111]
[14:20:58] ResultSet - {conn-10012, pstmt-20017, rs-50042} Result: [111]
[14:20:58] ResultSet - {conn-10012, pstmt-20017, rs-50042} closed
[14:20:58] ResultSet - {conn-10012, pstmt-20017, rs-50042} closed
[14:20:58] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:20:58] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:20:58] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Statement - {conn-10012, pstmt-20016} Parameters : [1, 25]
[14:20:58] Statement - {conn-10012, pstmt-20016} Parameters : [1, 25]
[14:20:58] Statement - {conn-10012, pstmt-20016} Parameters : [1, 25]
[14:20:58] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 25
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 25
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 25
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 2.128712 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 2.128712 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10012, pstmt-20016} executed. 2.128712 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:58] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:58] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:58] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Connection - {conn-10012} pool-connect
[14:20:58] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:20:58.691]
[14:20:58] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:20:58.691]
[14:20:58] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:20:58.691]
[14:20:58] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:58] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:58] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:58] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:58.691')
[14:20:58] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:58.691')
[14:20:58] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:58.691')
[14:20:58] Statement - {conn-10012, pstmt-20017} executed. 2.087687 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:58] Statement - {conn-10012, pstmt-20017} executed. 2.087687 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:58] Statement - {conn-10012, pstmt-20017} executed. 2.087687 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:58] ResultSet - {conn-10012, pstmt-20017, rs-50043} open
[14:20:58] ResultSet - {conn-10012, pstmt-20017, rs-50043} open
[14:20:58] ResultSet - {conn-10012, pstmt-20017, rs-50043} Header: [GENERATED_KEY]
[14:20:58] ResultSet - {conn-10012, pstmt-20017, rs-50043} Header: [GENERATED_KEY]
[14:20:58] ResultSet - {conn-10012, pstmt-20017, rs-50043} Result: [112]
[14:20:58] ResultSet - {conn-10012, pstmt-20017, rs-50043} Result: [112]
[14:20:58] ResultSet - {conn-10012, pstmt-20017, rs-50043} closed
[14:20:58] ResultSet - {conn-10012, pstmt-20017, rs-50043} closed
[14:20:58] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:20:58] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:20:58] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:58] Connection - {conn-10012} pool-recycle
[14:20:59] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:59] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:59] Connection - {conn-10012} pool-connect
[14:20:59] Connection - {conn-10012} pool-connect
[14:20:59] Connection - {conn-10012} pool-connect
[14:20:59] Statement - {conn-10012, pstmt-20016} Parameters : [1, 26]
[14:20:59] Statement - {conn-10012, pstmt-20016} Parameters : [1, 26]
[14:20:59] Statement - {conn-10012, pstmt-20016} Parameters : [1, 26]
[14:20:59] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:59] Connection - {conn-10004} pool-connect
[14:20:59] Connection - {conn-10004} pool-connect
[14:20:59] Connection - {conn-10004} pool-connect
[14:20:59] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 26
[14:20:59] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 26
[14:20:59] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 26
[14:20:59] Statement - {conn-10012, pstmt-20016} executed. 2.768994 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10012, pstmt-20016} executed. 2.768994 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10012, pstmt-20016} executed. 2.768994 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10004, pstmt-20007} Parameters : [1, 26]
[14:20:59] Statement - {conn-10004, pstmt-20007} Parameters : [1, 26]
[14:20:59] Statement - {conn-10004, pstmt-20007} Parameters : [1, 26]
[14:20:59] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:59] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:59] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:59] Connection - {conn-10012} pool-recycle
[14:20:59] Connection - {conn-10012} pool-recycle
[14:20:59] Connection - {conn-10012} pool-recycle
[14:20:59] Connection - {conn-10012} pool-connect
[14:20:59] Connection - {conn-10012} pool-connect
[14:20:59] Connection - {conn-10012} pool-connect
[14:20:59] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:20:59.039]
[14:20:59] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:20:59.039]
[14:20:59] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:20:59.039]
[14:20:59] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:59] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:59] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 26
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 26
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 26
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 14.510023 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 14.510023 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 14.510023 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:59] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:59] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:59] Connection - {conn-10004} pool-recycle
[14:20:59] Connection - {conn-10004} pool-recycle
[14:20:59] Connection - {conn-10004} pool-recycle
[14:20:59] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:59] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:59.039')
[14:20:59] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:59.039')
[14:20:59] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:59.039')
[14:20:59] Statement - {conn-10012, pstmt-20017} executed. 19.961553 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:59] Statement - {conn-10012, pstmt-20017} executed. 19.961553 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:59] Statement - {conn-10012, pstmt-20017} executed. 19.961553 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:59] ResultSet - {conn-10012, pstmt-20017, rs-50044} open
[14:20:59] ResultSet - {conn-10012, pstmt-20017, rs-50044} open
[14:20:59] ResultSet - {conn-10012, pstmt-20017, rs-50044} Header: [GENERATED_KEY]
[14:20:59] ResultSet - {conn-10012, pstmt-20017, rs-50044} Header: [GENERATED_KEY]
[14:20:59] ResultSet - {conn-10012, pstmt-20017, rs-50044} Result: [113]
[14:20:59] ResultSet - {conn-10012, pstmt-20017, rs-50044} Result: [113]
[14:20:59] ResultSet - {conn-10012, pstmt-20017, rs-50044} closed
[14:20:59] ResultSet - {conn-10012, pstmt-20017, rs-50044} closed
[14:20:59] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:20:59] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:20:59] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:20:59] Connection - {conn-10012} pool-recycle
[14:20:59] Connection - {conn-10012} pool-recycle
[14:20:59] Connection - {conn-10012} pool-recycle
[14:20:59] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:59] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:59] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:59] Connection - {conn-10012} pool-connect
[14:20:59] Connection - {conn-10012} pool-connect
[14:20:59] Connection - {conn-10012} pool-connect
[14:20:59] Statement - {conn-10012, pstmt-20016} Parameters : [1, 27]
[14:20:59] Statement - {conn-10012, pstmt-20016} Parameters : [1, 27]
[14:20:59] Statement - {conn-10012, pstmt-20016} Parameters : [1, 27]
[14:20:59] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:59] Connection - {conn-10004} pool-connect
[14:20:59] Connection - {conn-10004} pool-connect
[14:20:59] Connection - {conn-10004} pool-connect
[14:20:59] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:59] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:59] Statement - {conn-10004, pstmt-20007} Parameters : [1, 27]
[14:20:59] Statement - {conn-10004, pstmt-20007} Parameters : [1, 27]
[14:20:59] Statement - {conn-10004, pstmt-20007} Parameters : [1, 27]
[14:20:59] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 27
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 27
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 27
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 0.965339 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 0.965339 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 0.965339 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:59] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:59] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:59] Connection - {conn-10014} pool-connect
[14:20:59] Connection - {conn-10014} pool-connect
[14:20:59] Connection - {conn-10004} pool-recycle
[14:20:59] Connection - {conn-10004} pool-recycle
[14:20:59] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 27
[14:20:59] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 27
[14:20:59] Connection - {conn-10004} pool-connect
[14:20:59] Connection - {conn-10004} pool-connect
[14:20:59] Connection - {conn-10014} pool-connect
[14:20:59] Connection - {conn-10004} pool-connect
[14:20:59] Statement - {conn-10014, pstmt-20019} Parameters : [1, 27]
[14:20:59] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 27
[14:20:59] Statement - {conn-10014, pstmt-20019} Parameters : [1, 27]
[14:20:59] Statement - {conn-10012, pstmt-20016} executed. 4.380543 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10012, pstmt-20016} executed. 4.380543 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10004, pstmt-20007} Parameters : [1, 27]
[14:20:59] Statement - {conn-10004, pstmt-20007} Parameters : [1, 27]
[14:20:59] Statement - {conn-10014, pstmt-20019} Parameters : [1, 27]
[14:20:59] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:59] Connection - {conn-10004} pool-recycle
[14:20:59] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:59] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 27
[14:20:59] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 27
[14:20:59] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 27
[14:20:59] Statement - {conn-10014, pstmt-20019} executed. 1.079016 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10014, pstmt-20019} executed. 1.079016 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10014, pstmt-20019} executed. 1.079016 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10004, pstmt-20007} Parameters : [1, 27]
[14:20:59] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:59] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:59] Statement - {conn-10012, pstmt-20016} executed. 4.380543 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:59] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:59] Connection - {conn-10014} pool-recycle
[14:20:59] Connection - {conn-10014} pool-recycle
[14:20:59] Connection - {conn-10014} pool-recycle
[14:20:59] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:59] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:59] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:59] Connection - {conn-10012} pool-recycle
[14:20:59] Connection - {conn-10012} pool-recycle
[14:20:59] Connection - {conn-10012} pool-recycle
[14:20:59] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 27
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 27
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 27
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 2.31623 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 2.31623 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 2.31623 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:59] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:59] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:59] Connection - {conn-10004} pool-recycle
[14:20:59] Connection - {conn-10004} pool-recycle
[14:20:59] Connection - {conn-10004} pool-recycle
[14:20:59] Connection - {conn-10004} pool-connect
[14:20:59] Connection - {conn-10004} pool-connect
[14:20:59] Connection - {conn-10004} pool-connect
[14:20:59] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:59] Statement - {conn-10004, pstmt-20007} Parameters : [1, 27]
[14:20:59] Statement - {conn-10004, pstmt-20007} Parameters : [1, 27]
[14:20:59] Statement - {conn-10004, pstmt-20007} Parameters : [1, 27]
[14:20:59] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 27
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 27
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 27
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 1.617141 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 1.617141 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 1.617141 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:59] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:59] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:59] Connection - {conn-10004} pool-recycle
[14:20:59] Connection - {conn-10004} pool-recycle
[14:20:59] Connection - {conn-10004} pool-recycle
[14:20:59] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:59] Connection - {conn-10004} pool-connect
[14:20:59] Connection - {conn-10004} pool-connect
[14:20:59] Connection - {conn-10004} pool-connect
[14:20:59] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 14:20:59.078]
[14:20:59] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 14:20:59.078]
[14:20:59] Statement - {conn-10004, pstmt-20011} Parameters : [null, 1, 手机, 2018-06-22 14:20:59.078]
[14:20:59] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:59] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:59] Statement - {conn-10004, pstmt-20011} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:59] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:59] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:59.078')
[14:20:59] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:59.078')
[14:20:59] Statement - {conn-10004, pstmt-20011} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:59.078')
[14:20:59] Statement - {conn-10004, pstmt-20011} executed. 18.142057 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:59] Statement - {conn-10004, pstmt-20011} executed. 18.142057 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:59] Statement - {conn-10004, pstmt-20011} executed. 18.142057 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:59] ResultSet - {conn-10004, pstmt-20011, rs-50045} open
[14:20:59] ResultSet - {conn-10004, pstmt-20011, rs-50045} open
[14:20:59] ResultSet - {conn-10004, pstmt-20011, rs-50045} Header: [GENERATED_KEY]
[14:20:59] ResultSet - {conn-10004, pstmt-20011, rs-50045} Header: [GENERATED_KEY]
[14:20:59] ResultSet - {conn-10004, pstmt-20011, rs-50045} Result: [114]
[14:20:59] ResultSet - {conn-10004, pstmt-20011, rs-50045} Result: [114]
[14:20:59] ResultSet - {conn-10004, pstmt-20011, rs-50045} closed
[14:20:59] ResultSet - {conn-10004, pstmt-20011, rs-50045} closed
[14:20:59] Statement - {conn-10004, pstmt-20011} clearParameters. 
[14:20:59] Statement - {conn-10004, pstmt-20011} clearParameters. 
[14:20:59] Statement - {conn-10004, pstmt-20011} clearParameters. 
[14:20:59] Connection - {conn-10004} pool-recycle
[14:20:59] Connection - {conn-10004} pool-recycle
[14:20:59] Connection - {conn-10004} pool-recycle
[14:20:59] Connection - {conn-10004} pool-connect
[14:20:59] Connection - {conn-10004} pool-connect
[14:20:59] Connection - {conn-10004} pool-connect
[14:20:59] Statement - {conn-10004, pstmt-20007} Parameters : [1, 28]
[14:20:59] Statement - {conn-10004, pstmt-20007} Parameters : [1, 28]
[14:20:59] Statement - {conn-10004, pstmt-20007} Parameters : [1, 28]
[14:20:59] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:20:59] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:59] Connection - {conn-10012} pool-connect
[14:20:59] Connection - {conn-10012} pool-connect
[14:20:59] Connection - {conn-10012} pool-connect
[14:20:59] Statement - {conn-10012, pstmt-20016} Parameters : [1, 28]
[14:20:59] Statement - {conn-10012, pstmt-20016} Parameters : [1, 28]
[14:20:59] Statement - {conn-10012, pstmt-20016} Parameters : [1, 28]
[14:20:59] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 28
[14:20:59] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 28
[14:20:59] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 28
[14:20:59] Statement - {conn-10012, pstmt-20016} executed. 0.7383 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10012, pstmt-20016} executed. 0.7383 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10012, pstmt-20016} executed. 0.7383 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:20:59] Connection - {conn-10014} pool-connect
[14:20:59] Connection - {conn-10014} pool-connect
[14:20:59] Connection - {conn-10014} pool-connect
[14:20:59] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:59] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:59] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 28
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 28
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 28
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 15.389624 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 15.389624 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10004, pstmt-20007} executed. 15.389624 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10014, pstmt-20019} Parameters : [1, 28]
[14:20:59] Statement - {conn-10014, pstmt-20019} Parameters : [1, 28]
[14:20:59] Statement - {conn-10014, pstmt-20019} Parameters : [1, 28]
[14:20:59] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:59] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:59] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:20:59] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:59] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:20:59] Connection - {conn-10012} pool-recycle
[14:20:59] Connection - {conn-10012} pool-recycle
[14:20:59] Connection - {conn-10012} pool-recycle
[14:20:59] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:59] Connection - {conn-10004} pool-recycle
[14:20:59] Connection - {conn-10004} pool-recycle
[14:20:59] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 28
[14:20:59] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 28
[14:20:59] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 28
[14:20:59] Statement - {conn-10014, pstmt-20019} executed. 11.881779 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10014, pstmt-20019} executed. 11.881779 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10014, pstmt-20019} executed. 11.881779 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:20:59] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:59] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:59] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:20:59] Connection - {conn-10014} pool-recycle
[14:20:59] Connection - {conn-10014} pool-recycle
[14:20:59] Connection - {conn-10014} pool-recycle
[14:20:59] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:20:59] Connection - {conn-10004} pool-recycle
[14:20:59] Connection - {conn-10014} pool-connect
[14:20:59] Connection - {conn-10014} pool-connect
[14:20:59] Connection - {conn-10014} pool-connect
[14:20:59] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:59.13]
[14:20:59] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:59.13]
[14:20:59] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:20:59.13]
[14:20:59] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:59] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:59] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:20:59] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:59.130')
[14:20:59] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:59.130')
[14:20:59] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:20:59.130')
[14:20:59] Statement - {conn-10014, pstmt-20024} executed. 43.689609 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:59] Statement - {conn-10014, pstmt-20024} executed. 43.689609 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:59] Statement - {conn-10014, pstmt-20024} executed. 43.689609 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:20:59] ResultSet - {conn-10014, pstmt-20024, rs-50046} open
[14:20:59] ResultSet - {conn-10014, pstmt-20024, rs-50046} open
[14:20:59] ResultSet - {conn-10014, pstmt-20024, rs-50046} Header: [GENERATED_KEY]
[14:20:59] ResultSet - {conn-10014, pstmt-20024, rs-50046} Header: [GENERATED_KEY]
[14:20:59] ResultSet - {conn-10014, pstmt-20024, rs-50046} Result: [115]
[14:20:59] ResultSet - {conn-10014, pstmt-20024, rs-50046} Result: [115]
[14:20:59] ResultSet - {conn-10014, pstmt-20024, rs-50046} closed
[14:20:59] ResultSet - {conn-10014, pstmt-20024, rs-50046} closed
[14:20:59] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:59] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:59] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:20:59] Connection - {conn-10014} pool-recycle
[14:20:59] Connection - {conn-10014} pool-recycle
[14:20:59] Connection - {conn-10014} pool-recycle
[14:21:00] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:00] Connection - {conn-10014} pool-connect
[14:21:00] Connection - {conn-10014} pool-connect
[14:21:00] Connection - {conn-10014} pool-connect
[14:21:00] Statement - {conn-10014, pstmt-20019} Parameters : [1, 29]
[14:21:00] Statement - {conn-10014, pstmt-20019} Parameters : [1, 29]
[14:21:00] Statement - {conn-10014, pstmt-20019} Parameters : [1, 29]
[14:21:00] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:21:00] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:00] Connection - {conn-10004} pool-connect
[14:21:00] Connection - {conn-10004} pool-connect
[14:21:00] Connection - {conn-10004} pool-connect
[14:21:00] Statement - {conn-10004, pstmt-20007} Parameters : [1, 29]
[14:21:00] Statement - {conn-10004, pstmt-20007} Parameters : [1, 29]
[14:21:00] Statement - {conn-10004, pstmt-20007} Parameters : [1, 29]
[14:21:00] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:00] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:00] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:00] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:00] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:00] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:00] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:00] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 9.349324 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 9.349324 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 9.349324 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:00] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:00] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:00] Connection - {conn-10004} pool-recycle
[14:21:00] Connection - {conn-10004} pool-recycle
[14:21:00] Connection - {conn-10004} pool-recycle
[14:21:00] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:21:00] Connection - {conn-10004} pool-connect
[14:21:00] Connection - {conn-10004} pool-connect
[14:21:00] Connection - {conn-10004} pool-connect
[14:21:00] Statement - {conn-10004, pstmt-20007} Parameters : [1, 29]
[14:21:00] Statement - {conn-10004, pstmt-20007} Parameters : [1, 29]
[14:21:00] Statement - {conn-10004, pstmt-20007} Parameters : [1, 29]
[14:21:00] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:00] Connection - {conn-10012} pool-connect
[14:21:00] Connection - {conn-10012} pool-connect
[14:21:00] Connection - {conn-10012} pool-connect
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 0.68301 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 0.68301 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 0.68301 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10012, pstmt-20016} Parameters : [1, 29]
[14:21:00] Statement - {conn-10012, pstmt-20016} Parameters : [1, 29]
[14:21:00] Statement - {conn-10012, pstmt-20016} Parameters : [1, 29]
[14:21:00] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:00] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:00] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:00] Connection - {conn-10004} pool-recycle
[14:21:00] Connection - {conn-10004} pool-recycle
[14:21:00] Connection - {conn-10004} pool-recycle
[14:21:00] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:21:00] Connection - {conn-10004} pool-connect
[14:21:00] Connection - {conn-10004} pool-connect
[14:21:00] Connection - {conn-10004} pool-connect
[14:21:00] Statement - {conn-10004, pstmt-20007} Parameters : [1, 29]
[14:21:00] Statement - {conn-10004, pstmt-20007} Parameters : [1, 29]
[14:21:00] Statement - {conn-10004, pstmt-20007} Parameters : [1, 29]
[14:21:00] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 0.678022 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 0.678022 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 0.678022 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:00] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:00] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:00] Connection - {conn-10004} pool-recycle
[14:21:00] Connection - {conn-10004} pool-recycle
[14:21:00] Connection - {conn-10004} pool-recycle
[14:21:00] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:21:00] Connection - {conn-10004} pool-connect
[14:21:00] Connection - {conn-10004} pool-connect
[14:21:00] Connection - {conn-10004} pool-connect
[14:21:00] Statement - {conn-10004, pstmt-20007} Parameters : [1, 29]
[14:21:00] Statement - {conn-10004, pstmt-20007} Parameters : [1, 29]
[14:21:00] Statement - {conn-10004, pstmt-20007} Parameters : [1, 29]
[14:21:00] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 0.699195 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 0.699195 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 0.699195 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:00] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:00] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:00] Connection - {conn-10004} pool-recycle
[14:21:00] Connection - {conn-10004} pool-recycle
[14:21:00] Connection - {conn-10004} pool-recycle
[14:21:00] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:21:00] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10014, pstmt-20019} executed. 103.515166 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10014, pstmt-20019} executed. 103.515166 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10014, pstmt-20019} executed. 103.515166 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:21:00] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:21:00] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:21:00] Connection - {conn-10014} pool-recycle
[14:21:00] Connection - {conn-10014} pool-recycle
[14:21:00] Connection - {conn-10014} pool-recycle
[14:21:00] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:00] Connection - {conn-10014} pool-connect
[14:21:00] Connection - {conn-10014} pool-connect
[14:21:00] Connection - {conn-10014} pool-connect
[14:21:00] Statement - {conn-10014, pstmt-20019} Parameters : [1, 29]
[14:21:00] Statement - {conn-10014, pstmt-20019} Parameters : [1, 29]
[14:21:00] Statement - {conn-10014, pstmt-20019} Parameters : [1, 29]
[14:21:00] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:21:00] Connection - {conn-10004} pool-connect
[14:21:00] Connection - {conn-10004} pool-connect
[14:21:00] Connection - {conn-10004} pool-connect
[14:21:00] Statement - {conn-10004, pstmt-20007} Parameters : [1, 29]
[14:21:00] Statement - {conn-10004, pstmt-20007} Parameters : [1, 29]
[14:21:00] Statement - {conn-10004, pstmt-20007} Parameters : [1, 29]
[14:21:00] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10014, pstmt-20019} executed. 2.196585 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10014, pstmt-20019} executed. 2.196585 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10014, pstmt-20019} executed. 2.196585 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:21:00] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:21:00] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:21:00] Connection - {conn-10014} pool-recycle
[14:21:00] Connection - {conn-10014} pool-recycle
[14:21:00] Connection - {conn-10014} pool-recycle
[14:21:00] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 4.089096 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 4.089096 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 4.089096 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:00] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:00] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:00] Connection - {conn-10004} pool-recycle
[14:21:00] Connection - {conn-10004} pool-recycle
[14:21:00] Connection - {conn-10004} pool-recycle
[14:21:00] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:21:00] Connection - {conn-10004} pool-connect
[14:21:00] Connection - {conn-10004} pool-connect
[14:21:00] Connection - {conn-10004} pool-connect
[14:21:00] Statement - {conn-10004, pstmt-20007} Parameters : [1, 29]
[14:21:00] Statement - {conn-10004, pstmt-20007} Parameters : [1, 29]
[14:21:00] Statement - {conn-10004, pstmt-20007} Parameters : [1, 29]
[14:21:00] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:00] Connection - {conn-10014} pool-connect
[14:21:00] Connection - {conn-10014} pool-connect
[14:21:00] Connection - {conn-10014} pool-connect
[14:21:00] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:21:00.123]
[14:21:00] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:21:00.123]
[14:21:00] Statement - {conn-10014, pstmt-20024} Parameters : [null, 1, 手机, 2018-06-22 14:21:00.123]
[14:21:00] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:21:00] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:21:00] Statement - {conn-10014, pstmt-20024} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 2.347533 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 2.347533 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10004, pstmt-20007} executed. 2.347533 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Connection - {conn-10015} pool-connect
[14:21:00] Connection - {conn-10015} pool-connect
[14:21:00] Connection - {conn-10015} pool-connect
[14:21:00] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:00] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:00] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:00] Connection - {conn-10004} pool-recycle
[14:21:00] Connection - {conn-10004} pool-recycle
[14:21:00] Connection - {conn-10004} pool-recycle
[14:21:00] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:21:00] Statement - {conn-10015, pstmt-20020} Parameters : [1, 29]
[14:21:00] Statement - {conn-10015, pstmt-20020} Parameters : [1, 29]
[14:21:00] Statement - {conn-10015, pstmt-20020} Parameters : [1, 29]
[14:21:00] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:21:00.123')
[14:21:00] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:21:00.123')
[14:21:00] Statement - {conn-10014, pstmt-20024} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:21:00.123')
[14:21:00] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:21:00] Statement - {conn-10014, pstmt-20024} executed. 154.638079 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:21:00] Statement - {conn-10014, pstmt-20024} executed. 154.638079 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:21:00] Statement - {conn-10014, pstmt-20024} executed. 154.638079 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:21:00] ResultSet - {conn-10014, pstmt-20024, rs-50047} open
[14:21:00] ResultSet - {conn-10014, pstmt-20024, rs-50047} open
[14:21:00] ResultSet - {conn-10014, pstmt-20024, rs-50047} Header: [GENERATED_KEY]
[14:21:00] ResultSet - {conn-10014, pstmt-20024, rs-50047} Header: [GENERATED_KEY]
[14:21:00] ResultSet - {conn-10014, pstmt-20024, rs-50047} Result: [116]
[14:21:00] ResultSet - {conn-10014, pstmt-20024, rs-50047} Result: [116]
[14:21:00] ResultSet - {conn-10014, pstmt-20024, rs-50047} closed
[14:21:00] ResultSet - {conn-10014, pstmt-20024, rs-50047} closed
[14:21:00] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:21:00] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:21:00] Statement - {conn-10014, pstmt-20024} clearParameters. 
[14:21:00] Connection - {conn-10014} pool-recycle
[14:21:00] Connection - {conn-10014} pool-recycle
[14:21:00] Connection - {conn-10014} pool-recycle
[14:21:00] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10015, pstmt-20020} executed. 202.314518 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10015, pstmt-20020} executed. 202.314518 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10015, pstmt-20020} executed. 202.314518 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] StatFilter - slow sql 202 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[1,29]
[14:21:00] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:21:00] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:21:00] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:21:00] Connection - {conn-10015} pool-recycle
[14:21:00] Connection - {conn-10015} pool-recycle
[14:21:00] Connection - {conn-10015} pool-recycle
[14:21:00] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:21:00] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 29
[14:21:00] Statement - {conn-10012, pstmt-20016} executed. 608.340832 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10012, pstmt-20016} executed. 608.340832 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] Statement - {conn-10012, pstmt-20016} executed. 608.340832 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:00] StatFilter - slow sql 608 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[1,29]
[14:21:00] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:21:00] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:21:00] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:21:00] Connection - {conn-10012} pool-recycle
[14:21:00] Connection - {conn-10012} pool-recycle
[14:21:00] Connection - {conn-10012} pool-recycle
[14:21:00] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:21:03] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:03] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:03] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:03] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:03] Connection - {conn-10012} pool-connect
[14:21:03] Connection - {conn-10012} pool-connect
[14:21:03] Connection - {conn-10012} pool-connect
[14:21:03] Statement - {conn-10012, pstmt-20016} Parameters : [1, 30]
[14:21:03] Statement - {conn-10012, pstmt-20016} Parameters : [1, 30]
[14:21:03] Statement - {conn-10012, pstmt-20016} Parameters : [1, 30]
[14:21:03] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10012, pstmt-20016} Types : [INTEGER, INTEGER]
[14:21:03] Connection - {conn-10015} pool-connect
[14:21:03] Connection - {conn-10015} pool-connect
[14:21:03] Connection - {conn-10015} pool-connect
[14:21:03] Statement - {conn-10015, pstmt-20020} Parameters : [1, 30]
[14:21:03] Statement - {conn-10015, pstmt-20020} Parameters : [1, 30]
[14:21:03] Statement - {conn-10015, pstmt-20020} Parameters : [1, 30]
[14:21:03] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:21:03] Connection - {conn-10014} pool-connect
[14:21:03] Connection - {conn-10014} pool-connect
[14:21:03] Connection - {conn-10014} pool-connect
[14:21:03] Statement - {conn-10014, pstmt-20019} Parameters : [1, 30]
[14:21:03] Statement - {conn-10014, pstmt-20019} Parameters : [1, 30]
[14:21:03] Statement - {conn-10014, pstmt-20019} Parameters : [1, 30]
[14:21:03] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 4.093847 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 4.093847 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 4.093847 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:21:03] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:21:03] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:21:03] Connection - {conn-10015} pool-recycle
[14:21:03] Connection - {conn-10015} pool-recycle
[14:21:03] Connection - {conn-10015} pool-recycle
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 1.284306 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 1.284306 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 1.284306 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:21:03] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:21:03] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:21:03] Connection - {conn-10014} pool-recycle
[14:21:03] Connection - {conn-10014} pool-recycle
[14:21:03] Connection - {conn-10014} pool-recycle
[14:21:03] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:21:03] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:21:03] Connection - {conn-10014} pool-connect
[14:21:03] Connection - {conn-10014} pool-connect
[14:21:03] Connection - {conn-10014} pool-connect
[14:21:03] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:03] Statement - {conn-10014, pstmt-20019} Parameters : [1, 30]
[14:21:03] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:03] Statement - {conn-10014, pstmt-20019} Parameters : [1, 30]
[14:21:03] Statement - {conn-10014, pstmt-20019} Parameters : [1, 30]
[14:21:03] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:21:03] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:03] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:03] Connection - {conn-10015} pool-connect
[14:21:03] Connection - {conn-10015} pool-connect
[14:21:03] Connection - {conn-10015} pool-connect
[14:21:03] Statement - {conn-10015, pstmt-20020} Parameters : [1, 30]
[14:21:03] Statement - {conn-10015, pstmt-20020} Parameters : [1, 30]
[14:21:03] Statement - {conn-10015, pstmt-20020} Parameters : [1, 30]
[14:21:03] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 3.706564 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 3.706564 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 3.706564 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:21:03] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:21:03] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:21:03] Connection - {conn-10014} pool-recycle
[14:21:03] Connection - {conn-10014} pool-recycle
[14:21:03] Connection - {conn-10014} pool-recycle
[14:21:03] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:21:03] Connection - {conn-10014} pool-connect
[14:21:03] Connection - {conn-10014} pool-connect
[14:21:03] Connection - {conn-10014} pool-connect
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 2.328396 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 2.328396 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 2.328396 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:21:03] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:21:03] Statement - {conn-10014, pstmt-20019} Parameters : [1, 30]
[14:21:03] Statement - {conn-10014, pstmt-20019} Parameters : [1, 30]
[14:21:03] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:21:03] Connection - {conn-10015} pool-recycle
[14:21:03] Connection - {conn-10015} pool-recycle
[14:21:03] Connection - {conn-10015} pool-recycle
[14:21:03] Connection - {conn-10015} pool-connect
[14:21:03] Connection - {conn-10015} pool-connect
[14:21:03] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:21:03] Connection - {conn-10004} pool-connect
[14:21:03] Connection - {conn-10004} pool-connect
[14:21:03] Connection - {conn-10004} pool-connect
[14:21:03] Statement - {conn-10004, pstmt-20007} Parameters : [1, 30]
[14:21:03] Statement - {conn-10004, pstmt-20007} Parameters : [1, 30]
[14:21:03] Statement - {conn-10004, pstmt-20007} Parameters : [1, 30]
[14:21:03] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10004, pstmt-20007} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10004, pstmt-20007} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10004, pstmt-20007} executed. 0.932564 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10004, pstmt-20007} executed. 0.932564 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10004, pstmt-20007} executed. 0.932564 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:03] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:03] Statement - {conn-10004, pstmt-20007} clearParameters. 
[14:21:03] Connection - {conn-10004} pool-recycle
[14:21:03] Connection - {conn-10004} pool-recycle
[14:21:03] Connection - {conn-10004} pool-recycle
[14:21:03] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:21:03] Statement - {conn-10014, pstmt-20019} Parameters : [1, 30]
[14:21:03] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:21:03] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:03] DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.0.1, current host: 192.168.116.168
[14:21:03] Connection - {conn-10015} pool-connect
[14:21:03] Statement - {conn-10015, pstmt-20020} Parameters : [1, 30]
[14:21:03] Statement - {conn-10015, pstmt-20020} Parameters : [1, 30]
[14:21:03] Statement - {conn-10015, pstmt-20020} Parameters : [1, 30]
[14:21:03] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 0.92989 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 0.92989 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 0.92989 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:21:03] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:21:03] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:21:03] Connection - {conn-10015} pool-recycle
[14:21:03] Connection - {conn-10015} pool-recycle
[14:21:03] Connection - {conn-10015} pool-recycle
[14:21:03] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 7.732282 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 7.732282 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 7.732282 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:21:03] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:21:03] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:21:03] Connection - {conn-10014} pool-recycle
[14:21:03] Connection - {conn-10014} pool-recycle
[14:21:03] Connection - {conn-10014} pool-recycle
[14:21:03] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:21:03] Connection - {conn-10014} pool-connect
[14:21:03] Connection - {conn-10014} pool-connect
[14:21:03] Connection - {conn-10014} pool-connect
[14:21:03] Statement - {conn-10014, pstmt-20019} Parameters : [1, 30]
[14:21:03] Statement - {conn-10014, pstmt-20019} Parameters : [1, 30]
[14:21:03] Statement - {conn-10014, pstmt-20019} Parameters : [1, 30]
[14:21:03] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10014, pstmt-20019} Types : [INTEGER, INTEGER]
[14:21:03] Connection - {conn-10015} pool-connect
[14:21:03] Connection - {conn-10015} pool-connect
[14:21:03] Connection - {conn-10015} pool-connect
[14:21:03] Statement - {conn-10015, pstmt-20020} Parameters : [1, 30]
[14:21:03] Statement - {conn-10015, pstmt-20020} Parameters : [1, 30]
[14:21:03] Statement - {conn-10015, pstmt-20020} Parameters : [1, 30]
[14:21:03] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10015, pstmt-20020} Types : [INTEGER, INTEGER]
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 7.626166 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 7.626166 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10015, pstmt-20020} executed. 7.626166 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:21:03] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:21:03] Statement - {conn-10015, pstmt-20020} clearParameters. 
[14:21:03] Connection - {conn-10015} pool-recycle
[14:21:03] Connection - {conn-10015} pool-recycle
[14:21:03] Connection - {conn-10015} pool-recycle
[14:21:03] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 9.898287 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 9.898287 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10014, pstmt-20019} executed. 9.898287 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:21:03] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:21:03] Statement - {conn-10014, pstmt-20019} clearParameters. 
[14:21:03] Connection - {conn-10014} pool-recycle
[14:21:03] Connection - {conn-10014} pool-recycle
[14:21:03] Connection - {conn-10014} pool-recycle
[14:21:03] ExceptionFilter -  [DUBBO] Got unchecked and undeclared exception which called by 192.168.116.168. service: com.crossoverJie.seconds.kill.api.OrderServiceFacade, method: createOptimisticOrderUseRedis, exception: java.lang.RuntimeException: 并发更新库存失败, dubbo version: 2.0.1, current host: 192.168.116.168
java.lang.RuntimeException: 并发更新库存失败
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.saleStockOptimisticByRedis(OrderServiceImpl.java:158)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:94)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$5bc21dea.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)
	at com.crossoverJie.seconds.kill.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$aa55187.createOptimisticOrderUseRedis(<generated>)
	at com.crossoverJie.seconds.kill.api.impl.OrderServiceImpl.createOptimisticOrderUseRedis(OrderServiceImpl.java:40)
	at com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
	at com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)
	at com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)
	at com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)
	at com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)
	at com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:60)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:95)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)
	at com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)
	at com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[14:21:03] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10012, pstmt-20016} executed. 
UPDATE stock
SET sale = sale + 1, version = version + 1
WHERE id = 1
	AND version = 30
[14:21:03] Statement - {conn-10012, pstmt-20016} executed. 164.24945 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10012, pstmt-20016} executed. 164.24945 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10012, pstmt-20016} executed. 164.24945 millis. 
update stock
       SET sale = sale + 1,
          version = version + 1 

      WHERE id = ?
      AND version = ?
[14:21:03] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:21:03] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:21:03] Statement - {conn-10012, pstmt-20016} clearParameters. 
[14:21:03] Connection - {conn-10012} pool-recycle
[14:21:03] Connection - {conn-10012} pool-recycle
[14:21:03] Connection - {conn-10012} pool-recycle
[14:21:03] Connection - {conn-10012} pool-connect
[14:21:03] Connection - {conn-10012} pool-connect
[14:21:03] Connection - {conn-10012} pool-connect
[14:21:03] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:21:03.583]
[14:21:03] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:21:03.583]
[14:21:03] Statement - {conn-10012, pstmt-20017} Parameters : [null, 1, 手机, 2018-06-22 14:21:03.583]
[14:21:03] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:21:03] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:21:03] Statement - {conn-10012, pstmt-20017} Types : [INTEGER, INTEGER, VARCHAR, TIMESTAMP]
[14:21:03] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:21:03.583')
[14:21:03] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:21:03.583')
[14:21:03] Statement - {conn-10012, pstmt-20017} executed. 
INSERT INTO stock_order (id, sid, name, create_time)
VALUES (NULL, 1, '手机', '2018-06-22 14:21:03.583')
[14:21:03] Statement - {conn-10012, pstmt-20017} executed. 34.543427 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:21:03] Statement - {conn-10012, pstmt-20017} executed. 34.543427 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:21:03] Statement - {conn-10012, pstmt-20017} executed. 34.543427 millis. 
insert into stock_order (id, sid, name,
    create_time)
    values (?, ?, ?,
    ?)
[14:21:03] ResultSet - {conn-10012, pstmt-20017, rs-50048} open
[14:21:03] ResultSet - {conn-10012, pstmt-20017, rs-50048} open
[14:21:03] ResultSet - {conn-10012, pstmt-20017, rs-50048} Header: [GENERATED_KEY]
[14:21:03] ResultSet - {conn-10012, pstmt-20017, rs-50048} Header: [GENERATED_KEY]
[14:21:03] ResultSet - {conn-10012, pstmt-20017, rs-50048} Result: [117]
[14:21:03] ResultSet - {conn-10012, pstmt-20017, rs-50048} Result: [117]
[14:21:03] ResultSet - {conn-10012, pstmt-20017, rs-50048} closed
[14:21:03] ResultSet - {conn-10012, pstmt-20017, rs-50048} closed
[14:21:03] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:21:03] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:21:03] Statement - {conn-10012, pstmt-20017} clearParameters. 
[14:21:03] Connection - {conn-10012} pool-recycle
[14:21:03] Connection - {conn-10012} pool-recycle
[14:21:03] Connection - {conn-10012} pool-recycle
[14:22:11] HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:23:26] HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.116.168:46404, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.0.1, current host: 192.168.116.168
[14:23:26] HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-2, dubbo version: 2.0.1, current host: 192.168.116.168
